"use strict";(self.webpackChunkying_blog=self.webpackChunkying_blog||[]).push([[8617],{296:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var t=r(3274),s=r(9128);const o={id:"docking-realtime-message",sidebar_label:"\u5ba2\u6237\u7aef\u5bf9\u63a5\u5373\u65f6\u901a\u8baf",title:"\u5ba2\u6237\u7aef\u5bf9\u63a5\u5373\u65f6\u901a\u8baf"},a=void 0,c={id:"ying-chat/docking-realtime-message",title:"\u5ba2\u6237\u7aef\u5bf9\u63a5\u5373\u65f6\u901a\u8baf",description:"\u672c\u8282\u5c06\u6765\u5ba2\u6237\u7aef\u4f7f\u7528socket.io-client\u5bf9\u63a5\u5373\u65f6\u901a\u4fe1\u3002",source:"@site/docs/ying-chat/20-docking-realtime-message.md",sourceDirName:"ying-chat",slug:"/ying-chat/docking-realtime-message",permalink:"/docs/ying-chat/docking-realtime-message",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:20,frontMatter:{id:"docking-realtime-message",sidebar_label:"\u5ba2\u6237\u7aef\u5bf9\u63a5\u5373\u65f6\u901a\u8baf",title:"\u5ba2\u6237\u7aef\u5bf9\u63a5\u5373\u65f6\u901a\u8baf"},sidebar:"yingChat",previous:{title:"\u4f7f\u7528socket.io\u5b9e\u73b0\u5373\u65f6\u901a\u8baf",permalink:"/docs/ying-chat/realtime-message-and-socket.io"},next:{title:"\u4f7f\u7528docker\u6253\u5305\u6574\u4e2a\u5e94\u7528\u90e8\u7f72",permalink:"/docs/ying-chat/docker-build-deploy"}},i={},d=[{value:"\u51c6\u5907 SocketProvider",id:"\u51c6\u5907-socketprovider",level:2},{value:"\u5bf9\u8bdd\u9875\u9762\u6d88\u606f\u5217\u8868\u4fee\u6539",id:"\u5bf9\u8bdd\u9875\u9762\u6d88\u606f\u5217\u8868\u4fee\u6539",level:2},{value:"\u5bf9\u8bdd\u4fa7\u8fb9\u680f\u4fee\u6539",id:"\u5bf9\u8bdd\u4fa7\u8fb9\u680f\u4fee\u6539",level:2},{value:"\u6d88\u606f\u7ec4\u4ef6",id:"\u6d88\u606f\u7ec4\u4ef6",level:2}];function l(e){const n={code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["\u672c\u8282\u5c06\u6765\u5ba2\u6237\u7aef\u4f7f\u7528",(0,t.jsx)(n.code,{children:"socket.io-client"}),"\u5bf9\u63a5\u5373\u65f6\u901a\u4fe1\u3002"]}),"\n",(0,t.jsx)(n.h2,{id:"\u51c6\u5907-socketprovider",children:"\u51c6\u5907 SocketProvider"}),"\n",(0,t.jsx)(n.p,{children:"\u5148\u5b89\u88c5\u4f9d\u8d56\u4f9d\u8d56\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",metastring:'title="apps/client"',children:"pnpm i socket.io-client\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u5728",(0,t.jsx)(n.code,{children:"src"}),"\u4e0b\u65b0\u5efa\u4e00\u4e2a",(0,t.jsx)(n.code,{children:"socket"}),"\u6587\u4ef6\u5939\uff0c\u6dfb\u52a0\u4e00\u4e2a",(0,t.jsx)(n.code,{children:"socket-provider.tsx"}),"\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",metastring:'title="apps/client/src/socket/socket-provider.tsx"',children:"import React, { createContext, useEffect, useState } from 'react'\r\nimport { io, Socket } from 'socket.io-client'\r\nimport { useAuthStore, resetAuth } from '@/stores'\r\n\r\ntype TSocketContext = {\r\n  socket: Socket | undefined\r\n  connected: boolean\r\n}\r\n\r\nexport const SocketContext = createContext<TSocketContext>({\r\n  socket: undefined,\r\n  connected: false\r\n})\r\n\r\nconst useSocketIo = () => {\r\n  const [socket, setSocket] = useState<Socket | undefined>()\r\n  const [connected, setConnected] = useState(false)\r\n\r\n  const token = useAuthStore(state => state.token)\r\n\r\n  useEffect(() => {\r\n    const socket = io({\r\n      extraHeaders: {\r\n        authorization: token\r\n      }\r\n    })\r\n\r\n    socket.on('connect', () => {\r\n      setConnected(true)\r\n    })\r\n    socket.on('disconnect', () => {\r\n      setConnected(false)\r\n    })\r\n\r\n    socket.on('authFail', () => {\r\n      resetAuth()\r\n    })\r\n\r\n    setSocket(socket)\r\n\r\n    return () => {\r\n      socket.disconnect()\r\n    }\r\n  }, [token])\r\n\r\n  return {\r\n    socket,\r\n    connected\r\n  }\r\n}\r\n\r\ntype SocketProviderProps = {\r\n  children: React.ReactNode\r\n}\r\n\r\nexport const SocketProvider: React.FC<SocketProviderProps> = ({ children }) => {\r\n  const { socket, connected } = useSocketIo()\r\n\r\n  return (\r\n    <SocketContext.Provider value={{ socket, connected }}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  )\r\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u518d\u6dfb\u52a0\u4e00\u4e2a",(0,t.jsx)(n.code,{children:"useSocket"}),"hook\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",metastring:'title="apps/client/src/socket/use-socket.ts"',children:"import { useContext } from 'react'\r\nimport { SocketContext } from './socket-provider'\r\n\r\nexport const useSocket = () => {\r\n  return useContext(SocketContext)\r\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u5bfc\u51fa\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",metastring:'title="apps/client/src/socket/index.ts"',children:"export * from './socket-provider'\r\nexport * from './use-socket'\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u5728",(0,t.jsx)(n.code,{children:"AppLayout"}),"\u91cc\u9762\u5f15\u5165",(0,t.jsx)(n.code,{children:"SocketProvider"}),"\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",metastring:'title="apps/client/src/components/layout/index.tsx"',children:"// ...\r\nimport { SocketProvider } from '@/socket'\r\n\r\nexport const AppLayout = () => {\r\n  return useAuthRoute(<SocketProvider>{/*  */}</SocketProvider>)\r\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u8fd8\u5f97\u5728",(0,t.jsx)(n.code,{children:"vite.config.ts"}),"\u91cc\u914d\u7f6e\u4e00\u4e0b\u4ee3\u7406\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",metastring:'title="apps/client/vite.config.ts"',children:"// ...\r\nexport default defineConfig({\r\n  // ...\r\n  server: {\r\n    proxy: {\r\n      // ...\r\n      '/socket.io': {\r\n        target: 'http://localhost:3000',\r\n        ws: true\r\n      }\r\n    }\r\n  }\r\n})\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\u5bf9\u8bdd\u9875\u9762\u6d88\u606f\u5217\u8868\u4fee\u6539",children:"\u5bf9\u8bdd\u9875\u9762\u6d88\u606f\u5217\u8868\u4fee\u6539"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",metastring:'title="apps/client/src/pages/conversation/messages/messages.tsx"',children:"import {\r\n  // ...\r\n  RefObject\r\n} from 'react'\r\n// ...\r\nimport {\r\n  // ...\r\n  Chip\r\n} from '@nextui-org/react'\r\n// ...\r\nimport { useSocket } from '@/socket'\r\nimport { ArrowDown } from 'lucide-react'\r\n\r\n// ...\r\nconst GROUP_MESSAGE_KEY = 'group-message'\r\n\r\n// ...\r\n\r\nconst useRealtimeMessage = (\r\n  scrollBoxRef: RefObject<ScollBoxHandle>,\r\n  addNewMessage: (newMessage: GroupMessageVo) => void\r\n) => {\r\n  const [unreadNum, setUnreadNum] = useState(0)\r\n  const { socket } = useSocket()\r\n  const { groupId } = useParams()\r\n\r\n  useEffect(() => {\r\n    if (!groupId || !socket) return\r\n\r\n    const handleNewMessage = (message: GroupMessageVo) => {\r\n      const distanceFromBottom = scrollBoxRef.current?.getDistanceFromBottom()\r\n      if (\r\n        scrollBoxRef.current &&\r\n        document.visibilityState === 'visible' &&\r\n        Number(distanceFromBottom) <= 300\r\n      ) {\r\n        scrollBoxRef.current?.keepBottom(() => {\r\n          addNewMessage(message)\r\n        })\r\n      } else {\r\n        addNewMessage(message)\r\n        setUnreadNum(preNum => preNum + 1)\r\n      }\r\n    }\r\n\r\n    socket.on(`${GROUP_MESSAGE_KEY}:${groupId}`, handleNewMessage)\r\n\r\n    return () => {\r\n      socket.off(`${GROUP_MESSAGE_KEY}:${groupId}`, handleNewMessage)\r\n    }\r\n  }, [socket, scrollBoxRef, groupId, addNewMessage])\r\n\r\n  return {\r\n    unreadNum,\r\n    setUnreadNum\r\n  }\r\n}\r\n\r\nexport const ChatMessages = () => {\r\n  // ...\r\n  const { messages, firstLoaded, loaded, loadPrevMessages, addNewMessage } =\r\n    useMessages()\r\n\r\n  const { unreadNum, setUnreadNum } = useRealtimeMessage(\r\n    scrollBoxRef,\r\n    addNewMessage\r\n  )\r\n\r\n  // ...\r\n\r\n  return (\r\n    <div className=\"flex-1 h-[1px] relative\">\r\n      {unreadNum ? (\r\n        <Chip\r\n          className=\"absolute top-10 right-5 z-30 cursor-pointer\"\r\n          startContent={<ArrowDown />}\r\n          variant=\"solid\"\r\n          color=\"success\"\r\n          onClick={() => {\r\n            scrollBoxRef.current?.scrollToBottom('smooth')\r\n            setUnreadNum(0)\r\n          }}\r\n        >\r\n          {`you have ${unreadNum} new messages`}\r\n        </Chip>\r\n      ) : null}\r\n\r\n      {/*  */}\r\n    </div>\r\n  )\r\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\u5bf9\u8bdd\u4fa7\u8fb9\u680f\u4fee\u6539",children:"\u5bf9\u8bdd\u4fa7\u8fb9\u680f\u4fee\u6539"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",metastring:'title="apps/client/src/pages/conversation/use-conversation.ts"',children:"import {\r\n  // ...\r\n  useEffect\r\n} from 'react'\r\n// ...\r\nimport { ConversationVo, GroupMessageVo } from '@ying-chat/shared'\r\nimport { useSocket } from '@/socket'\r\nimport { debounce } from '@/utils'\r\n\r\nexport const useConversationLogic = () => {\r\n  // ...\r\n\r\n  const { data, setData } = useApi<ConversationVo[]>({\r\n    func: useCallback(() => conversationApi.getConversationList(), [])\r\n  })\r\n\r\n  // ...\r\n\r\n  const { socket } = useSocket()\r\n\r\n  const updateLastMsgCache = useCallback(\r\n    (messageId: number) => {\r\n      if (!currentConversation || currentConversation.lastMsgId >= messageId)\r\n        return\r\n\r\n      socket?.emit('update-last-msg', {\r\n        id: currentConversation.id,\r\n        messageId\r\n      })\r\n    },\r\n    [socket, currentConversation]\r\n  )\r\n\r\n  const updateLastMsg = debounce(updateLastMsgCache, 200)\r\n\r\n  const handleNewMessage = useCallback(\r\n    (message: GroupMessageVo) => {\r\n      setData(prevData =>\r\n        prevData?.map(el => {\r\n          if (el.groupId === message.groupId) {\r\n            return {\r\n              ...el,\r\n              recentMsg: message,\r\n              unreadNum: el.unreadNum + 1\r\n            }\r\n          }\r\n          return el\r\n        })\r\n      )\r\n    },\r\n    [setData]\r\n  )\r\n\r\n  useEffect(() => {\r\n    data?.forEach(el => {\r\n      socket?.on(`group-message:${el.groupId}`, handleNewMessage)\r\n    })\r\n\r\n    return () => {\r\n      data?.forEach(el => {\r\n        socket?.off(`group-message:${el.groupId}`, handleNewMessage)\r\n      })\r\n    }\r\n  }, [socket, data, handleNewMessage])\r\n\r\n  useEffect(() => {\r\n    const handleUpdateConversation = (conversation: ConversationVo) => {\r\n      setData(prevData =>\r\n        prevData?.map(el => {\r\n          if (el.id === conversation.id) {\r\n            return {\r\n              ...el,\r\n              lastMsgId: conversation.lastMsgId,\r\n              unreadNum: conversation.unreadNum\r\n            }\r\n          }\r\n          return el\r\n        })\r\n      )\r\n    }\r\n    socket?.on('update-last-msg', handleUpdateConversation)\r\n\r\n    return () => {\r\n      socket?.off('update-last-msg', handleUpdateConversation)\r\n    }\r\n  }, [socket, setData])\r\n\r\n  return {\r\n    // ...\r\n    updateLastMsg\r\n  }\r\n}\r\n\r\ntype TConversationContext = {\r\n  // ...\r\n  updateLastMsg: (msgId: number) => void\r\n}\r\n\r\nexport const ConversationContext = createContext<TConversationContext>({\r\n  // ...\r\n  updateLastMsg: () => {}\r\n})\r\n\r\n// ...\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u66f4\u65b0\u4e00\u4e0b",(0,t.jsx)(n.code,{children:"ConversationProvider"}),"\uff0c\u6dfb\u52a0",(0,t.jsx)(n.code,{children:"updateLastMsg"}),"\u51fd\u6570\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",metastring:'title="apps/client/src/pages/conversation/conversation-provider.tsx"',children:"// ...\r\n\r\nexport const ConversationProvider: React.FC<ConversationProviderProps> = ({\r\n  children\r\n}) => {\r\n  const {\r\n    // ...\r\n    updateLastMsg\r\n  } = useConversationLogic()\r\n\r\n  return (\r\n    <ConversationContext.Provider\r\n      value={{\r\n        // ...,\r\n        updateLastMsg\r\n      }}\r\n    >\r\n      {children}\r\n    </ConversationContext.Provider>\r\n  )\r\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\u6d88\u606f\u7ec4\u4ef6",children:"\u6d88\u606f\u7ec4\u4ef6"}),"\n",(0,t.jsxs)(n.p,{children:["\u901a\u8fc7",(0,t.jsx)(n.code,{children:"IntersectionObserver"}),"\u76d1\u542c\u6d88\u606f\u7ec4\u4ef6\u662f\u5426\u88ab\u7528\u6237\u770b\u5230\uff0c\u770b\u5230\u5219\u7528",(0,t.jsx)(n.code,{children:"updateLastMsg"}),"\u51fd\u6570\u66f4\u65b0\u6700\u540e\u4e00\u6761\u4fe1\u606f id\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",metastring:'title="apps/client/src/pages/conversation/messages/message-item.tsx"',children:"import {\r\n  // ...\r\n  useEffect\r\n} from 'react'\r\n// ...\r\nimport { useObserver } from '@/components/scroll-box'\r\nimport { useConversation } from '../use-conversation'\r\n\r\n// ...\r\n\r\nexport const ChatMessageItem = ({ message }: ChatMessageItemProps) => {\r\n  const messageItemRef = useRef(null)\r\n\r\n  const { observer } = useObserver()\r\n  const { updateLastMsg } = useConversation()\r\n\r\n  useEffect(() => {\r\n    if (!observer || !messageItemRef.current) return\r\n\r\n    const unObserver = observer(messageItemRef.current, () => {\r\n      updateLastMsg(message.id)\r\n      unObserver()\r\n    })\r\n\r\n    return unObserver\r\n  }, [observer, messageItemRef, updateLastMsg, message])\r\n\r\n  return <MessageItem ref={messageItemRef} message={message} />\r\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u6700\u540e\u6d4b\u8bd5\u4e00\u4e0b\u3002"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:r(3133).A+"",width:"1920",height:"1080"})}),"\n",(0,t.jsx)(n.p,{children:"\u672c\u8282\u5230\u6b64\u7ed3\u675f\u3002"})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},3133:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/01-a88ca7ef2bd41bddd23e7692b1147d8b.gif"},9128:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>c});var t=r(9474);const s={},o=t.createContext(s);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);