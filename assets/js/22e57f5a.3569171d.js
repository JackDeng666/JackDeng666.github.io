"use strict";(self.webpackChunkying_blog=self.webpackChunkying_blog||[]).push([[1554],{9613:(e,n,r)=>{r.d(n,{Zo:()=>l,kt:()=>g});var t=r(9496);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function p(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var a=t.createContext({}),u=function(e){var n=t.useContext(a),r=n;return e&&(r="function"==typeof e?e(n):p(p({},n),e)),r},l=function(e){var n=u(e.components);return t.createElement(a.Provider,{value:n},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=u(r),d=o,g=m["".concat(a,".").concat(d)]||m[d]||c[d]||i;return r?t.createElement(g,p(p({ref:n},l),{},{components:r})):t.createElement(g,p({ref:n},l))}));function g(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=r.length,p=new Array(i);p[0]=d;var s={};for(var a in n)hasOwnProperty.call(n,a)&&(s[a]=n[a]);s.originalType=e,s[m]="string"==typeof e?e:o,p[1]=s;for(var u=2;u<i;u++)p[u]=r[u];return t.createElement.apply(null,p)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4513:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>p,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var t=r(8957),o=(r(9496),r(9613));const i={id:"group-api",sidebar_label:"\u7fa4\u7ec4\u76f8\u5173api\u5b9e\u73b0",title:"\u7fa4\u7ec4\u76f8\u5173api\u5b9e\u73b0"},p=void 0,s={unversionedId:"ying-chat/group-api",id:"ying-chat/group-api",title:"\u7fa4\u7ec4\u76f8\u5173api\u5b9e\u73b0",description:"\u672c\u8282\u6765\u5b9e\u73b0\u7fa4\u7ec4\u76f8\u5173\u7684\u6240\u6709 api\u3002",source:"@site/docs/ying-chat/14-group-api.md",sourceDirName:"ying-chat",slug:"/ying-chat/group-api",permalink:"/docs/ying-chat/group-api",draft:!1,tags:[],version:"current",sidebarPosition:14,frontMatter:{id:"group-api",sidebar_label:"\u7fa4\u7ec4\u76f8\u5173api\u5b9e\u73b0",title:"\u7fa4\u7ec4\u76f8\u5173api\u5b9e\u73b0"},sidebar:"yingChat",previous:{title:"\u7528\u6237\u5934\u50cf\u548c\u96c6\u6210MinIO",permalink:"/docs/ying-chat/user-avatar-and-integrated-minio"},next:{title:"\u5ba2\u6237\u7aef\u5bf9\u63a5\u7fa4\u7ec4api",permalink:"/docs/ying-chat/docking-group-api"}},a={},u=[{value:"\u6dfb\u52a0\u4e00\u4e2a<code>GroupRoleType</code>\u679a\u4e3e",id:"\u6dfb\u52a0\u4e00\u4e2agrouproletype\u679a\u4e3e",level:3},{value:"\u7fa4\u5b9e\u4f53\u6dfb\u52a0",id:"\u7fa4\u5b9e\u4f53\u6dfb\u52a0",level:3},{value:"DTO \u51c6\u5907",id:"dto-\u51c6\u5907",level:3},{value:"\u5b9e\u73b0\u6240\u9700\u8981\u7684\u6240\u6709\u7fa4\u63a5\u53e3",id:"\u5b9e\u73b0\u6240\u9700\u8981\u7684\u6240\u6709\u7fa4\u63a5\u53e3",level:3}],l={toc:u},m="wrapper";function c(e){let{components:n,...r}=e;return(0,o.kt)(m,(0,t.Z)({},l,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u672c\u8282\u6765\u5b9e\u73b0\u7fa4\u7ec4\u76f8\u5173\u7684\u6240\u6709 api\u3002"),(0,o.kt)("h3",{id:"\u6dfb\u52a0\u4e00\u4e2agrouproletype\u679a\u4e3e"},"\u6dfb\u52a0\u4e00\u4e2a",(0,o.kt)("inlineCode",{parentName:"h3"},"GroupRoleType"),"\u679a\u4e3e"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="packages/shared/src/enum/group.enum.ts"',title:'"packages/shared/src/enum/group.enum.ts"'},"export enum GroupRoleType {\n  Owner,\n  Member\n}\n")),(0,o.kt)("p",null,"\u5bfc\u51fa\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="packages/shared/src/enum/index.ts"',title:'"packages/shared/src/enum/index.ts"'},"// ...\nexport * from './group.enum'\n")),(0,o.kt)("h3",{id:"\u7fa4\u5b9e\u4f53\u6dfb\u52a0"},"\u7fa4\u5b9e\u4f53\u6dfb\u52a0"),(0,o.kt)("p",null,"\u5148\u6dfb\u52a0\u4e00\u4e2a",(0,o.kt)("inlineCode",{parentName:"p"},"GroupConversationEntity"),"\u4f5c\u4e3a\u7528\u6237\u548c\u7fa4\u4e4b\u524d\u7684\u4e2d\u95f4\u8868\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="apps/server/src/modules/db/entities/group-conversation.entity.ts"',title:'"apps/server/src/modules/db/entities/group-conversation.entity.ts"'},"import { Column, Entity, JoinColumn, ManyToOne, PrimaryColumn } from 'typeorm'\nimport { GroupRoleType } from '@ying-chat/shared'\nimport { BaseEntity } from './base.entity'\nimport { UserEntity } from './user.entity'\nimport { GroupEntity } from './group.entity'\n\n@Entity({ name: 'group_conversation' })\nexport class GroupConversationEntity extends BaseEntity {\n  @Column({\n    type: 'enum',\n    enum: GroupRoleType,\n    comment: '0 Owner; 1 Member;'\n  })\n  userRole: GroupRoleType\n\n  @Column({\n    nullable: true\n  })\n  lastMsgId: number\n\n  unreadNum?: number\n\n  @PrimaryColumn()\n  userId: number\n\n  @ManyToOne(() => UserEntity)\n  @JoinColumn()\n  user: UserEntity\n\n  @PrimaryColumn()\n  groupId: number\n\n  @ManyToOne(() => GroupEntity)\n  @JoinColumn()\n  group: GroupEntity\n}\n")),(0,o.kt)("p",null,"\u518d\u6dfb\u52a0\u4e00\u4e0b",(0,o.kt)("inlineCode",{parentName:"p"},"GroupEntity"),"\uff0c\u5173\u8054\u4e0a\u9762\u7684\u4e2d\u95f4\u8868\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="apps/server/src/modules/db/entities/group.entity.ts"',title:'"apps/server/src/modules/db/entities/group.entity.ts"'},"import {\n  Column,\n  Entity,\n  JoinColumn,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToOne\n} from 'typeorm'\nimport { UserEntity } from './user.entity'\nimport { FileEntity } from './file.entity'\nimport { BaseEntity } from './base.entity'\n\n@Entity({ name: 'group' })\nexport class GroupEntity extends BaseEntity {\n  @Column({\n    length: 32\n  })\n  name: string\n\n  @Column({\n    length: 100,\n    nullable: true\n  })\n  description: string\n\n  @Column({\n    length: 32,\n    unique: true\n  })\n  inviteCode: string\n\n  @Column()\n  coverId: number\n\n  @OneToOne(() => FileEntity)\n  @JoinColumn()\n  cover: FileEntity\n\n  @Column()\n  createById: number\n\n  @ManyToOne(() => UserEntity)\n  @JoinColumn()\n  createBy: UserEntity\n\n  @ManyToMany(() => UserEntity)\n  @JoinTable({\n    name: 'group_conversation',\n    synchronize: false\n  })\n  users: UserEntity[]\n}\n")),(0,o.kt)("p",null,"\u4fee\u6539\u4e00\u4e0b",(0,o.kt)("inlineCode",{parentName:"p"},"UserEntity"),"\uff0c\u5173\u8054\u4e0a\u9762\u7684\u4e2d\u95f4\u8868\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="apps/server/src/modules/db/entities/user.entity.ts"',title:'"apps/server/src/modules/db/entities/user.entity.ts"'},"// ...\nimport {\n  // ...\n  ManyToMany\n} from 'typeorm'\nimport { GroupEntity } from './group.entity'\n\n@Entity({ name: 'user' })\nexport class UserEntity extends BaseEntity {\n  // ...\n\n  @ManyToMany(() => GroupEntity)\n  groups: GroupEntity[]\n\n  // ...\n}\n")),(0,o.kt)("p",null,"\u8fd9\u65f6\u5019\u670d\u52a1\u7aef\u4f1a\u62a5\u9519\uff0c\u540e\u9762\u6dfb\u52a0\u597d",(0,o.kt)("inlineCode",{parentName:"p"},"GroupModule"),"\u52a0\u8f7d\u597d\u7fa4\u5b9e\u4f53\u540e\u5c31\u4e0d\u4f1a\u62a5\u9519\u4e86\u3002"),(0,o.kt)("h3",{id:"dto-\u51c6\u5907"},"DTO \u51c6\u5907"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="packages/shared/src/dto/create-group.dto.ts"',title:'"packages/shared/src/dto/create-group.dto.ts"'},"import {\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  MaxLength,\n  MinLength\n} from 'class-validator'\n\nexport class CreateGroupDto {\n  @MinLength(2)\n  @MaxLength(32)\n  @IsNotEmpty()\n  name: string\n\n  @IsNumber()\n  @IsNotEmpty()\n  coverId: number\n\n  @MinLength(2)\n  @MaxLength(100)\n  @IsOptional()\n  description?: string\n}\n")),(0,o.kt)("p",null,"\u5bfc\u51fa\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="packages/shared/src/dto/index.ts"',title:'"packages/shared/src/dto/index.ts"'},"// ...\nexport * from './create-group.dto'\n")),(0,o.kt)("h3",{id:"\u5b9e\u73b0\u6240\u9700\u8981\u7684\u6240\u6709\u7fa4\u63a5\u53e3"},"\u5b9e\u73b0\u6240\u9700\u8981\u7684\u6240\u6709\u7fa4\u63a5\u53e3"),(0,o.kt)("p",null,"\u65b0\u5efa\u4e00\u4e2a",(0,o.kt)("inlineCode",{parentName:"p"},"group"),"\u6587\u4ef6\u5939\uff0c\u7136\u540e\u521b\u5efa",(0,o.kt)("inlineCode",{parentName:"p"},"GroupService"),"\uff0c\u5728\u91cc\u9762\u4e00\u6b21\u6027\u5b9e\u73b0\u521b\u5efa\u7fa4\u7ec4\uff0c\u4e0a\u4f20\u7fa4\u5c01\u9762\uff0c\u52a0\u5165\u7fa4\u7ec4\uff0c\u83b7\u53d6\u7528\u6237\u7fa4\u7ec4\u5217\u8868\uff0c\u83b7\u53d6\u7fa4\u8be6\u60c5\u7684\u6240\u6709\u51fd\u6570\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="apps/server/src/modules/group/group.service.ts"',title:'"apps/server/src/modules/group/group.service.ts"'},"import { HttpException, HttpStatus, Inject, Injectable } from '@nestjs/common'\nimport { InjectRepository } from '@nestjs/typeorm'\nimport { Repository } from 'typeorm'\nimport { nanoid } from 'nanoid'\nimport { GroupEntity, GroupConversationEntity } from '@/modules/db/entities'\nimport { FileService } from '@/modules/file/file.service'\nimport { CreateGroupDto, FileType, GroupRoleType } from '@ying-chat/shared'\n\n@Injectable()\nexport class GroupService {\n  @InjectRepository(GroupEntity)\n  private readonly groupRepository: Repository<GroupEntity>\n\n  @InjectRepository(GroupConversationEntity)\n  private readonly groupConversationRepository: Repository<GroupConversationEntity>\n\n  @Inject()\n  private readonly fileService: FileService\n\n  async create(createGroupDto: CreateGroupDto, userId: number) {\n    const newGroup = new GroupEntity()\n    newGroup.name = createGroupDto.name\n    newGroup.description = createGroupDto.description\n    newGroup.coverId = createGroupDto.coverId\n    newGroup.createById = userId\n    newGroup.inviteCode = nanoid()\n\n    const group = await this.groupRepository.save(newGroup)\n\n    const newGroupConversation = new GroupConversationEntity()\n    newGroupConversation.userId = userId\n    newGroupConversation.groupId = group.id\n    newGroupConversation.userRole = GroupRoleType.Owner\n\n    await this.groupConversationRepository.save(newGroupConversation)\n\n    return group\n  }\n\n  async uploadGroupCover(file: Express.Multer.File, userId: number) {\n    const minioFile = await this.fileService.uploadFile({\n      file,\n      fileType: FileType.Cover,\n      userId\n    })\n\n    return minioFile\n  }\n\n  async joinGroup(userId: number, inviteCode: string) {\n    const group = await this.groupRepository.findOne({\n      where: {\n        inviteCode\n      }\n    })\n    if (!group) {\n      throw new HttpException('invite code invalid', HttpStatus.NOT_ACCEPTABLE)\n    }\n    const conversationExists = await this.groupConversationRepository.findOne({\n      where: {\n        userId,\n        groupId: group.id\n      }\n    })\n    if (conversationExists) {\n      throw new HttpException(\n        'you have already in the group',\n        HttpStatus.NOT_ACCEPTABLE\n      )\n    }\n\n    const newGroupConversation = new GroupConversationEntity()\n    newGroupConversation.userId = userId\n    newGroupConversation.groupId = group.id\n    newGroupConversation.userRole = GroupRoleType.Member\n    await this.groupConversationRepository.save(newGroupConversation)\n  }\n\n  async getUserGroupList(userId: number) {\n    const groups = await this.groupConversationRepository.find({\n      where: { userId },\n      relations: ['group', 'group.cover']\n    })\n\n    return {\n      owner: groups\n        .filter(g => g.userRole === GroupRoleType.Owner)\n        .map(g => ({\n          ...g.group,\n          inviteCode: undefined\n        })),\n      member: groups\n        .filter(g => g.userRole === GroupRoleType.Member)\n        .map(g => ({\n          ...g.group,\n          inviteCode: undefined\n        }))\n    }\n  }\n\n  async getGroupDetail(id: number, userId: number) {\n    const group = await this.groupRepository.findOne({\n      where: { id },\n      select: ['users'],\n      relations: ['cover', 'users', 'users.avatar']\n    })\n\n    if (userId !== group.createById) {\n      delete group.inviteCode\n    }\n\n    return group\n  }\n}\n")),(0,o.kt)("p",null,"\u628a\u63a5\u53e3\u90fd\u52a0\u4e0a\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="apps/server/src/modules/group/group.controller.ts"',title:'"apps/server/src/modules/group/group.controller.ts"'},"import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  Req,\n  UseInterceptors,\n  UploadedFile,\n  ParseFilePipe,\n  MaxFileSizeValidator,\n  FileTypeValidator\n} from '@nestjs/common'\nimport { Request } from 'express'\nimport { ApiOperation, ApiTags } from '@nestjs/swagger'\nimport { FileInterceptor } from '@nestjs/platform-express'\nimport { CreateGroupDto } from '@ying-chat/shared'\nimport { GroupService } from './group.service'\n\n@ApiTags('group')\n@Controller('group')\nexport class GroupController {\n  constructor(private readonly groupService: GroupService) {}\n\n  @ApiOperation({\n    summary: 'Create group'\n  })\n  @Post()\n  create(@Body() createGroupDto: CreateGroupDto, @Req() req: Request) {\n    return this.groupService.create(createGroupDto, req.userId)\n  }\n\n  @ApiOperation({\n    summary: 'Upload group cover'\n  })\n  @Post('cover')\n  @UseInterceptors(FileInterceptor('file'))\n  uploadUserAvatar(\n    @Req() req: Request,\n    @UploadedFile(\n      new ParseFilePipe({\n        validators: [\n          new MaxFileSizeValidator({\n            maxSize: 5 * 1024 * 1024,\n            message: 'size must less than 5MB'\n          }),\n          new FileTypeValidator({ fileType: /image\\/(png|jpeg|jpg)/ })\n        ]\n      })\n    )\n    file: Express.Multer.File\n  ) {\n    return this.groupService.uploadGroupCover(file, req.userId)\n  }\n\n  @ApiOperation({\n    summary: 'Join group'\n  })\n  @Get('join/:code')\n  joinGroup(@Req() req: Request, @Param('code') code: string) {\n    return this.groupService.joinGroup(req.userId, code)\n  }\n\n  @ApiOperation({\n    summary: 'Get user group list'\n  })\n  @Get('list')\n  getUserGroupList(@Req() req: Request) {\n    return this.groupService.getUserGroupList(req.userId)\n  }\n\n  @ApiOperation({\n    summary: 'Get group info'\n  })\n  @Get(':id')\n  findOne(@Param('id') id: string, @Req() req: Request) {\n    return this.groupService.getGroupDetail(+id, req.userId)\n  }\n}\n")),(0,o.kt)("p",null,"\u6dfb\u52a0",(0,o.kt)("inlineCode",{parentName:"p"},"GroupModule"),"\u6a21\u5757\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="apps/server/src/modules/group/group.module.ts"',title:'"apps/server/src/modules/group/group.module.ts"'},"import { Module } from '@nestjs/common'\nimport { TypeOrmModule } from '@nestjs/typeorm'\nimport { GroupEntity, GroupConversationEntity } from '@/modules/db/entities'\nimport { GroupController } from './group.controller'\nimport { GroupService } from './group.service'\n\n@Module({\n  imports: [TypeOrmModule.forFeature([GroupEntity, GroupConversationEntity])],\n  controllers: [GroupController],\n  providers: [GroupService]\n})\nexport class GroupModule {}\n")),(0,o.kt)("p",null,"\u628a",(0,o.kt)("inlineCode",{parentName:"p"},"GroupModule"),"\u52a0\u8f7d\u5230",(0,o.kt)("inlineCode",{parentName:"p"},"AppModule"),"\u91cc\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="apps/server/src/app.module.ts"',title:'"apps/server/src/app.module.ts"'},"// ...\nimport { GroupModule } from '@/modules/group/group.module'\n\n@Module({\n  imports: [\n    // ...\n    GroupModule\n  ]\n  // ...\n})\nexport class AppModule {}\n")),(0,o.kt)("p",null,"\u8fd9\u65f6\u5019\u5c31\u4e0d\u4f1a\u62a5\u9519\u4e86\uff0c\u90a3\u4e48\u672c\u8282\u6700\u540e\u5c31\u4e0d\u53bb\u8c03\u8bd5\u63a5\u53e3\u4e86\uff0c\u5728\u540e\u9762\u4e00\u8282\u5ba2\u6237\u7aef\u76f4\u63a5\u5bf9\u63a5\u4e00\u4e0b\uff0c\u672c\u8282\u5230\u6b64\u7ed3\u675f\u3002"))}c.isMDXComponent=!0}}]);