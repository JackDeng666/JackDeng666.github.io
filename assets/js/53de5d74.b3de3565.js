"use strict";(self.webpackChunkying_blog=self.webpackChunkying_blog||[]).push([[3674],{9613:(n,e,t)=>{t.d(e,{Zo:()=>c,kt:()=>y});var r=t(9496);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var l=r.createContext({}),p=function(n){var e=r.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},c=function(n){var e=p(n.components);return r.createElement(l.Provider,{value:e},n.children)},d="mdxType",u={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,o=n.originalType,l=n.parentName,c=s(n,["components","mdxType","originalType","parentName"]),d=p(t),m=a,y=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return t?r.createElement(y,i(i({ref:e},c),{},{components:t})):r.createElement(y,i({ref:e},c))}));function y(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var o=t.length,i=new Array(o);i[0]=m;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=n,s[d]="string"==typeof n?n:a,i[1]=s;for(var p=2;p<o;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},809:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=t(8957),a=(t(9496),t(9613));const o={id:"main-page-style",sidebar_label:"\u4e3b\u9875\u9762\u6837\u5f0f",title:"\u4e3b\u9875\u9762\u6837\u5f0f"},i=void 0,s={unversionedId:"ying-chat/main-page-style",id:"ying-chat/main-page-style",title:"\u4e3b\u9875\u9762\u6837\u5f0f",description:"\u5168\u5c40\u9ed1\u8272\u4e3b\u9898",source:"@site/docs/ying-chat/06-main-page-style.md",sourceDirName:"ying-chat",slug:"/ying-chat/main-page-style",permalink:"/docs/ying-chat/main-page-style",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{id:"main-page-style",sidebar_label:"\u4e3b\u9875\u9762\u6837\u5f0f",title:"\u4e3b\u9875\u9762\u6837\u5f0f"},sidebar:"yingChat",previous:{title:"\u767b\u5f55\u6ce8\u518c\u9875\u9762\u6837\u5f0f",permalink:"/docs/ying-chat/login-register-style"},next:{title:"\u63a5\u53e3\u521d\u59cb\u5316",permalink:"/docs/ying-chat/api-init"}},l={},p=[{value:"\u5168\u5c40\u9ed1\u8272\u4e3b\u9898",id:"\u5168\u5c40\u9ed1\u8272\u4e3b\u9898",level:3},{value:"\u4e3b\u9875\u9762\u6837\u5f0f",id:"\u4e3b\u9875\u9762\u6837\u5f0f",level:3}],c={toc:p},d="wrapper";function u(n){let{components:e,...t}=n;return(0,a.kt)(d,(0,r.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"\u5168\u5c40\u9ed1\u8272\u4e3b\u9898"},"\u5168\u5c40\u9ed1\u8272\u4e3b\u9898"),(0,a.kt)("p",null,"\u4e0b\u8f7d\u4f9d\u8d56"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"pnpm i @ant-design/happy-work-theme antd-style\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="apps/client/src/App.tsx"',title:'"apps/client/src/App.tsx"'},"import { RouterProvider } from 'react-router-dom'\nimport { ConfigProvider, theme, App as AntApp } from 'antd'\nimport { HappyProvider } from '@ant-design/happy-work-theme'\nimport { router } from '@/router'\n\nfunction App() {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorBgBase: '#1e1f22'\n        },\n        algorithm: theme.darkAlgorithm\n      }}\n    >\n      <HappyProvider>\n        <AntApp className=\"h-full\">\n          <RouterProvider router={router}></RouterProvider>\n        </AntApp>\n      </HappyProvider>\n    </ConfigProvider>\n  )\n}\n\nexport default App\n")),(0,a.kt)("p",null,"\u5206\u522b\u5728\u767b\u5f55\u6ce8\u518c\u7684\u6700\u5916\u5c42\u5305\u88f9\u4e00\u4e2a antd \u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"Layout")," \u7ec4\u4ef6"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="apps/client/src/pages/account/register.tsx"',title:'"apps/client/src/pages/account/register.tsx"'},"import { ..., App } from 'antd'\n\nexport const Register = () => {\n    const navigate = useNavigate()\n    const { message } = App.useApp()\n    const [form] = Form.useForm<RegisterForm>()\n\n    const sendCode = () => {\n        if (!form.getFieldValue('email')) {\n            message.warning('Please input your email first!')\n        }\n    }\n  // ...\n}\n")),(0,a.kt)("h3",{id:"\u4e3b\u9875\u9762\u6837\u5f0f"},"\u4e3b\u9875\u9762\u6837\u5f0f"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-css",metastring:'title="apps/client/src/index.css"',title:'"apps/client/src/index.css"'},"// ...\n.fc {\n  @apply flex justify-center items-center;\n}\n\n.no-scrollbar::-webkit-scrollbar {\n  display: none;\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="apps/client/src/components/layout/index.tsx"',title:'"apps/client/src/components/layout/index.tsx"'},"import { Outlet } from 'react-router-dom'\nimport { RoomSidebar } from './room-sidebar'\nimport { MenuType } from './constants'\nimport { useState } from 'react'\nimport {\n  Layout,\n  Button,\n  Space,\n  Avatar,\n  Dropdown,\n  MenuProps,\n  Typography\n} from 'antd'\nimport {\n  EditOutlined,\n  LogoutOutlined,\n  PlusOutlined,\n  TeamOutlined,\n  UserOutlined\n} from '@ant-design/icons'\nimport { cn } from '@/lib/utils'\nimport { createStyles } from 'antd-style'\n\nconst useStyles = createStyles(({ token, css }) => ({\n  navigationWrap: css`\n    background-color: ${token.colorBgLayout};\n  `,\n  item: css`\n    background-color: ${token.colorBgSpotlight};\n    color: ${token.colorText};\n  `,\n  itemActive: css`\n    background-color: ${token.colorPrimary};\n  `,\n  dropdownWrap: {\n    padding: 0,\n    backgroundColor: token.colorBgElevated,\n    borderRadius: token.borderRadiusLG,\n    boxShadow: token.boxShadowSecondary\n  }\n}))\n\nconst items: MenuProps['items'] = [\n  {\n    type: 'divider'\n  },\n  {\n    label: 'user info',\n    key: '1',\n    icon: <UserOutlined />\n  },\n  {\n    label: 'change password',\n    key: '2',\n    icon: <EditOutlined />\n  },\n  {\n    type: 'divider'\n  },\n  {\n    label: 'log out',\n    key: '3',\n    icon: <LogoutOutlined />,\n    danger: true\n  }\n]\n\nexport const AppLayout = () => {\n  const [menuType, setMenuType] = useState(MenuType.friend)\n  const { styles } = useStyles()\n\n  return (\n    <Layout className=\"h-full flex flex-row\">\n      <div\n        className={cn(\n          'flex flex-col items-center w-[72px] py-4',\n          styles.navigationWrap\n        )}\n      >\n        <Space className=\"flex-1\" direction=\"vertical\">\n          <div\n            className={cn(\n              `fc text-xl w-[48px] h-[48px] cursor-pointer rounded-full`,\n              'hover:transition-all duration-700 hover:rounded-2xl',\n              styles.item,\n              menuType === MenuType.friend && `rounded-2xl ${styles.itemActive}`\n            )}\n            onClick={() => {\n              setMenuType(MenuType.friend)\n            }}\n          >\n            <UserOutlined />\n          </div>\n\n          <div\n            className={cn(\n              `fc text-xl w-[48px] h-[48px] cursor-pointer rounded-full`,\n              'hover:transition-all duration-700 hover:rounded-2xl',\n              styles.item,\n              menuType === MenuType.group && `rounded-2xl ${styles.itemActive}`\n            )}\n            onClick={() => {\n              setMenuType(MenuType.group)\n            }}\n          >\n            <TeamOutlined />\n          </div>\n\n          <Button\n            type=\"primary\"\n            shape=\"circle\"\n            icon={<PlusOutlined />}\n            size=\"large\"\n            style={{ width: '48px', height: '48px' }}\n          />\n        </Space>\n\n        <Dropdown\n          menu={{ items }}\n          trigger={['click']}\n          arrow\n          dropdownRender={(menu) => (\n            <div className={styles.dropdownWrap}>\n              <div style={{ padding: '0 10px', paddingTop: '6px' }}>\n                <Typography.Text>ying#dhfushf</Typography.Text>\n              </div>\n              {menu}\n            </div>\n          )}\n        >\n          <Avatar\n            className=\"fc cursor-pointer w-[48px] h-[48px]\"\n            size=\"large\"\n            icon={<UserOutlined />}\n          >\n            user\n          </Avatar>\n        </Dropdown>\n      </div>\n\n      <div\n        className={cn('h-full w-60', menuType !== MenuType.friend && 'hidden')}\n      >\n        <RoomSidebar type={MenuType.friend} />\n      </div>\n\n      <div\n        className={cn('h-full w-60', menuType !== MenuType.group && 'hidden')}\n      >\n        <RoomSidebar type={MenuType.group} />\n      </div>\n\n      <main className=\"h-full flex-1\">\n        <Outlet />\n      </main>\n    </Layout>\n  )\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="apps/client/src/components/layout/room-sidebar.tsx"',title:'"apps/client/src/components/layout/room-sidebar.tsx"'},"import { useMemo } from 'react'\nimport { useNavigate, useParams, useLocation } from 'react-router-dom'\nimport { Input, Avatar, Typography, Divider } from 'antd'\nimport { createStyles } from 'antd-style'\nimport { cn } from '@/lib/utils'\nimport { MenuType, MenuTypeMsgMap } from './constants'\nimport { SearchProps } from 'antd/es/input/Search'\n\ntype RoomSidebarProps = {\n  type: MenuType\n}\nconst useStyles = createStyles(({ token, css }) => ({\n  wrapper: css`\n    background-color: ${token.colorBgContainer};\n    color: ${token.colorText};\n  `,\n  activedWrap: css`\n    background-color: ${token.colorBgElevated};\n  `\n}))\n\nconst cover = 'https://jackdeng666.github.io/img/favicon.png'\n\nexport const RoomSidebar = ({ type }: RoomSidebarProps) => {\n  const { styles } = useStyles()\n\n  const { pathname } = useLocation()\n  const { id } = useParams()\n\n  const searchText = useMemo(() => {\n    return type === MenuType.friend ? 'friend' : 'group'\n  }, [type])\n\n  const navigate = useNavigate()\n\n  function toMessage(id: number) {\n    navigate(`${MenuTypeMsgMap[type]}/${id}`)\n  }\n\n  const onSearch: SearchProps['onSearch'] = (value, _e, info) =>\n    console.log(info?.source, value)\n\n  const isActived = (currentId: number) => {\n    if (!pathname.startsWith(`/${MenuTypeMsgMap[type]}`)) {\n      return false\n    }\n    return currentId === Number(id)\n  }\n\n  return (\n    <div className={cn('flex flex-col h-full py-2', styles.wrapper)}>\n      <Input.Search\n        className=\"px-2 h-9\"\n        placeholder={searchText}\n        onSearch={onSearch}\n        enterButton\n        allowClear\n      />\n      <Divider orientation=\"left\" style={{ margin: '4px 0' }}>\n        {searchText}\n      </Divider>\n      <div className=\"flex-1 h-0 overflow-y-auto no-scrollbar\">\n        {new Array(20).fill(0).map((el, index) => (\n          <div\n            className={cn(\n              'flex p-2 w-full cursor-pointer',\n              isActived(index) && styles.activedWrap\n            )}\n            key={index}\n            onClick={() => {\n              toMessage(index)\n            }}\n          >\n            <Avatar\n              shape=\"square\"\n              size={40}\n              className=\"mr-2 flex-shrink-0\"\n              src={cover}\n            />\n            <div className=\"flex-1 w-0\">\n              <Typography.Text ellipsis={true}>\n                \u6211\u662f{index}\u6807\u9898dddddsaaaaaaaaaaaatrueaaaaaaaaaaaaaaaaaaaaaaaa\n              </Typography.Text>\n              <Typography.Text ellipsis={true}>\n                sdasdasdsadasddsaddddddddddddddddddddddddd\n              </Typography.Text>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n")))}u.isMDXComponent=!0}}]);