"use strict";(self.webpackChunkying_blog=self.webpackChunkying_blog||[]).push([[3020],{9613:(e,n,r)=>{r.d(n,{Zo:()=>c,kt:()=>f});var t=r(9496);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function l(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function d(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?l(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},l=Object.keys(e);for(t=0;t<l.length;t++)r=l[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)r=l[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=t.createContext({}),p=function(e){var n=t.useContext(o),r=n;return e&&(r="function"==typeof e?e(n):d(d({},n),e)),r},c=function(e){var n=p(e.components);return t.createElement(o.Provider,{value:n},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},y=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),s=p(r),y=a,f=s["".concat(o,".").concat(y)]||s[y]||u[y]||l;return r?t.createElement(f,d(d({ref:n},c),{},{components:r})):t.createElement(f,d({ref:n},c))}));function f(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=r.length,d=new Array(l);d[0]=y;var i={};for(var o in n)hasOwnProperty.call(n,o)&&(i[o]=n[o]);i.originalType=e,i[s]="string"==typeof e?e:a,d[1]=i;for(var p=2;p<l;p++)d[p]=r[p];return t.createElement.apply(null,d)}return t.createElement.apply(null,r)}y.displayName="MDXCreateElement"},3166:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var t=r(8957),a=(r(9496),r(9613));const l={slug:"array-to-tree-structure",date:new Date("2021-11-15T00:00:00.000Z"),title:"\u6570\u7ec4\u8f6c\u6811\u5f62\u7ed3\u6784\uff0c\u83b7\u53d6\u6811\u7ed3\u6784\u6570\u636e\u4fe1\u606f",authors:["jack"],tags:["js","\u524d\u7aef"]},d=void 0,i={permalink:"/blog/array-to-tree-structure",source:"@site/blog/\u6570\u7ec4\u8f6c\u6811\u5f62\u7ed3\u6784.md",title:"\u6570\u7ec4\u8f6c\u6811\u5f62\u7ed3\u6784\uff0c\u83b7\u53d6\u6811\u7ed3\u6784\u6570\u636e\u4fe1\u606f",description:"js \u5b9e\u73b0\u6570\u7ec4\u8f6c\u6811\u5f62\u7ed3\u6784\u7684\u5404\u79cd\u51fd\u6570\uff0c\u5b9e\u73b0\u901a\u8fc7\u539f\u6570\u7ec4\u83b7\u53d6\u6811\u7ed3\u6784\u6570\u636e\u4fe1\u606f\u3002",date:"2021-11-15T00:00:00.000Z",formattedDate:"2021\u5e7411\u670815\u65e5",tags:[{label:"js",permalink:"/blog/tags/js"},{label:"\u524d\u7aef",permalink:"/blog/tags/\u524d\u7aef"}],readingTime:4.225,hasTruncateMarker:!0,authors:[{name:"Jack Deng",title:"Typescript \u5168\u6808\u5f00\u53d1\u8005",url:"https://github.com/jackdeng666",imageURL:"https://github.com/jackdeng666.png",key:"jack"}],frontMatter:{slug:"array-to-tree-structure",date:"2021-11-15T00:00:00.000Z",title:"\u6570\u7ec4\u8f6c\u6811\u5f62\u7ed3\u6784\uff0c\u83b7\u53d6\u6811\u7ed3\u6784\u6570\u636e\u4fe1\u606f",authors:["jack"],tags:["js","\u524d\u7aef"]},prevItem:{title:"\u5c01\u88c5 vue \u7ec4\u4ef6\u5e76\u53d1\u5e03\u5230 npm",permalink:"/blog/publish-vue-components-to-npm"}},o={authorsImageUrls:[void 0]},p=[{value:"\u8f93\u5165\u8f93\u51fa\u7684\u6548\u679c",id:"\u8f93\u5165\u8f93\u51fa\u7684\u6548\u679c",level:2},{value:"\u5b9e\u73b0",id:"\u5b9e\u73b0",level:2},{value:"\u6570\u7ec4\u8f6c\u6811\u7ed3\u6784 v1",id:"\u6570\u7ec4\u8f6c\u6811\u7ed3\u6784-v1",level:3},{value:"\u6570\u7ec4\u8f6c\u6811\u7ed3\u6784 v2",id:"\u6570\u7ec4\u8f6c\u6811\u7ed3\u6784-v2",level:3},{value:"\u987a\u4fbf\u83b7\u53d6\u6811\u7ed3\u6784\u5c42\u6570",id:"\u987a\u4fbf\u83b7\u53d6\u6811\u7ed3\u6784\u5c42\u6570",level:3},{value:"\u6839\u636e id \u83b7\u53d6\u6574\u4e2a\u6811\u9875\u7684\u4fe1\u606f",id:"\u6839\u636e-id-\u83b7\u53d6\u6574\u4e2a\u6811\u9875\u7684\u4fe1\u606f",level:3},{value:"\u5b8c\u6574\u4ee3\u7801",id:"\u5b8c\u6574\u4ee3\u7801",level:2}],c={toc:p},s="wrapper";function u(e){let{components:n,...r}=e;return(0,a.kt)(s,(0,t.Z)({},c,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"js \u5b9e\u73b0\u6570\u7ec4\u8f6c\u6811\u5f62\u7ed3\u6784\u7684\u5404\u79cd\u51fd\u6570\uff0c\u5b9e\u73b0\u901a\u8fc7\u539f\u6570\u7ec4\u83b7\u53d6\u6811\u7ed3\u6784\u6570\u636e\u4fe1\u606f\u3002"),(0,a.kt)("h2",{id:"\u8f93\u5165\u8f93\u51fa\u7684\u6548\u679c"},"\u8f93\u5165\u8f93\u51fa\u7684\u6548\u679c"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"let arr = [\n  { id: 1, parentId: 0, name: '\u5e7f\u4e1c\u7701' },\n  { id: 2, parentId: 1, name: '\u5e7f\u5dde\u5e02' },\n  { id: 3, parentId: 1, name: '\u6df1\u5733\u5e02' },\n  { id: 4, parentId: 2, name: '\u8354\u6e7e\u533a' },\n  { id: 5, parentId: 2, name: '\u8d8a\u79c0\u533a' },\n  { id: 6, parentId: 3, name: '\u5357\u5c71\u533a' },\n  { id: 7, parentId: 3, name: '\u5b9d\u5b89\u533a' }\n]\n\nconst { toTreeV1, toTreeV2, toTreeHasLayer, getTreeInfoById } =\n  createTreeFns(arr)\n\n// let treeData = toTreeV1(0)\n// let treeData = toTreeV2(0)\nlet treeData = toTreeHasLayer(0)\nconsole.log(JSON.stringify(treeData, null, 2))\n\nconsole.log(getTreeInfoById(4, 'name'))\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'{\n  "arr": [\n    {\n      "id": 1,\n      "parentId": 0,\n      "name": "\u5e7f\u4e1c\u7701",\n      "layer": 1,\n      "children": [\n        {\n          "id": 2,\n          "parentId": 1,\n          "name": "\u5e7f\u5dde\u5e02",\n          "layer": 2,\n          "children": [\n            {\n              "id": 4,\n              "parentId": 2,\n              "name": "\u8354\u6e7e\u533a",\n              "layer": 3,\n              "children": []\n            },\n            {\n              "id": 5,\n              "parentId": 2,\n              "name": "\u8d8a\u79c0\u533a",\n              "layer": 3,\n              "children": []\n            }\n          ]\n        },\n        {\n          "id": 3,\n          "parentId": 1,\n          "name": "\u6df1\u5733\u5e02",\n          "layer": 2,\n          "children": [\n            {\n              "id": 6,\n              "parentId": 3,\n              "name": "\u5357\u5c71\u533a",\n              "layer": 3,\n              "children": []\n            },\n            {\n              "id": 7,\n              "parentId": 3,\n              "name": "\u5b9d\u5b89\u533a",\n              "layer": 3,\n              "children": []\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  "layerNum": 3\n}\n[ \'\u5e7f\u4e1c\u7701\', \'\u5e7f\u5dde\u5e02\', \'\u8354\u6e7e\u533a\' ]\n')),(0,a.kt)("h2",{id:"\u5b9e\u73b0"},"\u5b9e\u73b0"),(0,a.kt)("p",null,"\u5148\u521b\u5efa\u4e00\u4e2a\u9ad8\u9636\u51fd\u6570\uff0c\u5230\u65f6\u5019\u8fd4\u56de\u5404\u79cd\u64cd\u4f5c\u65b9\u6cd5\uff0c\u9ad8\u9636\u51fd\u6570\u63a5\u6536\u6570\u7ec4\u548c\u6570\u7ec4\u5143\u7d20\u91cc id \u7684\u5b57\u6bb5\u548c parentId \u7684\u5b57\u6bb5\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"function createTreeFns(array = [], idField = 'id', parentIdFiled = 'parentId') {\n  return {}\n}\n")),(0,a.kt)("h3",{id:"\u6570\u7ec4\u8f6c\u6811\u7ed3\u6784-v1"},"\u6570\u7ec4\u8f6c\u6811\u7ed3\u6784 v1"),(0,a.kt)("p",null,"\u5b9e\u73b0\u4e00\u4e2a toTreeV1 \u51fd\u6570\uff0c\u8fd9\u4e2a\u5b9e\u73b0\u6bd4\u8f83\u597d\u7406\u89e3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"function createTreeFns(array = [], idField = 'id', parentIdFiled = 'parentId') {\n  function toTreeV1(parentId) {\n    const res = []\n    array.forEach((el) => {\n      if (el[parentIdFiled] === parentId) {\n        el.children = toTreeV1(el[idField])\n        res.push(el)\n      }\n    })\n    return res\n  }\n\n  return {\n    toTreeV1\n  }\n}\n")),(0,a.kt)("h3",{id:"\u6570\u7ec4\u8f6c\u6811\u7ed3\u6784-v2"},"\u6570\u7ec4\u8f6c\u6811\u7ed3\u6784 v2"),(0,a.kt)("p",null,"\u5b9e\u73b0\u4e00\u4e2a toTreeV2 \u51fd\u6570\uff0c\u8fd9\u4e2a\u5b9e\u73b0\u4ee3\u7801\u8f83\u5c11"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"function createTreeFns(array = [], idField = 'id', parentIdFiled = 'parentId') {\n  function toTreeV2(parentId) {\n    return array\n      .filter((el) => el[parentIdFiled] === parentId)\n      .map((el) => ({ ...el, children: toTreeV2(el[idField]) }))\n  }\n\n  return {\n    toTreeV2\n  }\n}\n")),(0,a.kt)("h3",{id:"\u987a\u4fbf\u83b7\u53d6\u6811\u7ed3\u6784\u5c42\u6570"},"\u987a\u4fbf\u83b7\u53d6\u6811\u7ed3\u6784\u5c42\u6570"),(0,a.kt)("p",null,"\u987a\u4fbf\u83b7\u53d6\u6811\u7ed3\u6784\u5c42\u6570"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"function createTreeFns(array = [], idField = 'id', parentIdFiled = 'parentId') {\n  function toTreeHasLayer(parentId) {\n    let layerNum = 0\n    function arrayToTree(parentId, layer) {\n      const res = []\n      array.forEach((el) => {\n        if (el[parentIdFiled] === parentId) {\n          el.layer = layer\n          el.children = arrayToTree(el[idField], layer + 1)\n          if (el.children.length) {\n            layerNum++\n          }\n          res.push(el)\n        }\n      })\n      return res\n    }\n    return {\n      arr: arrayToTree(parentId, 1),\n      layerNum\n    }\n  }\n\n  return {\n    toTreeHasLayer\n  }\n}\n")),(0,a.kt)("h3",{id:"\u6839\u636e-id-\u83b7\u53d6\u6574\u4e2a\u6811\u9875\u7684\u4fe1\u606f"},"\u6839\u636e id \u83b7\u53d6\u6574\u4e2a\u6811\u9875\u7684\u4fe1\u606f"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"function createTreeFns(array = [], idField = 'id', parentIdFiled = 'parentId') {\n  function getTreeInfoById(id, infoField) {\n    let res = []\n    let data = array.find((el) => el[idField] === id)\n    if (data) {\n      res.unshift(data[infoField])\n      if (data[parentIdFiled]) {\n        res.unshift(...getTreeInfoById(data[parentIdFiled], infoField))\n      }\n    }\n    return res\n  }\n\n  return {\n    getTreeInfoById\n  }\n}\n")),(0,a.kt)("h2",{id:"\u5b8c\u6574\u4ee3\u7801"},"\u5b8c\u6574\u4ee3\u7801"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"function createTreeFns(array = [], idField = 'id', parentIdFiled = 'parentId') {\n  function toTreeV1(parentId) {\n    const res = []\n    array.forEach((el) => {\n      if (el[parentIdFiled] === parentId) {\n        el.children = toTreeV1(el[idField])\n        res.push(el)\n      }\n    })\n    return res\n  }\n\n  function toTreeV2(parentId) {\n    return array\n      .filter((el) => el[parentIdFiled] === parentId)\n      .map((el) => ({ ...el, children: toTreeV2(el[idField]) }))\n  }\n\n  function toTreeHasLayer(parentId) {\n    let layerNum = 0\n    function arrayToTree(parentId, layer) {\n      const res = []\n      array.forEach((el) => {\n        if (el[parentIdFiled] === parentId) {\n          el.layer = layer\n          el.children = arrayToTree(el[idField], layer + 1)\n          if (el.children.length) {\n            layerNum++\n          }\n          res.push(el)\n        }\n      })\n      return res\n    }\n    return {\n      arr: arrayToTree(parentId, 1),\n      layerNum\n    }\n  }\n\n  function getTreeInfoById(id, infoField) {\n    let res = []\n    let data = array.find((el) => el[idField] === id)\n    if (data) {\n      res.unshift(data[infoField])\n      if (data[parentIdFiled]) {\n        res.unshift(...getTreeInfoById(data[parentIdFiled], infoField))\n      }\n    }\n    return res\n  }\n\n  return {\n    toTreeV1,\n    toTreeV2,\n    toTreeHasLayer,\n    getTreeInfoById\n  }\n}\n\nlet arr = [\n  { id: 1, parentId: 0, name: '\u5e7f\u4e1c\u7701' },\n  { id: 2, parentId: 1, name: '\u5e7f\u5dde\u5e02' },\n  { id: 3, parentId: 1, name: '\u6df1\u5733\u5e02' },\n  { id: 4, parentId: 2, name: '\u8354\u6e7e\u533a' },\n  { id: 5, parentId: 2, name: '\u8d8a\u79c0\u533a' },\n  { id: 6, parentId: 3, name: '\u5357\u5c71\u533a' },\n  { id: 7, parentId: 3, name: '\u5b9d\u5b89\u533a' }\n]\n\nconst { toTreeV1, toTreeV2, toTreeHasLayer, getTreeInfoById } =\n  createTreeFns(arr)\n\n// let treeData = toTreeV1(0)\n// let treeData = toTreeV2(0)\nlet treeData = toTreeHasLayer(0)\nconsole.log(JSON.stringify(treeData, null, 2))\n\nconsole.log(getTreeInfoById(4, 'name'))\n")))}u.isMDXComponent=!0}}]);