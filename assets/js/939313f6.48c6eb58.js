"use strict";(self.webpackChunkying_blog=self.webpackChunkying_blog||[]).push([[6457],{9613:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var r=t(9496);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,s=function(e,n){if(null==e)return{};var t,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,s=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(t),m=s,f=c["".concat(l,".").concat(m)]||c[m]||d[m]||o;return t?r.createElement(f,a(a({ref:n},u),{},{components:t})):r.createElement(f,a({ref:n},u))}));function f(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var o=t.length,a=new Array(o);a[0]=m;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[c]="string"==typeof e?e:s,a[1]=i;for(var p=2;p<o;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3980:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=t(8957),s=(t(9496),t(9613));const o={id:"update-userinfo",sidebar_label:"\u4fee\u6539\u7528\u6237\u4fe1\u606f\u529f\u80fd\u6dfb\u52a0",title:"\u4fee\u6539\u7528\u6237\u4fe1\u606f\u529f\u80fd\u6dfb\u52a0"},a=void 0,i={unversionedId:"ying-chat/update-userinfo",id:"ying-chat/update-userinfo",title:"\u4fee\u6539\u7528\u6237\u4fe1\u606f\u529f\u80fd\u6dfb\u52a0",description:"\u672c\u8282\u6765\u5b9e\u73b0\u66f4\u65b0\u7528\u6237\u4fe1\u606f\u7684\u6574\u4e2a\u529f\u80fd\u3002",source:"@site/docs/ying-chat/12-update-userinfo.md",sourceDirName:"ying-chat",slug:"/ying-chat/update-userinfo",permalink:"/docs/ying-chat/update-userinfo",draft:!1,tags:[],version:"current",sidebarPosition:12,frontMatter:{id:"update-userinfo",sidebar_label:"\u4fee\u6539\u7528\u6237\u4fe1\u606f\u529f\u80fd\u6dfb\u52a0",title:"\u4fee\u6539\u7528\u6237\u4fe1\u606f\u529f\u80fd\u6dfb\u52a0"},sidebar:"yingChat",previous:{title:"\u524d\u7aef\u5bf9\u63a5\u767b\u5f55\u63a5\u53e3",permalink:"/docs/ying-chat/docking-login-api"},next:{title:"\u7528\u6237\u5934\u50cf\u548c\u96c6\u6210MinIO",permalink:"/docs/ying-chat/user-avatar-and-integrated-minio"}},l={},p=[{value:"\u66f4\u65b0\u7528\u6237\u4fe1\u606f\u63a5\u53e3",id:"\u66f4\u65b0\u7528\u6237\u4fe1\u606f\u63a5\u53e3",level:2},{value:"\u5ba2\u6237\u7aef\u5bf9\u63a5",id:"\u5ba2\u6237\u7aef\u5bf9\u63a5",level:2},{value:"\u63a5\u53e3\u51c6\u5907",id:"\u63a5\u53e3\u51c6\u5907",level:3},{value:"\u4fee\u6539\u7528\u6237\u4fe1\u606f\u5f39\u7a97\u7f16\u5199",id:"\u4fee\u6539\u7528\u6237\u4fe1\u606f\u5f39\u7a97\u7f16\u5199",level:3},{value:"\u5f15\u5165",id:"\u5f15\u5165",level:3}],u={toc:p},c="wrapper";function d(e){let{components:n,...o}=e;return(0,s.kt)(c,(0,r.Z)({},u,o,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"\u672c\u8282\u6765\u5b9e\u73b0\u66f4\u65b0\u7528\u6237\u4fe1\u606f\u7684\u6574\u4e2a\u529f\u80fd\u3002"),(0,s.kt)("h2",{id:"\u66f4\u65b0\u7528\u6237\u4fe1\u606f\u63a5\u53e3"},"\u66f4\u65b0\u7528\u6237\u4fe1\u606f\u63a5\u53e3"),(0,s.kt)("p",null,"\u5148\u6dfb\u52a0\u4e00\u4e2a ",(0,s.kt)("inlineCode",{parentName:"p"},"UpdateUserDto"),"\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="packages/shared/src/dto/user.dto.ts"',title:'"packages/shared/src/dto/user.dto.ts"'},"import { IsOptional, MaxLength, MinLength } from 'class-validator'\n\nexport class UpdateUserDto {\n  @MinLength(6)\n  @MaxLength(20)\n  @IsOptional()\n  username?: string\n\n  @MinLength(2)\n  @MaxLength(20)\n  @IsOptional()\n  nickname?: string\n}\n")),(0,s.kt)("p",null,"\u5728",(0,s.kt)("inlineCode",{parentName:"p"},"index.ts"),"\u91cc\u9762\u5bfc\u51fa\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="packages/shared/src/dto/index.ts"',title:'"packages/shared/src/dto/index.ts"'},"// ...\nexport * from './user.dto'\n")),(0,s.kt)("p",null,"\u5728",(0,s.kt)("inlineCode",{parentName:"p"},"UserService"),"\u91cc\u5b9e\u73b0",(0,s.kt)("inlineCode",{parentName:"p"},"updateUserInfo"),"\u51fd\u6570\u53bb\u66f4\u65b0\u7528\u6237\u4fe1\u606f\uff0c\u524d\u9762\u5224\u65ad\u4e00\u4e0b\u7528\u6237\u7684\u767b\u5f55\u540d\u662f\u5426\u552f\u4e00\u5c31\u597d\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="apps/server/src/modules/user/user.service.ts"',title:'"apps/server/src/modules/user/user.service.ts"'},"// ...\nimport { UpdateUserDto } from '@ying-chat/shared'\n\n@Injectable()\nexport class UserService {\n  // ...\n\n  async updateUserInfo(userId: number, updateUserDto: UpdateUserDto) {\n    if (updateUserDto.username) {\n      const user = await this.userRepository.findOne({\n        where: { username: updateUserDto.username }\n      })\n      if (user && user.id !== userId) {\n        throw new HttpException(\n          'username already exists',\n          HttpStatus.NOT_ACCEPTABLE\n        )\n      }\n    }\n\n    await this.userRepository.update({ id: userId }, updateUserDto)\n  }\n}\n")),(0,s.kt)("p",null,"\u5728",(0,s.kt)("inlineCode",{parentName:"p"},"UserController"),"\u91cc\u6dfb\u52a0\u66f4\u65b0\u7528\u6237\u4fe1\u606f\u63a5\u53e3\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="apps/server/src/modules/user/user.controller.ts"',title:'"apps/server/src/modules/user/user.controller.ts"'},"// ...\nimport {\n  // ...\n  Post,\n  Req,\n  Body\n} from '@nestjs/common'\nimport { UpdateUserDto } from '@ying-chat/shared'\n// ...\nexport class UserController {\n  // ...\n\n  @ApiOperation({\n    summary: 'updateUserInfo'\n  })\n  @Post()\n  updateUserInfo(\n    @Req() request: Request,\n    @Body() updateUserDto: UpdateUserDto\n  ) {\n    return this.userService.updateUserInfo(request.userId, updateUserDto)\n  }\n}\n")),(0,s.kt)("h2",{id:"\u5ba2\u6237\u7aef\u5bf9\u63a5"},"\u5ba2\u6237\u7aef\u5bf9\u63a5"),(0,s.kt)("h3",{id:"\u63a5\u53e3\u51c6\u5907"},"\u63a5\u53e3\u51c6\u5907"),(0,s.kt)("p",null,"\u5728",(0,s.kt)("inlineCode",{parentName:"p"},"api"),"\u6587\u4ef6\u5939\u4e0b\u65b0\u5efa\u4e00\u4e2a",(0,s.kt)("inlineCode",{parentName:"p"},"user.ts"),"\uff0c\u628a\u66f4\u65b0\u7528\u6237\u4fe1\u606f\u548c\u83b7\u53d6\u7528\u6237\u4fe1\u606f\u63a5\u53e3\u90fd\u52a0\u4e0a\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="apps/client/src/api/user.ts"',title:'"apps/client/src/api/user.ts"'},"import { UpdateUserDto, UserVo } from '@ying-chat/shared'\nimport { request } from './request'\n\nexport function getUserInfo(): Promise<UserVo> {\n  return request.get('/user')\n}\n\nexport function updateUserInfo(updateUserInfoDto: UpdateUserDto) {\n  return request.post('/user', updateUserInfoDto)\n}\n")),(0,s.kt)("p",null,"\u5728",(0,s.kt)("inlineCode",{parentName:"p"},"index.ts"),"\u5bfc\u51fa\u4e00\u4e0b\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="apps/client/src/api/index.ts"',title:'"apps/client/src/api/index.ts"'},"import * as authApi from './auth'\nimport * as userApi from './user' // +\n\nexport {\n  authApi,\n  userApi // +\n}\n")),(0,s.kt)("h3",{id:"\u4fee\u6539\u7528\u6237\u4fe1\u606f\u5f39\u7a97\u7f16\u5199"},"\u4fee\u6539\u7528\u6237\u4fe1\u606f\u5f39\u7a97\u7f16\u5199"),(0,s.kt)("p",null,"\u5728",(0,s.kt)("inlineCode",{parentName:"p"},"components"),"\u4e0b\u65b0\u5efa\u4e00\u4e2a",(0,s.kt)("inlineCode",{parentName:"p"},"modals"),"\u6587\u4ef6\u5939\uff0c\u7136\u540e\u6dfb\u52a0\u4e00\u4e2a",(0,s.kt)("inlineCode",{parentName:"p"},"user-info-modal.tsx"),"\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="apps/client/src/components/modals/user-info-modal.tsx"',title:'"apps/client/src/components/modals/user-info-modal.tsx"'},"import {\n  Button,\n  Input,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalFooter,\n  ModalHeader\n} from '@nextui-org/react'\nimport { useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { classValidatorResolver } from '@hookform/resolvers/class-validator'\nimport { toast } from 'sonner'\nimport { UpdateUserDto } from '@ying-chat/shared'\nimport { userApi } from '@/api'\n\ntype UserInfoModalProps = {\n  open: boolean\n  close: () => void\n  confirmSuccess?: () => void\n  initialValues: UpdateUserDto\n}\n\nconst resolver = classValidatorResolver(UpdateUserDto)\n\nexport const UserInfoModal = ({\n  open,\n  close,\n  confirmSuccess,\n  initialValues\n}: UserInfoModalProps) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors }\n  } = useForm<UpdateUserDto>({\n    resolver\n  })\n  const [confirmLoading, setConfirmLoading] = useState(false)\n\n  const onFinish = async (values: UpdateUserDto) => {\n    try {\n      setConfirmLoading(true)\n      await userApi.updateUserInfo(values)\n      toast.success('update user info successfully!')\n      close()\n      confirmSuccess && confirmSuccess()\n    } catch {\n    } finally {\n      setConfirmLoading(false)\n    }\n  }\n\n  return (\n    <Modal isOpen={open} onClose={close} isDismissable={false}>\n      <ModalContent>\n        {onClose => (\n          <>\n            <ModalHeader className=\"flex flex-col gap-1\">User Info</ModalHeader>\n            <form onSubmit={handleSubmit(onFinish)}>\n              <ModalBody>\n                <Input\n                  label=\"Username\"\n                  maxLength={20}\n                  defaultValue={initialValues.username}\n                  isInvalid={Boolean(errors.username)}\n                  errorMessage={errors.username?.message}\n                  {...register('username')}\n                />\n                <Input\n                  label=\"Nickname\"\n                  maxLength={20}\n                  defaultValue={initialValues.nickname}\n                  isInvalid={Boolean(errors.nickname)}\n                  errorMessage={errors.nickname?.message}\n                  {...register('nickname')}\n                />\n              </ModalBody>\n              <ModalFooter>\n                <Button\n                  color=\"danger\"\n                  variant=\"ghost\"\n                  isDisabled={confirmLoading}\n                  onPress={onClose}\n                >\n                  Close\n                </Button>\n                <Button\n                  color=\"primary\"\n                  isLoading={confirmLoading}\n                  type=\"submit\"\n                >\n                  Update\n                </Button>\n              </ModalFooter>\n            </form>\n          </>\n        )}\n      </ModalContent>\n    </Modal>\n  )\n}\n")),(0,s.kt)("p",null,"\u65b0\u5efa\u4e00\u4e2a",(0,s.kt)("inlineCode",{parentName:"p"},"index.ts"),"\u5bfc\u51fa\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="apps/client/src/components/modals/index.ts"',title:'"apps/client/src/components/modals/index.ts"'},"export * from './user-info-modal'\n")),(0,s.kt)("h3",{id:"\u5f15\u5165"},"\u5f15\u5165"),(0,s.kt)("p",null,"\u5728",(0,s.kt)("inlineCode",{parentName:"p"},"NavSidebar"),"\u4e2d\u5f15\u5165"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="apps/client/src/components/layout/nav-sidebar.tsx"',title:'"apps/client/src/components/layout/nav-sidebar.tsx"'},"// ...\nimport { useMemo, useState } from 'react'\nimport {\n  // ...\n  setUserInfo\n} from '@/stores'\nimport { UserInfoModal } from '@/components/modals'\nimport { userApi } from '@/api'\n\nexport const NavSidebar = () => {\n  // ...\n\n  const [openUserModal, setOpenUserModal] = useState(false)\n  const userModalInitialValues = useMemo(() => {\n    return {\n      username: userInfo?.username || '',\n      nickname: userInfo?.nickname || ''\n    }\n  }, [userInfo])\n\n  const getUserInfo = async () => {\n    try {\n      const newUserInfo = await userApi.getUserInfo()\n      setUserInfo(newUserInfo)\n    } catch {}\n  }\n\n  return (\n    <div className=\"flex flex-col gap-4 items-center w-[72px] py-4 bg-content1\">\n      {/*  */}\n\n      <Dropdown placement=\"top-start\" showArrow>\n        {/*  */}\n        <DropdownMenu\n          aria-label=\"Profile Actions\"\n          disabledKeys={['profile']}\n          variant=\"flat\"\n        >\n          {/*  */}\n\n          <DropdownSection showDivider>\n            <DropdownItem\n              key=\"user-info\"\n              startContent={<UserRound className=\"w-5 h-5\" />}\n              onClick={() => {\n                setOpenUserModal(true)\n              }}\n            >\n              User Info\n            </DropdownItem>\n            {/*  */}\n          </DropdownSection>\n\n          {/*  */}\n        </DropdownMenu>\n      </Dropdown>\n\n      <UserInfoModal\n        open={openUserModal}\n        close={() => setOpenUserModal(false)}\n        confirmSuccess={getUserInfo}\n        initialValues={userModalInitialValues}\n      />\n    </div>\n  )\n}\n")),(0,s.kt)("p",null,"\u8c03\u8bd5\u4e00\u4e0b\u3002"),(0,s.kt)("p",null,(0,s.kt)("img",{src:t(1745).Z,width:"1920",height:"1080"})),(0,s.kt)("p",null,"\u672c\u8282\u5230\u6b64\u7ed3\u675f\u3002"))}d.isMDXComponent=!0},1745:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/01-3b84498cbf025e490804adde7dcb7033.gif"}}]);