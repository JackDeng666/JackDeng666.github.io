"use strict";(self.webpackChunkying_blog=self.webpackChunkying_blog||[]).push([[957],{1902:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>t,metadata:()=>d,toc:()=>c});var s=n(3274),i=n(9128);const t={id:"register-api",sidebar_label:"\u5b9e\u73b0\u6ce8\u518c\u63a5\u53e3",title:"\u5b9e\u73b0\u6ce8\u518c\u63a5\u53e3"},o=void 0,d={id:"ying-chat/register-api",title:"\u5b9e\u73b0\u6ce8\u518c\u63a5\u53e3",description:"\u672c\u8282\u6765\u5b9e\u73b0\u6ce8\u518c\u63a5\u53e3\u3002",source:"@site/docs/ying-chat/07-register-api.md",sourceDirName:"ying-chat",slug:"/ying-chat/register-api",permalink:"/docs/ying-chat/register-api",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{id:"register-api",sidebar_label:"\u5b9e\u73b0\u6ce8\u518c\u63a5\u53e3",title:"\u5b9e\u73b0\u6ce8\u518c\u63a5\u53e3"},sidebar:"yingChat",previous:{title:"\u63a5\u53e3\u521d\u59cb\u5316",permalink:"/docs/ying-chat/api-init"},next:{title:"\u524d\u540e\u7aef\u5171\u7528 DTO \u6821\u9a8c",permalink:"/docs/ying-chat/dto-validation-and-openapi-doc"}},l={},c=[{value:"\u5f15\u5165 MySQL",id:"\u5f15\u5165-mysql",level:2},{value:"MySQL \u914d\u7f6e",id:"mysql-\u914d\u7f6e",level:3},{value:"DbModule \u6a21\u5757",id:"dbmodule-\u6a21\u5757",level:3},{value:"\u5f15\u5165 Redis",id:"\u5f15\u5165-redis",level:2},{value:"Redis \u914d\u7f6e",id:"redis-\u914d\u7f6e",level:3},{value:"RedisModule \u6a21\u5757",id:"redismodule-\u6a21\u5757",level:3},{value:"\u5f15\u5165 nodemailer",id:"\u5f15\u5165-nodemailer",level:2},{value:"nodemailer \u914d\u7f6e",id:"nodemailer-\u914d\u7f6e",level:3},{value:"EmailModule \u6a21\u5757",id:"emailmodule-\u6a21\u5757",level:3},{value:"\u53d1\u9001\u9a8c\u8bc1\u7801\u63a5\u53e3",id:"\u53d1\u9001\u9a8c\u8bc1\u7801\u63a5\u53e3",level:2},{value:"\u6ce8\u518c\u63a5\u53e3",id:"\u6ce8\u518c\u63a5\u53e3",level:2}];function a(e){const r={code:"code",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.p,{children:"\u672c\u8282\u6765\u5b9e\u73b0\u6ce8\u518c\u63a5\u53e3\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u672c\u9879\u76ee\u4f7f\u7528\u90ae\u7bb1\u53bb\u6ce8\u518c\u8d26\u53f7\uff0c\u6574\u4e2a\u6ce8\u518c\u6d41\u7a0b\u662f\u5148\u53d1\u9001\u9a8c\u8bc1\u7801\u5230\u7528\u6237\u7684\u90ae\u7bb1\uff0c\u6b64\u65f6\u670d\u52a1\u7aef\u628a\u7528\u6237\u90ae\u7bb1\u548c\u5bf9\u5e94\u7684\u9a8c\u8bc1\u7801\u5b58\u5230 redis\uff0c\u7136\u540e\u5728\u6ce8\u518c\u65f6\u5148\u901a\u8fc7 redis \u9a8c\u8bc1\u5bf9\u5e94\u4f20\u8fc7\u6765\u7684\u90ae\u7bb1\u548c\u9a8c\u8bc1\u7801\u662f\u5426\u5339\u914d\uff0c\u5982\u679c\u5339\u914d\u5219\u63d2\u5165\u4e00\u4e2a\u65b0\u7528\u6237\u5230\u6570\u636e\u5e93\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u90a3\u4e48\u5728\u5b9e\u73b0\u6ce8\u518c\u63a5\u53e3\u4e4b\u524d\uff0c\u5148\u628a MySQL \u548c Redis \u5f15\u5165\u4e00\u4e0b\u3002"}),"\n",(0,s.jsx)(r.h2,{id:"\u5f15\u5165-mysql",children:"\u5f15\u5165 MySQL"}),"\n",(0,s.jsx)(r.p,{children:"\u6211\u7684\u5f00\u53d1\u73af\u5883\u4e0b\u662f\u4f7f\u7528 docker \u542f\u52a8 MySQL\uff0c\u5982\u679c\u6709\u5176\u4ed6\u73af\u5883\u5ffd\u7565\u4e0b\u9762\u3002"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-shell",children:"docker run --name mysql-test \\\r\n  -p 3306:3306 \\\r\n  -v D:/docker-backup/mysql-data:/var/lib/mysql \\\r\n  -e MYSQL_ROOT_PASSWORD=ying123456 \\\r\n  -e TZ=Asia/Shanghai \\\r\n  -d mysql\n"})}),"\n",(0,s.jsx)(r.p,{children:"\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u5e93 ying_chat\u3002"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-shell",children:"CREATE DATABASE IF NOT EXISTS ying_chat CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u5728 ",(0,s.jsx)(r.code,{children:"server"})," \u4e0b\u8f7d\u9700\u8981\u7684\u76f8\u5173\u4f9d\u8d56\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-shell",metastring:'title="apps/server"',children:"pnpm i @nestjs/typeorm typeorm mysql2\n"})}),"\n",(0,s.jsx)(r.h3,{id:"mysql-\u914d\u7f6e",children:"MySQL \u914d\u7f6e"}),"\n",(0,s.jsx)(r.p,{children:"\u628a MySQL \u7684\u76f8\u5173\u914d\u7f6e\u5199\u5165\u914d\u7f6e\u6587\u4ef6\u3002"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-json",metastring:'title="apps/server/.env"',children:"// ...\r\n# mysql\r\nDB_HOST=localhost\r\nDB_PORT=3306\r\nDB_USER=root\r\nDB_PASSWORD=ying123456\r\nDB_NAME=ying_chat\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u518d\u6dfb\u52a0\u4e00\u4e2a ",(0,s.jsx)(r.code,{children:"db.config.ts"})," \u6587\u4ef6\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-shell",metastring:'title="apps/server/src/config/db.config.ts"',children:"import { registerAs } from '@nestjs/config'\r\n\r\nexport const dbConfig = registerAs('dbConfig', () => {\r\n  if (!process.env.DB_HOST) {\r\n    throw new Error('DB_HOST is not exist')\r\n  }\r\n  if (!process.env.DB_PORT) {\r\n    throw new Error('DB_PORT is not exist')\r\n  }\r\n  if (!process.env.DB_USER) {\r\n    throw new Error('DB_USER is not exist')\r\n  }\r\n  if (!process.env.DB_PASSWORD) {\r\n    throw new Error('DB_PASSWORD is not exist')\r\n  }\r\n  if (!process.env.DB_NAME) {\r\n    throw new Error('DB_NAME is not exist')\r\n  }\r\n  return {\r\n    host: process.env.DB_HOST,\r\n    port: +process.env.DB_PORT,\r\n    username: process.env.DB_USER,\r\n    password: process.env.DB_PASSWORD,\r\n    database: process.env.DB_NAME\r\n  }\r\n})\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u5728 ",(0,s.jsx)(r.code,{children:"config"})," \u91cc\u5bfc\u51fa\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/server/src/config/index.ts"',children:"export * from './api.config'\r\nexport * from './db.config'\n"})}),"\n",(0,s.jsx)(r.h3,{id:"dbmodule-\u6a21\u5757",children:"DbModule \u6a21\u5757"}),"\n",(0,s.jsxs)(r.p,{children:["\u521b\u5efa\u4e00\u4e2a ",(0,s.jsx)(r.code,{children:"DbModule"})," \u6a21\u5757\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/server/src/modules/db/db.module.ts"',children:"import { Global, Module } from '@nestjs/common'\r\nimport { TypeOrmModule } from '@nestjs/typeorm'\r\nimport { ConfigType } from '@nestjs/config'\r\nimport { dbConfig } from '@/config'\r\n\r\n@Global()\r\n@Module({\r\n  imports: [\r\n    TypeOrmModule.forRootAsync({\r\n      useFactory: (dbConf: ConfigType<typeof dbConfig>) => {\r\n        return {\r\n          charset: 'utf8mb4',\r\n          type: 'mysql',\r\n          host: dbConf.host,\r\n          port: dbConf.port,\r\n          username: dbConf.username,\r\n          password: dbConf.password,\r\n          database: dbConf.database,\r\n          synchronize: true,\r\n          autoLoadEntities: true,\r\n          logging: true\r\n        }\r\n      },\r\n      inject: [dbConfig.KEY]\r\n    })\r\n  ]\r\n})\r\nexport class DbModule {}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u7136\u540e\u5728",(0,s.jsx)(r.code,{children:"AppModule"}),"\u91cc\u5f15\u5165",(0,s.jsx)(r.code,{children:"DbModule"}),"\u548c",(0,s.jsx)(r.code,{children:"dbConfig"}),"\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/server/src/app.module.ts"',children:"// ...\r\nimport { apiConfig, dbConfig } from '@/config'\r\nimport { DbModule } from '@/modules/db/db.module'\r\n\r\n@Module({\r\n  imports: [\r\n    ConfigModule.forRoot({\r\n      isGlobal: true,\r\n      load: [apiConfig, dbConfig]\r\n    }),\r\n    DbModule\r\n    // ...\r\n  ]\r\n})\r\nexport class AppModule {}\n"})}),"\n",(0,s.jsx)(r.h2,{id:"\u5f15\u5165-redis",children:"\u5f15\u5165 Redis"}),"\n",(0,s.jsx)(r.p,{children:"\u6211\u7684\u5f00\u53d1\u73af\u5883\u4e0b\u662f\u4f7f\u7528 docker \u542f\u52a8 Redis\uff0c\u5982\u679c\u6709\u5176\u4ed6\u73af\u5883\u5ffd\u7565\u4e0b\u9762\u3002"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-shell",children:"docker run --name redis-test \\\r\n  -p 6379:6379 \\\r\n  -v D:/DockerData/ContainerBackup/redis-data:/data \\\r\n  -d redis\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u5728 ",(0,s.jsx)(r.code,{children:"server"})," \u4e0b\u8f7d\u9700\u8981\u7684\u76f8\u5173\u4f9d\u8d56\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-shell",metastring:'title="apps/server"',children:"pnpm i redis\n"})}),"\n",(0,s.jsx)(r.h3,{id:"redis-\u914d\u7f6e",children:"Redis \u914d\u7f6e"}),"\n",(0,s.jsx)(r.p,{children:"\u628a Redis \u7684\u76f8\u5173\u914d\u7f6e\u5199\u5165\u914d\u7f6e\u6587\u4ef6\u3002"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-json",metastring:'title="apps/server/.env"',children:"// ...\r\n# redis\r\nREDIS_HOST=localhost\r\nREDIS_PORT=6379\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u65b0\u5efa ",(0,s.jsx)(r.code,{children:"redis.config.ts"})," \u6587\u4ef6\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/server/src/config/redis.config.ts"',children:"import { registerAs } from '@nestjs/config'\r\n\r\nexport const redisConfig = registerAs('redisConfig', () => {\r\n  if (!process.env.REDIS_HOST) {\r\n    throw new Error('REDIS_HOST is not exist')\r\n  }\r\n  if (!process.env.REDIS_PORT) {\r\n    throw new Error('REDIS_PORT is not exist')\r\n  }\r\n  return {\r\n    host: process.env.REDIS_HOST,\r\n    port: +process.env.REDIS_PORT\r\n  }\r\n})\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u5bfc\u51fa ",(0,s.jsx)(r.code,{children:"redis.config.ts"}),"\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/server/src/config/index.ts"',children:"// ...\r\nexport * from './redis.config'\n"})}),"\n",(0,s.jsx)(r.h3,{id:"redismodule-\u6a21\u5757",children:"RedisModule \u6a21\u5757"}),"\n",(0,s.jsxs)(r.p,{children:["\u5728 ",(0,s.jsx)(r.code,{children:"modules"})," \u65b0\u5efa\u4e00\u4e2a ",(0,s.jsx)(r.code,{children:"redis"})," \u6587\u4ef6\u5939\uff0c\u7136\u540e\u5199\u5165\u4e00\u4e2a ",(0,s.jsx)(r.code,{children:"constant.ts"})," \u6587\u4ef6"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/server/src/modules/redis/constant.ts"',children:"export const RedisToken = 'REDIS_CLIENT'\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u65b0\u5efa\u4e00\u4e2a ",(0,s.jsx)(r.code,{children:"RedisModule"})," \uff0c\u8fd9\u4e2a\u6a21\u5757\u66b4\u9732\u4e00\u4e2a\u63d0\u4f9b\u8005\uff0c\u5b83\u7684\u503c\u4e3a ",(0,s.jsx)(r.code,{children:"createClient"})," \u521b\u5efa\u7684 redis client \u5bf9\u8c61\uff0c\u4ee5\u540e\u5728\u522b\u7684\u6a21\u5757\u91cc\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e0a\u9762\u5b9a\u4e49\u7684 ",(0,s.jsx)(r.code,{children:"RedisToken"})," \u53bb\u76f4\u63a5\u6ce8\u5165\u8fd9\u4e2a redis client \u5bf9\u8c61\uff0c\u5e76\u7528\u8fd9\u4e2a\u5bf9\u8c61\u5bf9 redis \u8fdb\u884c\u5404\u79cd\u64cd\u4f5c\u4e86\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/server/src/modules/redis/redis.module.ts"',children:"import { Global, Module } from '@nestjs/common'\r\nimport { ConfigType } from '@nestjs/config'\r\nimport { createClient } from 'redis'\r\nimport { redisConfig } from '@/config/redis.config'\r\nimport { RedisToken } from './constant'\r\n\r\n@Global()\r\n@Module({\r\n  providers: [\r\n    {\r\n      provide: RedisToken,\r\n      async useFactory(redisConf: ConfigType<typeof redisConfig>) {\r\n        const client = createClient({\r\n          socket: {\r\n            host: redisConf.host,\r\n            port: redisConf.port\r\n          }\r\n        })\r\n        await client.connect()\r\n        return client\r\n      },\r\n      inject: [redisConfig.KEY]\r\n    }\r\n  ],\r\n  exports: [RedisToken]\r\n})\r\nexport class RedisModule {}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u6700\u540e\u5728 ",(0,s.jsx)(r.code,{children:"AppModule"})," \u4e2d\u5f15\u5165 ",(0,s.jsx)(r.code,{children:"RedisModule"}),"\u548c",(0,s.jsx)(r.code,{children:"redisConfig"}),"\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/server/src/app.module.ts"',children:"// ...\r\nimport { apiConfig, dbConfig, redisConfig } from '@/config'\r\nimport { RedisModule } from '@/modules/redis/redis.module'\r\n// ...\r\n\r\n@Module({\r\n  imports: [\r\n    ConfigModule.forRoot({\r\n      isGlobal: true,\r\n      load: [apiConfig, dbConfig, redisConfig]\r\n    }),\r\n    // ...\r\n    RedisModule\r\n    // ...\r\n  ]\r\n})\r\nexport class AppModule {}\n"})}),"\n",(0,s.jsx)(r.h2,{id:"\u5f15\u5165-nodemailer",children:"\u5f15\u5165 nodemailer"}),"\n",(0,s.jsxs)(r.p,{children:["\u5728\u6211\u4eec\u7684\u6d41\u7a0b\u5f53\u4e2d\uff0c\u9700\u8981\u53d1\u9001\u9a8c\u8bc1\u7801\u5230\u90ae\u7bb1\uff0c\u90a3\u8fd8\u9700\u8981\u4e00\u4e2a\u90ae\u7bb1\u53d1\u9001\u8005\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 ",(0,s.jsx)(r.code,{children:"nodemailer"})," \u8fd9\u4e2a\u5e93\u548c qq \u90ae\u7bb1\u8fdb\u884c\u53d1\u9001\u3002"]}),"\n",(0,s.jsx)(r.h3,{id:"nodemailer-\u914d\u7f6e",children:"nodemailer \u914d\u7f6e"}),"\n",(0,s.jsx)(r.p,{children:"\u8fdb\u5165 qq \u90ae\u7bb1\u540e\uff0c\u6309\u7167\u4ee5\u4e0b\u63d0\u793a\u53bb\u5f00\u542f\u81ea\u5df1\u90ae\u7bb1\u7684\u670d\u52a1\uff0c\u62ff\u5230\u5bf9\u5e94\u7684\u6388\u6743\u7801\u3002"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{src:n(5337).A+"",width:"389",height:"293"})}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{src:n(722).A+"",width:"1232",height:"391"})}),"\n",(0,s.jsx)(r.p,{children:"\u628a\u90ae\u7bb1\u7684\u914d\u7f6e\u586b\u5165\u914d\u7f6e\u6587\u4ef6\u3002"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-json",metastring:'title="apps/server/.env"',children:"# email\r\nEMAIl_HOST=smtp.qq.com\r\nEMAIL_PORT=465\r\nEMAIL_USER=jackdeng155@qq.com\r\nEMAIL_AUTH_CODE=somjvruefdgbided\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u65b0\u5efa\u4e00\u4e2a ",(0,s.jsx)(r.code,{children:"email.config.ts"})," \u6587\u4ef6\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/server/src/config/email.config.ts"',children:"import { registerAs } from '@nestjs/config'\r\n\r\nexport const emailConfig = registerAs('emailConfig', () => {\r\n  if (!process.env.EMAIl_HOST) {\r\n    throw new Error('EMAIl_HOST is not exist')\r\n  }\r\n  if (!process.env.EMAIL_PORT) {\r\n    throw new Error('EMAIL_PORT is not exist')\r\n  }\r\n  if (!process.env.EMAIL_USER) {\r\n    throw new Error('EMAIL_USER is not exist')\r\n  }\r\n  if (!process.env.EMAIL_AUTH_CODE) {\r\n    throw new Error('EMAIL_AUTH_CODE is not exist')\r\n  }\r\n  return {\r\n    host: process.env.EMAIl_HOST,\r\n    port: +process.env.EMAIL_PORT,\r\n    user: process.env.EMAIL_USER,\r\n    code: process.env.EMAIL_AUTH_CODE\r\n  }\r\n})\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u5bfc\u51fa ",(0,s.jsx)(r.code,{children:"email.config.ts"}),"\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/server/src/config/index.ts"',children:"// ...\r\nexport * from './email.config'\n"})}),"\n",(0,s.jsx)(r.h3,{id:"emailmodule-\u6a21\u5757",children:"EmailModule \u6a21\u5757"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-shell",children:"pnpm i nodemailer\r\npnpm i @types/nodemailer -D\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u65b0\u5efa\u4e00\u4e2a ",(0,s.jsx)(r.code,{children:"EmailService"})," \u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/server/src/modules/email/email.service.ts"',children:"import { Inject, Injectable } from '@nestjs/common'\r\nimport { ConfigType } from '@nestjs/config'\r\nimport { createTransport, Transporter } from 'nodemailer'\r\nimport { emailConfig } from '@/config'\r\n\r\n@Injectable()\r\nexport class EmailService {\r\n  transporter: Transporter\r\n\r\n  constructor(\r\n    @Inject(emailConfig.KEY)\r\n    private readonly emConfig: ConfigType<typeof emailConfig>\r\n  ) {\r\n    this.transporter = createTransport({\r\n      host: this.emConfig.host,\r\n      port: this.emConfig.port,\r\n      auth: {\r\n        user: this.emConfig.user,\r\n        pass: this.emConfig.code\r\n      }\r\n    })\r\n  }\r\n\r\n  async sendMail(email: string, subject: string, html: string) {\r\n    await this.transporter.sendMail({\r\n      from: this.emConfig.user,\r\n      to: email,\r\n      subject,\r\n      html\r\n    })\r\n  }\r\n}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u65b0\u5efa\u4e00\u4e2a ",(0,s.jsx)(r.code,{children:"EmailModule"})," \uff0c\u7136\u540e\u5728\u91cc\u9762\u5bfc\u51fa ",(0,s.jsx)(r.code,{children:"EmailService"}),"\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/server/src/modules/email/email.module.ts"',children:"import { Global, Module } from '@nestjs/common'\r\nimport { EmailService } from './email.service'\r\n\r\n@Global()\r\n@Module({\r\n  providers: [EmailService],\r\n  exports: [EmailService]\r\n})\r\nexport class EmailModule {}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u6700\u540e\u5728 ",(0,s.jsx)(r.code,{children:"AppModule"})," \u4e2d\u5f15\u5165 ",(0,s.jsx)(r.code,{children:"EmailModule"}),"\u548c",(0,s.jsx)(r.code,{children:"emailConfig"}),"\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/server/src/app.module.ts"',children:"// ...\r\nimport { apiConfig, dbConfig, redisConfig, emailConfig } from '@/config'\r\nimport { EmailModule } from '@/modules/email/email.module'\r\n// ...\r\n\r\n@Module({\r\n  imports: [\r\n    ConfigModule.forRoot({\r\n      isGlobal: true,\r\n      load: [apiConfig, dbConfig, redisConfig, emailConfig]\r\n    }),\r\n    // ...\r\n    EmailModule\r\n    // ...\r\n  ]\r\n})\r\nexport class AppModule {}\n"})}),"\n",(0,s.jsx)(r.h2,{id:"\u53d1\u9001\u9a8c\u8bc1\u7801\u63a5\u53e3",children:"\u53d1\u9001\u9a8c\u8bc1\u7801\u63a5\u53e3"}),"\n",(0,s.jsxs)(r.p,{children:["\u5b9e\u73b0\u53d1\u9001\u9a8c\u8bc1\u7801\u7684\u63a5\u53e3\uff0c\u5148\u5728\u6839\u76ee\u5f55\u5b89\u88c5 ",(0,s.jsx)(r.code,{children:"nanoid"}),"\uff0c \u56e0\u4e3a\u540e\u9762\u524d\u7aef\u9879\u76ee\u4e5f\u4f1a\u7528\u5230\uff0c\u5b89\u88c5\u7248\u672c 3\uff0c ",(0,s.jsx)(r.code,{children:"nanoid"})," \u65b0\u7248\u4e0d\u518d\u652f\u6301 commonjs\uff0c nestjs \u4f7f\u7528\u4f1a\u62a5\u9519\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-shell",metastring:'title="/"',children:"pnpm i nanoid@3 -w\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u5148\u5728 ",(0,s.jsx)(r.code,{children:"redis"})," \u6a21\u5757\u7684 ",(0,s.jsx)(r.code,{children:"constant"})," \u91cc\u52a0\u4e0a\u4e00\u4e2a ",(0,s.jsx)(r.code,{children:"RegisterCode"})," \u5e38\u91cf\u4f5c\u4e3a\u6ce8\u518c\u9a8c\u8bc1\u7801\u7684\u524d\u7f00\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/server/src/modules/redis/constant.ts"',children:"// ...\r\n\r\nexport const RedisKey = {\r\n  RegisterCode: 'register-code:'\r\n}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u65b0\u5efa\u4e00\u4e2a ",(0,s.jsx)(r.code,{children:"AuthService"}),"\uff0c\u5728\u91cc\u9762\u5148\u5b9e\u73b0\u4e00\u4e2a ",(0,s.jsx)(r.code,{children:"sendCode"})," \u65b9\u6cd5\uff0c\u6574\u4f53\u903b\u8f91\u4e3a\uff0c\u5148\u5224\u65ad\u5bf9\u5e94\u90ae\u7bb1\u7684\u9a8c\u8bc1\u7801\u662f\u5426\u53d1\u8fc7\uff0c\u5982\u679c\u53d1\u8fc7\uff0c\u5224\u65ad\u8ddd\u79bb\u4e0a\u6b21\u9a8c\u8bc1\u7801\u662f\u5426\u8d85\u8fc7\u4e00\u5206\u949f\uff0c\u6ca1\u6709\u5219\u63d0\u793a\u8d85\u8fc7\u4e00\u5206\u949f\u540e\u518d\u91cd\u8bd5\uff0c\u6821\u9a8c\u901a\u8fc7\u5219\u53d1\u9001\u4e00\u4e2a 6 \u4f4d\u7684\u7eaf\u6570\u5b57\u9a8c\u8bc1\u7801\uff0c\u5b58\u5230 redis \u91cc\u65f6\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\u4e3a 3 \u5206\u949f\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/server/src/modules/user/auth.service.ts"',children:"import { Injectable, Inject, HttpException, HttpStatus } from '@nestjs/common'\r\nimport { RedisClientType } from 'redis'\r\nimport { customAlphabet } from 'nanoid'\r\nimport { RedisKey, RedisToken } from '@/modules/redis/constant'\r\nimport { EmailService } from '@/modules/email/email.service'\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  @Inject(RedisToken)\r\n  private readonly redisClient: RedisClientType\r\n\r\n  @Inject()\r\n  private readonly emailService: EmailService\r\n\r\n  async sendCode(email: string) {\r\n    const expireTime = await this.redisClient.expireTime(\r\n      RedisKey.RegisterCode + email\r\n    )\r\n    if (expireTime > 0) {\r\n      const dv = expireTime - Math.floor(Date.now() / 1000)\r\n      if (dv > 2 * 60) {\r\n        throw new HttpException(\r\n          'please try again in 1 minutes',\r\n          HttpStatus.NOT_ACCEPTABLE\r\n        )\r\n      }\r\n    }\r\n\r\n    const nanoid = customAlphabet('1234567890', 6)\r\n    const code = nanoid()\r\n    await this.emailService.sendMail(\r\n      email,\r\n      'Verification code',\r\n      `\r\n        <p>Your verification code is:</p>\r\n        <div style=\"width: 100px;height: 35px;\">${code}</div>\r\n        <p style=\"color:#999;\">effective within 3 minutes</p>\r\n      `\r\n    )\r\n    await this.redisClient.set(RedisKey.RegisterCode + email, code, {\r\n      EX: 3 * 60\r\n    })\r\n  }\r\n}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u5728 ",(0,s.jsx)(r.code,{children:"UserModule"})," \u91cc\u628a ",(0,s.jsx)(r.code,{children:"AuthService"})," \u6ce8\u518c\u4e3a\u63d0\u4f9b\u8005\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",children:"// ...\r\nimport { AuthService } from './auth.service'\r\n\r\n@Module({\r\n  // ...\r\n  providers: [AuthService]\r\n})\r\nexport class UserModule {}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u7136\u540e\u5728 ",(0,s.jsx)(r.code,{children:"AuthController"})," \u91cc\u6dfb\u52a0\u4e00\u4e2a ",(0,s.jsx)(r.code,{children:"sendCode"})," \u63a5\u53e3\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/server/src/modules/user/auth.controller.ts"',children:"// ...\r\nimport { AuthService } from './auth.service'\r\n\r\n@Controller('auth')\r\nexport class AuthController {\r\n  constructor(private readonly authService: AuthService) {}\r\n\r\n  // ...\r\n\r\n  @Post('sendCode')\r\n  sendCode(@Body('email') email: string) {\r\n    return this.authService.sendCode(email)\r\n  }\r\n}\n"})}),"\n",(0,s.jsx)(r.p,{children:"\u6700\u540e\u6d4b\u8bd5\u4e00\u4e0b\u770b\u770b\u6548\u679c\u3002"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{src:n(5096).A+"",width:"1920",height:"1080"})}),"\n",(0,s.jsx)(r.h2,{id:"\u6ce8\u518c\u63a5\u53e3",children:"\u6ce8\u518c\u63a5\u53e3"}),"\n",(0,s.jsxs)(r.p,{children:["\u5b9e\u73b0\u6ce8\u518c\u63a5\u53e3\u524d\uff0c\u5148\u628a\u7528\u6237\u8868\u52a0\u4e0a\uff0c\u5148\u5f80\u6570\u636e\u5e93\u6a21\u5757\u6dfb\u52a0\u4e00\u4e2a ",(0,s.jsx)(r.code,{children:"entities"})," \u6587\u4ef6\u5939\uff0c\u518d\u6dfb\u52a0\u4e00\u4e2a ",(0,s.jsx)(r.code,{children:"BaseEntity"}),"\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/server/src/modules/db/entities/base.entity.ts"',children:"import {\r\n  CreateDateColumn,\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  UpdateDateColumn\r\n} from 'typeorm'\r\n\r\n@Entity()\r\nexport class BaseEntity {\r\n  @PrimaryGeneratedColumn()\r\n  id: number\r\n\r\n  @CreateDateColumn()\r\n  createAt: Date\r\n\r\n  @UpdateDateColumn()\r\n  updateAt: Date\r\n}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u7136\u540e\u6dfb\u52a0\u4e00\u4e2a ",(0,s.jsx)(r.code,{children:"UserEntity"})," \u7ee7\u627f ",(0,s.jsx)(r.code,{children:"BaseEntity"}),"\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/server/src/modules/db/entities/user.entity.ts"',children:"import { Column, Entity } from 'typeorm'\r\nimport { BaseEntity } from './base.entity'\r\n\r\n@Entity({ name: 'user' })\r\nexport class UserEntity extends BaseEntity {\r\n  @Column({\r\n    length: 32,\r\n    unique: true\r\n  })\r\n  username: string\r\n\r\n  @Column({\r\n    length: 50,\r\n    unique: true\r\n  })\r\n  email: string\r\n\r\n  @Column()\r\n  password: string\r\n\r\n  @Column({\r\n    length: 32,\r\n    nullable: true\r\n  })\r\n  nickname: string\r\n}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u518d\u6dfb\u52a0\u4e00\u4e2a ",(0,s.jsx)(r.code,{children:"index.ts"})," \u6587\u4ef6\u5bfc\u51fa\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/server/src/modules/db/entities/index.ts"',children:"export * from './base.entity'\r\nexport * from './user.entity'\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u56e0\u4e3a ",(0,s.jsx)(r.code,{children:"DbModule"})," \u7684 ",(0,s.jsx)(r.code,{children:"TypeOrmModule.forRootAsync"})," \u914d\u7f6e\u4e86 ",(0,s.jsx)(r.code,{children:"autoLoadEntities: true"}),"\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u81ea\u884c\u5bfc\u5165\u4e86\u3002"]}),"\n",(0,s.jsx)(r.p,{children:"\u63a5\u4e0b\u6765\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a dto \u5bf9\u8c61\u4f5c\u4e3a\u6ce8\u518c\u63a5\u53e3\u6240\u9700\u8981\u7684\u6570\u636e\u3002"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/server/src/modules/user/auth.dto.ts"',children:"export class RegisterDto {\r\n  username: string\r\n  email: string\r\n  password: string\r\n  code: string\r\n}\n"})}),"\n",(0,s.jsx)(r.p,{children:"\u56e0\u4e3a\u6dfb\u52a0\u7528\u6237\u9700\u8981\u52a0\u5bc6\u5bc6\u7801\uff0c\u6240\u4ee5\u5148\u6dfb\u52a0\u4e00\u4e2a\u52a0\u5bc6\u51fd\u6570\uff0c\u987a\u4fbf\u628a\u6bd4\u8f83\u51fd\u6570\u4e5f\u52a0\u4e0a\u3002"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/server/src/lib/utils.ts"',children:"import { createHash } from 'crypto'\r\n\r\nexport function generatePass(pass: string) {\r\n  const sha1 = createHash('sha1')\r\n  const ciphertext = sha1.update(pass).digest('hex')\r\n  return ciphertext\r\n}\r\n\r\nexport function comparePass(pass: string, encryptPass: string) {\r\n  const sha1 = createHash('sha1')\r\n  const ciphertext = sha1.update(pass).digest('hex')\r\n  return ciphertext === encryptPass\r\n}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u5728 ",(0,s.jsx)(r.code,{children:"UserModule"})," \u91cc\u7528 ",(0,s.jsx)(r.code,{children:"TypeOrmModule.forFeature"})," \u5bfc\u5165 ",(0,s.jsx)(r.code,{children:"UserEntity"})," \uff0c\u8fd9\u6837\u540e\u9762\u7684 ",(0,s.jsx)(r.code,{children:"AuthService"})," \u5c31\u53ef\u4ee5\u4f7f\u7528\u5bf9\u5e94\u7684 ",(0,s.jsx)(r.code,{children:"Repository"})," \u4e86\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/server/src/modules/user/user.module.ts"',children:"// ...\r\nimport { TypeOrmModule } from '@nestjs/typeorm'\r\nimport { UserEntity } from '@/modules/db/entities'\r\n\r\n@Module({\r\n  imports: [TypeOrmModule.forFeature([UserEntity])]\r\n  // ...\r\n})\r\nexport class UserModule {}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u5728 ",(0,s.jsx)(r.code,{children:"AuthService"})," \u91cc\u5b9e\u73b0\u7ec6\u8282\uff0c\u5148\u4ece redis \u5224\u65ad\u90ae\u7bb1\u9a8c\u8bc1\u7801\u662f\u5426\u6b63\u786e\uff0c\u518d\u4ece\u6570\u636e\u5e93\u5224\u65ad\u7528\u6237\u540d\u662f\u5426\u5df2\u7ecf\u88ab\u6ce8\u518c\uff0c\u5982\u679c\u90fd\u901a\u8fc7\uff0c\u6700\u540e\u7ed9\u7528\u6237\u6dfb\u52a0\u4e00\u4e2a\u968f\u673a\u6635\u79f0\uff0c\u518d\u7528 ",(0,s.jsx)(r.code,{children:"generatePass"})," \u52a0\u5bc6\u4e00\u4e0b\u5bc6\u7801\uff0c\u5c31\u53ef\u4ee5\u628a\u5176\u4f59\u4fe1\u606f\u5b58\u5165\u6570\u636e\u5e93\u4e86\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/server/src/modules/user/auth.service.ts"',children:"// ...\r\nimport { InjectRepository } from '@nestjs/typeorm'\r\nimport { Repository } from 'typeorm'\r\nimport { UserEntity } from '@/modules/db/entities'\r\nimport { RegisterDto } from './auth.dto'\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  // ...\r\n  @InjectRepository(UserEntity)\r\n  private readonly userRepository: Repository<UserEntity>\r\n  // ...\r\n\r\n  async register(registerDto: RegisterDto) {\r\n    const registerCode = await this.redisClient.get(\r\n      RedisKey.RegisterCode + registerDto.email\r\n    )\r\n    if (!registerCode || registerCode !== registerDto.code) {\r\n      throw new HttpException(\r\n        'email verification code is incorrect',\r\n        HttpStatus.NOT_ACCEPTABLE\r\n      )\r\n    }\r\n\r\n    const user = await this.userRepository.findOne({\r\n      where: { username: registerDto.username }\r\n    })\r\n    if (user) {\r\n      throw new HttpException(\r\n        'username already exists',\r\n        HttpStatus.NOT_ACCEPTABLE\r\n      )\r\n    }\r\n\r\n    const newUser = this.userRepository.create({\r\n      username: registerDto.username,\r\n      email: registerDto.email,\r\n      nickname: 'ying#' + nanoid(8),\r\n      password: generatePass(registerDto.password)\r\n    })\r\n\r\n    await this.userRepository.save(newUser)\r\n    await this.redisClient.del(RedisKey.RegisterCode + registerDto.email)\r\n  }\r\n\r\n  // ...\r\n}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u6700\u540e\u7ed9 ",(0,s.jsx)(r.code,{children:"AuthController"})," \u6dfb\u52a0\u4e0a\u6ce8\u518c\u63a5\u53e3\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/server/src/modules/user/auth.controller.ts"',children:"import { Body, Controller, Post } from '@nestjs/common'\r\nimport { AuthService } from './auth.service'\r\nimport { RegisterDto } from './auth.dto'\r\n\r\n@Controller('auth')\r\nexport class AuthController {\r\n  constructor(private readonly authService: AuthService) {}\r\n\r\n  // ...\r\n\r\n  @Post('register')\r\n  register(@Body() registerDto: RegisterDto) {\r\n    return this.authService.register(registerDto)\r\n  }\r\n}\n"})}),"\n",(0,s.jsx)(r.p,{children:"\u73b0\u5728\u53ef\u4ee5\u81ea\u884c\u6d4b\u8bd5\u4e00\u4e0b\u6574\u4f53\u6d41\u7a0b\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u8fd8\u6709\u4e00\u4e2a\u7ec6\u8282\u9700\u8981\u52a0\u4e0a\uff0c\u5c31\u662f\u53d1\u9001\u9a8c\u8bc1\u7801\u7801\u65f6\uff0c\u5148\u5224\u65ad\u4e00\u4e0b\u90ae\u7bb1\u662f\u5426\u88ab\u6ce8\u518c\u4e86\u3002"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/server/src/modules/user/auth.service.ts"',children:"// ...\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  // ...\r\n\r\n  async sendCode(email: string) {\r\n    // ...\r\n\r\n    const user = await this.userRepository.findOne({ where: { email } })\r\n    if (user) {\r\n      throw new HttpException(\r\n        'user email already exists',\r\n        HttpStatus.NOT_ACCEPTABLE\r\n      )\r\n    }\r\n\r\n    const nanoid = customAlphabet('1234567890', 6)\r\n    const code = nanoid()\r\n    // ...\r\n  }\r\n}\n"})}),"\n",(0,s.jsx)(r.p,{children:"\u90a3\u4e48\u672c\u8282\u7684\u6ce8\u518c\u63a5\u53e3\u5b9e\u73b0\u5c31\u5230\u8fd9\u91cc\u7ed3\u675f\u4e86\u3002"})]})}function p(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},5337:(e,r,n)=>{n.d(r,{A:()=>s});const s=n.p+"assets/images/01-90bb76305b9c5e79a0a587d3adab4dc2.png"},722:(e,r,n)=>{n.d(r,{A:()=>s});const s=n.p+"assets/images/02-830be718789c4c30a2eae5f191a12279.png"},5096:(e,r,n)=>{n.d(r,{A:()=>s});const s=n.p+"assets/images/03-c4dac08b522121fb4b6266215b6efcbc.gif"},9128:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>d});var s=n(9474);const i={},t=s.createContext(i);function o(e){const r=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(t.Provider,{value:r},e.children)}}}]);