"use strict";(self.webpackChunkying_blog=self.webpackChunkying_blog||[]).push([[6911],{9613:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var s=t(9496);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);n&&(s=s.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,s)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,s,o=function(e,n){if(null==e)return{};var t,s,o={},r=Object.keys(e);for(s=0;s<r.length;s++)t=r[s],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(s=0;s<r.length;s++)t=r[s],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=s.createContext({}),l=function(e){var n=s.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=l(e.components);return s.createElement(i.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return s.createElement(s.Fragment,{},n)}},m=s.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(t),m=o,g=u["".concat(i,".").concat(m)]||u[m]||d[m]||r;return t?s.createElement(g,a(a({ref:n},p),{},{components:t})):s.createElement(g,a({ref:n},p))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,a=new Array(r);a[0]=m;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c[u]="string"==typeof e?e:o,a[1]=c;for(var l=2;l<r;l++)a[l]=t[l];return s.createElement.apply(null,a)}return s.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3493:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var s=t(8957),o=(t(9496),t(9613));const r={id:"docking-realtime-message",sidebar_label:"\u5ba2\u6237\u7aef\u5bf9\u63a5\u5373\u65f6\u901a\u8baf",title:"\u5ba2\u6237\u7aef\u5bf9\u63a5\u5373\u65f6\u901a\u8baf"},a=void 0,c={unversionedId:"ying-chat/docking-realtime-message",id:"ying-chat/docking-realtime-message",title:"\u5ba2\u6237\u7aef\u5bf9\u63a5\u5373\u65f6\u901a\u8baf",description:"\u672c\u8282\u5c06\u6765\u5ba2\u6237\u7aef\u4f7f\u7528socket.io-client\u5bf9\u63a5\u5373\u65f6\u901a\u4fe1\u3002",source:"@site/docs/ying-chat/20-docking-realtime-message.md",sourceDirName:"ying-chat",slug:"/ying-chat/docking-realtime-message",permalink:"/docs/ying-chat/docking-realtime-message",draft:!1,tags:[],version:"current",sidebarPosition:20,frontMatter:{id:"docking-realtime-message",sidebar_label:"\u5ba2\u6237\u7aef\u5bf9\u63a5\u5373\u65f6\u901a\u8baf",title:"\u5ba2\u6237\u7aef\u5bf9\u63a5\u5373\u65f6\u901a\u8baf"},sidebar:"yingChat",previous:{title:"\u4f7f\u7528socket.io\u5b9e\u73b0\u5373\u65f6\u901a\u8baf",permalink:"/docs/ying-chat/realtime-message-and-socket.io"},next:{title:"\u4f7f\u7528docker\u6253\u5305\u6574\u4e2a\u5e94\u7528\u90e8\u7f72",permalink:"/docs/ying-chat/docker-build-deploy"}},i={},l=[{value:"\u51c6\u5907 SocketProvider",id:"\u51c6\u5907-socketprovider",level:2},{value:"\u5bf9\u8bdd\u9875\u9762\u6d88\u606f\u5217\u8868\u4fee\u6539",id:"\u5bf9\u8bdd\u9875\u9762\u6d88\u606f\u5217\u8868\u4fee\u6539",level:2},{value:"\u5bf9\u8bdd\u4fa7\u8fb9\u680f\u4fee\u6539",id:"\u5bf9\u8bdd\u4fa7\u8fb9\u680f\u4fee\u6539",level:2},{value:"\u6d88\u606f\u7ec4\u4ef6",id:"\u6d88\u606f\u7ec4\u4ef6",level:2}],p={toc:l},u="wrapper";function d(e){let{components:n,...r}=e;return(0,o.kt)(u,(0,s.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u672c\u8282\u5c06\u6765\u5ba2\u6237\u7aef\u4f7f\u7528",(0,o.kt)("inlineCode",{parentName:"p"},"socket.io-client"),"\u5bf9\u63a5\u5373\u65f6\u901a\u4fe1\u3002"),(0,o.kt)("h2",{id:"\u51c6\u5907-socketprovider"},"\u51c6\u5907 SocketProvider"),(0,o.kt)("p",null,"\u5148\u5b89\u88c5\u4f9d\u8d56\u4f9d\u8d56\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="apps/client"',title:'"apps/client"'},"pnpm i socket.io-client\n")),(0,o.kt)("p",null,"\u5728",(0,o.kt)("inlineCode",{parentName:"p"},"src"),"\u4e0b\u65b0\u5efa\u4e00\u4e2a",(0,o.kt)("inlineCode",{parentName:"p"},"socket"),"\u6587\u4ef6\u5939\uff0c\u6dfb\u52a0\u4e00\u4e2a",(0,o.kt)("inlineCode",{parentName:"p"},"socket-provider.tsx"),"\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="apps/client/src/socket/socket-provider.tsx"',title:'"apps/client/src/socket/socket-provider.tsx"'},"import React, { createContext, useEffect, useState } from 'react'\nimport { io, Socket } from 'socket.io-client'\nimport { useAuthStore, resetAuth } from '@/stores'\n\ntype TSocketContext = {\n  socket: Socket | undefined\n  connected: boolean\n}\n\nexport const SocketContext = createContext<TSocketContext>({\n  socket: undefined,\n  connected: false\n})\n\nconst useSocketIo = () => {\n  const [socket, setSocket] = useState<Socket | undefined>()\n  const [connected, setConnected] = useState(false)\n\n  const token = useAuthStore(state => state.token)\n\n  useEffect(() => {\n    const socket = io({\n      extraHeaders: {\n        authorization: token\n      }\n    })\n\n    socket.on('connect', () => {\n      setConnected(true)\n    })\n    socket.on('disconnect', () => {\n      setConnected(false)\n    })\n\n    socket.on('authFail', () => {\n      resetAuth()\n    })\n\n    setSocket(socket)\n\n    return () => {\n      socket.disconnect()\n    }\n  }, [token])\n\n  return {\n    socket,\n    connected\n  }\n}\n\ntype SocketProviderProps = {\n  children: React.ReactNode\n}\n\nexport const SocketProvider: React.FC<SocketProviderProps> = ({ children }) => {\n  const { socket, connected } = useSocketIo()\n\n  return (\n    <SocketContext.Provider value={{ socket, connected }}>\n      {children}\n    </SocketContext.Provider>\n  )\n}\n")),(0,o.kt)("p",null,"\u518d\u6dfb\u52a0\u4e00\u4e2a",(0,o.kt)("inlineCode",{parentName:"p"},"useSocket"),"hook\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="apps/client/src/socket/use-socket.ts"',title:'"apps/client/src/socket/use-socket.ts"'},"import { useContext } from 'react'\nimport { SocketContext } from './socket-provider'\n\nexport const useSocket = () => {\n  return useContext(SocketContext)\n}\n")),(0,o.kt)("p",null,"\u5bfc\u51fa\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="apps/client/src/socket/index.ts"',title:'"apps/client/src/socket/index.ts"'},"export * from './socket-provider'\nexport * from './use-socket'\n")),(0,o.kt)("p",null,"\u5728",(0,o.kt)("inlineCode",{parentName:"p"},"AppLayout"),"\u91cc\u9762\u5f15\u5165",(0,o.kt)("inlineCode",{parentName:"p"},"SocketProvider"),"\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="apps/client/src/components/layout/index.tsx"',title:'"apps/client/src/components/layout/index.tsx"'},"// ...\nimport { SocketProvider } from '@/socket'\n\nexport const AppLayout = () => {\n  return useAuthRoute(<SocketProvider>{/*  */}</SocketProvider>)\n}\n")),(0,o.kt)("p",null,"\u8fd8\u5f97\u5728",(0,o.kt)("inlineCode",{parentName:"p"},"vite.config.ts"),"\u91cc\u914d\u7f6e\u4e00\u4e0b\u4ee3\u7406\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="apps/client/vite.config.ts"',title:'"apps/client/vite.config.ts"'},"// ...\nexport default defineConfig({\n  // ...\n  server: {\n    proxy: {\n      // ...\n      '/socket.io': {\n        target: 'http://localhost:3000',\n        ws: true\n      }\n    }\n  }\n})\n")),(0,o.kt)("h2",{id:"\u5bf9\u8bdd\u9875\u9762\u6d88\u606f\u5217\u8868\u4fee\u6539"},"\u5bf9\u8bdd\u9875\u9762\u6d88\u606f\u5217\u8868\u4fee\u6539"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="apps/client/src/pages/conversation/messages/messages.tsx"',title:'"apps/client/src/pages/conversation/messages/messages.tsx"'},"import {\n  // ...\n  RefObject\n} from 'react'\n// ...\nimport {\n  // ...\n  Chip\n} from '@nextui-org/react'\n// ...\nimport { useSocket } from '@/socket'\nimport { ArrowDown } from 'lucide-react'\n\n// ...\nconst GROUP_MESSAGE_KEY = 'group-message'\n\n// ...\n\nconst useRealtimeMessage = (\n  scrollBoxRef: RefObject<ScollBoxHandle>,\n  addNewMessage: (newMessage: GroupMessageVo) => void\n) => {\n  const [unreadNum, setUnreadNum] = useState(0)\n  const { socket } = useSocket()\n  const { groupId } = useParams()\n\n  useEffect(() => {\n    if (!groupId || !socket) return\n\n    const handleNewMessage = (message: GroupMessageVo) => {\n      const distanceFromBottom = scrollBoxRef.current?.getDistanceFromBottom()\n      if (\n        scrollBoxRef.current &&\n        document.visibilityState === 'visible' &&\n        Number(distanceFromBottom) <= 300\n      ) {\n        scrollBoxRef.current?.keepBottom(() => {\n          addNewMessage(message)\n        })\n      } else {\n        addNewMessage(message)\n        setUnreadNum(preNum => preNum + 1)\n      }\n    }\n\n    socket.on(`${GROUP_MESSAGE_KEY}:${groupId}`, handleNewMessage)\n\n    return () => {\n      socket.off(`${GROUP_MESSAGE_KEY}:${groupId}`, handleNewMessage)\n    }\n  }, [socket, scrollBoxRef, groupId, addNewMessage])\n\n  return {\n    unreadNum,\n    setUnreadNum\n  }\n}\n\nexport const ChatMessages = () => {\n  // ...\n  const { messages, firstLoaded, loaded, loadPrevMessages, addNewMessage } =\n    useMessages()\n\n  const { unreadNum, setUnreadNum } = useRealtimeMessage(\n    scrollBoxRef,\n    addNewMessage\n  )\n\n  // ...\n\n  return (\n    <div className=\"flex-1 h-[1px] relative\">\n      {unreadNum ? (\n        <Chip\n          className=\"absolute top-10 right-5 z-30 cursor-pointer\"\n          startContent={<ArrowDown />}\n          variant=\"solid\"\n          color=\"success\"\n          onClick={() => {\n            scrollBoxRef.current?.scrollToBottom('smooth')\n            setUnreadNum(0)\n          }}\n        >\n          {`you have ${unreadNum} new messages`}\n        </Chip>\n      ) : null}\n\n      {/*  */}\n    </div>\n  )\n}\n")),(0,o.kt)("h2",{id:"\u5bf9\u8bdd\u4fa7\u8fb9\u680f\u4fee\u6539"},"\u5bf9\u8bdd\u4fa7\u8fb9\u680f\u4fee\u6539"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="apps/client/src/pages/conversation/use-conversation.ts"',title:'"apps/client/src/pages/conversation/use-conversation.ts"'},"import {\n  // ...\n  useEffect\n} from 'react'\n// ...\nimport { ConversationVo, GroupMessageVo } from '@ying-chat/shared'\nimport { useSocket } from '@/socket'\nimport { debounce } from '@/utils'\n\nexport const useConversationLogic = () => {\n  // ...\n\n  const { data, setData } = useApi<ConversationVo[]>({\n    func: useCallback(() => conversationApi.getConversationList(), [])\n  })\n\n  // ...\n\n  const { socket } = useSocket()\n\n  const updateLastMsgCache = useCallback(\n    (messageId: number) => {\n      if (!currentConversation || currentConversation.lastMsgId >= messageId)\n        return\n\n      socket?.emit('update-last-msg', {\n        id: currentConversation.id,\n        messageId\n      })\n    },\n    [socket, currentConversation]\n  )\n\n  const updateLastMsg = debounce(updateLastMsgCache, 200)\n\n  const handleNewMessage = useCallback(\n    (message: GroupMessageVo) => {\n      setData(prevData =>\n        prevData?.map(el => {\n          if (el.groupId === message.groupId) {\n            return {\n              ...el,\n              recentMsg: message,\n              unreadNum: el.unreadNum + 1\n            }\n          }\n          return el\n        })\n      )\n    },\n    [setData]\n  )\n\n  useEffect(() => {\n    data?.forEach(el => {\n      socket?.on(`group-message:${el.groupId}`, handleNewMessage)\n    })\n\n    return () => {\n      data?.forEach(el => {\n        socket?.off(`group-message:${el.groupId}`, handleNewMessage)\n      })\n    }\n  }, [socket, data, handleNewMessage])\n\n  useEffect(() => {\n    const handleUpdateConversation = (conversation: ConversationVo) => {\n      setData(prevData =>\n        prevData?.map(el => {\n          if (el.id === conversation.id) {\n            return {\n              ...el,\n              lastMsgId: conversation.lastMsgId,\n              unreadNum: conversation.unreadNum\n            }\n          }\n          return el\n        })\n      )\n    }\n    socket?.on('update-last-msg', handleUpdateConversation)\n\n    return () => {\n      socket?.off('update-last-msg', handleUpdateConversation)\n    }\n  }, [socket, setData])\n\n  return {\n    // ...\n    updateLastMsg\n  }\n}\n\ntype TConversationContext = {\n  // ...\n  updateLastMsg: (msgId: number) => void\n}\n\nexport const ConversationContext = createContext<TConversationContext>({\n  // ...\n  updateLastMsg: () => {}\n})\n\n// ...\n")),(0,o.kt)("p",null,"\u66f4\u65b0\u4e00\u4e0b",(0,o.kt)("inlineCode",{parentName:"p"},"ConversationProvider"),"\uff0c\u6dfb\u52a0",(0,o.kt)("inlineCode",{parentName:"p"},"updateLastMsg"),"\u51fd\u6570\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="apps/client/src/pages/conversation/conversation-provider.tsx"',title:'"apps/client/src/pages/conversation/conversation-provider.tsx"'},"// ...\n\nexport const ConversationProvider: React.FC<ConversationProviderProps> = ({\n  children\n}) => {\n  const {\n    // ...\n    updateLastMsg\n  } = useConversationLogic()\n\n  return (\n    <ConversationContext.Provider\n      value={{\n        // ...,\n        updateLastMsg\n      }}\n    >\n      {children}\n    </ConversationContext.Provider>\n  )\n}\n")),(0,o.kt)("h2",{id:"\u6d88\u606f\u7ec4\u4ef6"},"\u6d88\u606f\u7ec4\u4ef6"),(0,o.kt)("p",null,"\u901a\u8fc7",(0,o.kt)("inlineCode",{parentName:"p"},"IntersectionObserver"),"\u76d1\u542c\u6d88\u606f\u7ec4\u4ef6\u662f\u5426\u88ab\u7528\u6237\u770b\u5230\uff0c\u770b\u5230\u5219\u7528",(0,o.kt)("inlineCode",{parentName:"p"},"updateLastMsg"),"\u51fd\u6570\u66f4\u65b0\u6700\u540e\u4e00\u6761\u4fe1\u606f id\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="apps/client/src/pages/conversation/messages/message-item.tsx"',title:'"apps/client/src/pages/conversation/messages/message-item.tsx"'},"import {\n  // ...\n  useEffect\n} from 'react'\n// ...\nimport { useObserver } from '@/components/scroll-box'\nimport { useConversation } from '../use-conversation'\n\n// ...\n\nexport const ChatMessageItem = ({ message }: ChatMessageItemProps) => {\n  const messageItemRef = useRef(null)\n\n  const { observer } = useObserver()\n  const { updateLastMsg } = useConversation()\n\n  useEffect(() => {\n    if (!observer || !messageItemRef.current) return\n\n    const unObserver = observer(messageItemRef.current, () => {\n      updateLastMsg(message.id)\n      unObserver()\n    })\n\n    return unObserver\n  }, [observer, messageItemRef, updateLastMsg, message])\n\n  return <MessageItem ref={messageItemRef} message={message} />\n}\n")),(0,o.kt)("p",null,"\u6700\u540e\u6d4b\u8bd5\u4e00\u4e0b\u3002"),(0,o.kt)("p",null,(0,o.kt)("img",{src:t(6988).Z,width:"1920",height:"1080"})),(0,o.kt)("p",null,"\u672c\u8282\u5230\u6b64\u7ed3\u675f\u3002"))}d.isMDXComponent=!0},6988:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/01-a88ca7ef2bd41bddd23e7692b1147d8b.gif"}}]);