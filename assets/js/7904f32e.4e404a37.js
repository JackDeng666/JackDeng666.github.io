"use strict";(self.webpackChunkying_blog=self.webpackChunkying_blog||[]).push([[8940],{9613:(n,e,t)=>{t.d(e,{Zo:()=>c,kt:()=>g});var o=t(9496);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,o)}return t}function s(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function i(n,e){if(null==n)return{};var t,o,r=function(n,e){if(null==n)return{};var t,o,r={},a=Object.keys(n);for(o=0;o<a.length;o++)t=a[o],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(o=0;o<a.length;o++)t=a[o],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var l=o.createContext({}),p=function(n){var e=o.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):s(s({},e),n)),t},c=function(n){var e=p(n.components);return o.createElement(l.Provider,{value:e},n.children)},d="mdxType",u={inlineCode:"code",wrapper:function(n){var e=n.children;return o.createElement(o.Fragment,{},e)}},m=o.forwardRef((function(n,e){var t=n.components,r=n.mdxType,a=n.originalType,l=n.parentName,c=i(n,["components","mdxType","originalType","parentName"]),d=p(t),m=r,g=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return t?o.createElement(g,s(s({ref:e},c),{},{components:t})):o.createElement(g,s({ref:e},c))}));function g(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var a=t.length,s=new Array(a);s[0]=m;var i={};for(var l in e)hasOwnProperty.call(e,l)&&(i[l]=e[l]);i.originalType=n,i[d]="string"==typeof n?n:r,s[1]=i;for(var p=2;p<a;p++)s[p]=t[p];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3783:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var o=t(8957),r=(t(9496),t(9613));const a={id:"docking-group-api",sidebar_label:"\u5ba2\u6237\u7aef\u5bf9\u63a5\u7fa4\u7ec4api",title:"\u5ba2\u6237\u7aef\u5bf9\u63a5\u7fa4\u7ec4api"},s=void 0,i={unversionedId:"ying-chat/docking-group-api",id:"ying-chat/docking-group-api",title:"\u5ba2\u6237\u7aef\u5bf9\u63a5\u7fa4\u7ec4api",description:"\u672c\u8282\u6765\u5bf9\u63a5\u4e0a\u8282\u7684\u7fa4\u804a api\u3002",source:"@site/docs/ying-chat/15-docking-group-api.md",sourceDirName:"ying-chat",slug:"/ying-chat/docking-group-api",permalink:"/docs/ying-chat/docking-group-api",draft:!1,tags:[],version:"current",sidebarPosition:15,frontMatter:{id:"docking-group-api",sidebar_label:"\u5ba2\u6237\u7aef\u5bf9\u63a5\u7fa4\u7ec4api",title:"\u5ba2\u6237\u7aef\u5bf9\u63a5\u7fa4\u7ec4api"},sidebar:"yingChat",previous:{title:"\u7fa4\u7ec4\u76f8\u5173api\u5b9e\u73b0",permalink:"/docs/ying-chat/group-api"},next:{title:"\u7fa4\u804a api",permalink:"/docs/ying-chat/message-api"}},l={},p=[{value:"\u524d\u7aef\u63a5\u53e3\u51c6\u5907",id:"\u524d\u7aef\u63a5\u53e3\u51c6\u5907",level:2},{value:"vo \u6587\u4ef6\u51c6\u5907",id:"vo-\u6587\u4ef6\u51c6\u5907",level:3},{value:"\u63a5\u53e3\u6587\u4ef6",id:"\u63a5\u53e3\u6587\u4ef6",level:3},{value:"\u9875\u9762\u5bf9\u63a5",id:"\u9875\u9762\u5bf9\u63a5",level:2},{value:"<code>ContactPage</code>\u4fee\u6539",id:"contactpage\u4fee\u6539",level:3},{value:"\u5f39\u6846\u6dfb\u52a0",id:"\u5f39\u6846\u6dfb\u52a0",level:3},{value:"\u5728<code>Sidebar</code>\u91cc\u9762\u6dfb\u52a0\u5f39\u6846",id:"\u5728sidebar\u91cc\u9762\u6dfb\u52a0\u5f39\u6846",level:3},{value:"\u7fa4\u8be6\u60c5\u9875\u9762",id:"\u7fa4\u8be6\u60c5\u9875\u9762",level:2},{value:"\u4e8c\u7ea7\u8def\u7531\u914d\u7f6e",id:"\u4e8c\u7ea7\u8def\u7531\u914d\u7f6e",level:3},{value:"<code>ContactDetail</code>\u5b8c\u5584",id:"contactdetail\u5b8c\u5584",level:3}],c={toc:p},d="wrapper";function u(n){let{components:e,...a}=n;return(0,r.kt)(d,(0,o.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"\u672c\u8282\u6765\u5bf9\u63a5\u4e0a\u8282\u7684\u7fa4\u804a api\u3002"),(0,r.kt)("h2",{id:"\u524d\u7aef\u63a5\u53e3\u51c6\u5907"},"\u524d\u7aef\u63a5\u53e3\u51c6\u5907"),(0,r.kt)("h3",{id:"vo-\u6587\u4ef6\u51c6\u5907"},"vo \u6587\u4ef6\u51c6\u5907"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="packages/shared/src/vo/group.vo.ts"',title:'"packages/shared/src/vo/group.vo.ts"'},"import { FileVo } from './file.vo'\nimport { UserVo } from './user.vo'\n\nexport type GroupVo = {\n  id: number\n  name: string\n  description?: string\n  inviteCode?: string\n  coverId: number\n  cover: FileVo\n  createById: number\n  createAt: string\n  updateAt: string\n  users?: UserVo[]\n}\n\nexport type GroupListVo = {\n  owner: GroupVo[]\n  member: GroupVo[]\n}\n")),(0,r.kt)("p",null,"\u5bfc\u51fa\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="packages/shared/src/vo/index.ts"',title:'"packages/shared/src/vo/index.ts"'},"// ...\nexport * from './group.vo'\n")),(0,r.kt)("h3",{id:"\u63a5\u53e3\u6587\u4ef6"},"\u63a5\u53e3\u6587\u4ef6"),(0,r.kt)("p",null,"\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"api"),"\u4e0b\u65b0\u5efa\u4e00\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"group.ts"),"\u63a5\u53e3\u6587\u4ef6\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="apps/client/src/api/group.ts"',title:'"apps/client/src/api/group.ts"'},"import { CreateGroupDto, FileVo, GroupVo, GroupListVo } from '@ying-chat/shared'\nimport { request } from './request'\n\nexport function createGroup(groupDto: CreateGroupDto): Promise<GroupVo> {\n  return request.post('/group', groupDto)\n}\n\nexport function uploadGroupCover(file: File): Promise<FileVo> {\n  const form = new FormData()\n  form.append('file', file)\n  return request.post('/group/cover', form)\n}\n\nexport function joinGroup(inviteCode: string): Promise<null> {\n  return request.get(`/group/join/${inviteCode}`)\n}\n\nexport function getUserGroupList(): Promise<GroupListVo> {\n  return request.get('/group/list')\n}\n\nexport function getGroupInfo(id: string): Promise<GroupVo> {\n  return request.get(`/group/${id}`)\n}\n")),(0,r.kt)("p",null,"\u5bfc\u51fa\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="apps/client/src/api/index.ts"',title:'"apps/client/src/api/index.ts"'},"// ...\nimport * as groupApi from './group'\n\nexport {\n  // ...\n  groupApi\n}\n")),(0,r.kt)("h2",{id:"\u9875\u9762\u5bf9\u63a5"},"\u9875\u9762\u5bf9\u63a5"),(0,r.kt)("h3",{id:"contactpage\u4fee\u6539"},(0,r.kt)("inlineCode",{parentName:"h3"},"ContactPage"),"\u4fee\u6539"),(0,r.kt)("p",null,"\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"contact"),"\u4e0b\u9762\u6dfb\u52a0\u4e00\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"sidebar"),"\u7ec4\u4ef6\u4f5c\u4e3a\u5c55\u793a\u7528\u6237\u7fa4\u5217\u8868\u7684\u5c55\u793a\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="apps/client/src/pages/contact/sidebar.tsx"',title:'"apps/client/src/pages/contact/sidebar.tsx"'},'import { useCallback, useState, FC } from \'react\'\nimport {\n  Dropdown,\n  DropdownTrigger,\n  DropdownMenu,\n  DropdownItem,\n  Avatar,\n  Divider,\n  Accordion,\n  AccordionItem,\n  cn\n} from \'@nextui-org/react\'\nimport { ChevronRight, PlusCircle, UserPlus } from \'lucide-react\'\nimport { useNavigate } from \'react-router-dom\'\nimport { GroupListVo, GroupVo } from \'@ying-chat/shared\'\nimport { groupApi } from \'@/api\'\nimport { useApi } from \'@/api/use-api\'\n\ntype GroupListProps = {\n  list: GroupVo[]\n}\n\nconst GroupList: FC<GroupListProps> = ({ list }) => {\n  const navigate = useNavigate()\n\n  return (\n    <div>\n      {list.map((el, index) => (\n        <div\n          className="flex items-center p-2 w-full cursor-pointer"\n          key={index}\n        >\n          <Avatar className="mr-2 flex-shrink-0" src={el.cover?.url} />\n          <p className="text-ellipsis overflow-hidden break-all whitespace-nowrap text-base">\n            {el.name}\n          </p>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport const Sidebar = () => {\n  const { data: group } = useApi<GroupListVo>({\n    func: useCallback(() => groupApi.getUserGroupList(), [])\n  })\n\n  const [openDropdown, setOpenDropdown] = useState(false)\n\n  return (\n    <div className="w-[240px] flex flex-col bg-content2">\n      <Dropdown\n        className="w-[230px]"\n        placement="bottom-start"\n        onOpenChange={open => {\n          setOpenDropdown(open)\n        }}\n      >\n        <DropdownTrigger>\n          <div className="flex justify-between text-lg p-2 cursor-pointer">\n            <p>Contact</p>\n            <ChevronRight\n              className={cn(\n                \'transition-all text-sm\',\n                openDropdown && \'rotate-90\'\n              )}\n            />\n          </div>\n        </DropdownTrigger>\n        <DropdownMenu aria-label="Group Actions" variant="flat">\n          <DropdownItem\n            key="user-info"\n            startContent={<PlusCircle className="w-5 h-5" />}\n          >\n            create a group chat\n          </DropdownItem>\n          <DropdownItem\n            key="change-password"\n            startContent={<UserPlus className="w-5 h-5" />}\n          >\n            join a group chat\n          </DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n\n      <Divider />\n\n      <Accordion\n        selectionMode="multiple"\n        showDivider={false}\n        className="flex flex-col gap-1 w-full box-border px-0"\n        itemClasses={{\n          title: \'font-normal text-sm\',\n          trigger: \'px-2\',\n          indicator: \'text-xl\'\n        }}\n      >\n        <AccordionItem\n          key="1"\n          aria-label="The Group I Created"\n          title={`The Group I Created (${group?.owner.length})`}\n        >\n          <GroupList list={group?.owner || []} />\n        </AccordionItem>\n        <AccordionItem\n          key="2"\n          aria-label="The Group I Joined"\n          title={`The Group I Joined (${group?.member.length})`}\n        >\n          <GroupList list={group?.member || []} />\n        </AccordionItem>\n      </Accordion>\n    </div>\n  )\n}\n')),(0,r.kt)("p",null,"\u4fee\u6539\u4e00\u4e0b",(0,r.kt)("inlineCode",{parentName:"p"},"ContactPage"),"\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="apps/client/src/pages/contact/index.tsx"',title:'"apps/client/src/pages/contact/index.tsx"'},'import { Sidebar } from \'./sidebar\'\n\nexport const ContactPage = () => {\n  return (\n    <div className="h-full flex flex-row">\n      <Sidebar />\n\n      <main className="flex-1"></main>\n    </div>\n  )\n}\n')),(0,r.kt)("h3",{id:"\u5f39\u6846\u6dfb\u52a0"},"\u5f39\u6846\u6dfb\u52a0"),(0,r.kt)("p",null,"\u73b0\u5728\u8fd8\u6ca1\u6709\u521b\u5efa\u8fc7\u4efb\u4f55\u7fa4\u7ec4\uff0c\u6211\u4eec\u5148\u6dfb\u52a0\u4e24\u4e2a\u5f39\u6846\uff0c\u4e00\u4e2a\u521b\u5efa\u7fa4\u7ec4",(0,r.kt)("inlineCode",{parentName:"p"},"GroupModal"),"\uff0c\u4e00\u4e2a\u52a0\u5165\u7fa4\u7ec4",(0,r.kt)("inlineCode",{parentName:"p"},"JoinGroupModal"),"\uff0c\u5728\u91cc\u9762\u5b9e\u73b0\u5bf9\u63a5\u903b\u8f91\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="apps/client/src/components/modals/group-modal.tsx"',title:'"apps/client/src/components/modals/group-modal.tsx"'},"import {\n  Button,\n  Input,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  Textarea,\n  cn\n} from '@nextui-org/react'\nimport { FC, useState } from 'react'\nimport { toast } from 'sonner'\nimport { useForm } from 'react-hook-form'\nimport { classValidatorResolver } from '@hookform/resolvers/class-validator'\nimport { CreateGroupDto } from '@ying-chat/shared'\nimport { groupApi } from '@/api'\nimport { ImageUpload } from '@/components/upload/image-upload'\n\ntype UserInfoModalProps = {\n  open: boolean\n  close: () => void\n  confirmSuccess?: () => void\n}\n\nconst resolver = classValidatorResolver(CreateGroupDto)\n\nexport const GroupModal: FC<UserInfoModalProps> = ({\n  open,\n  close,\n  confirmSuccess\n}) => {\n  const {\n    register,\n    setValue,\n    reset,\n    handleSubmit,\n    formState: { errors }\n  } = useForm<CreateGroupDto>({\n    resolver\n  })\n\n  const [confirmLoading, setConfirmLoading] = useState(false)\n\n  const onFinish = async (values: CreateGroupDto) => {\n    try {\n      setConfirmLoading(true)\n      await groupApi.createGroup(values)\n      toast.success('Group chat successfully created!')\n      close()\n      confirmSuccess && confirmSuccess()\n      reset()\n    } catch {\n    } finally {\n      setConfirmLoading(false)\n    }\n  }\n\n  return (\n    <Modal isOpen={open} onClose={close} isDismissable={false}>\n      <ModalContent>\n        {onClose => (\n          <>\n            <ModalHeader className=\"flex flex-col gap-1\">\n              Create group info\n            </ModalHeader>\n            <form onSubmit={handleSubmit(onFinish)}>\n              <ModalBody>\n                <Input\n                  label=\"Group Name\"\n                  maxLength={32}\n                  {...register('name')}\n                  isInvalid={Boolean(errors.name)}\n                  errorMessage={errors.name?.message}\n                />\n                <Textarea\n                  label=\"Group Description\"\n                  maxRows={3}\n                  maxLength={100}\n                  {...register('description')}\n                  isInvalid={Boolean(errors.description)}\n                  errorMessage={errors.description?.message}\n                />\n                <p\n                  className={cn(\n                    'text-sm text-foreground-500',\n                    Boolean(errors.coverId) && 'text-danger'\n                  )}\n                >\n                  Group Cover\n                </p>\n                <div>\n                  <ImageUpload\n                    aria-label=\"cover\"\n                    handleUpload={(file: File) =>\n                      groupApi.uploadGroupCover(file)\n                    }\n                    onSuccess={minioFile => {\n                      setValue('coverId', minioFile.id)\n                    }}\n                  />\n                </div>\n                <p className=\"text-tiny text-danger\">\n                  {errors.coverId?.message}\n                </p>\n              </ModalBody>\n              <ModalFooter>\n                <Button\n                  color=\"danger\"\n                  variant=\"ghost\"\n                  isDisabled={confirmLoading}\n                  onPress={onClose}\n                >\n                  Close\n                </Button>\n                <Button\n                  color=\"primary\"\n                  type=\"submit\"\n                  isLoading={confirmLoading}\n                >\n                  Create\n                </Button>\n              </ModalFooter>\n            </form>\n          </>\n        )}\n      </ModalContent>\n    </Modal>\n  )\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="apps/client/src/components/modals/join-group-modal.tsx"',title:'"apps/client/src/components/modals/join-group-modal.tsx"'},"import {\n  Button,\n  Input,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalFooter,\n  ModalHeader\n} from '@nextui-org/react'\nimport { useState } from 'react'\nimport { toast } from 'sonner'\nimport { groupApi } from '@/api'\n\ntype JoinGroupModalProps = {\n  open: boolean\n  close: () => void\n  confirmSuccess?: () => void\n}\n\nexport const JoinGroupModal = ({\n  open,\n  close,\n  confirmSuccess\n}: JoinGroupModalProps) => {\n  const [inviteCode, setInviteCode] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [confirmLoading, setConfirmLoading] = useState(false)\n\n  const handleJoin = async () => {\n    if (!inviteCode) {\n      return setErrorMessage('Please input invite code!')\n    }\n    setErrorMessage('')\n    try {\n      setConfirmLoading(true)\n      await groupApi.joinGroup(inviteCode)\n      toast.success('Join the group chat successfully!')\n      setInviteCode('')\n      close()\n      confirmSuccess && confirmSuccess()\n    } catch {\n    } finally {\n      setConfirmLoading(false)\n    }\n  }\n\n  return (\n    <Modal isOpen={open} onClose={close} isDismissable={false}>\n      <ModalContent>\n        {onClose => (\n          <>\n            <ModalHeader className=\"flex flex-col gap-1\">\n              Join a group chat\n            </ModalHeader>\n            <ModalBody>\n              <Input\n                label=\"Invite Code\"\n                variant=\"underlined\"\n                maxLength={32}\n                value={inviteCode}\n                onChange={e => {\n                  setInviteCode(e.target.value)\n                }}\n                isInvalid={Boolean(errorMessage)}\n                errorMessage={errorMessage}\n              />\n            </ModalBody>\n            <ModalFooter>\n              <Button\n                color=\"danger\"\n                variant=\"ghost\"\n                isDisabled={confirmLoading}\n                onPress={onClose}\n              >\n                Close\n              </Button>\n              <Button\n                color=\"primary\"\n                isLoading={confirmLoading}\n                onPress={handleJoin}\n              >\n                Join\n              </Button>\n            </ModalFooter>\n          </>\n        )}\n      </ModalContent>\n    </Modal>\n  )\n}\n")),(0,r.kt)("p",null,"\u5bfc\u51fa\u4e00\u4e0b\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="apps/client/src/components/modals/index.ts"',title:'"apps/client/src/components/modals/index.ts"'},"// ...\nexport * from './group-modal'\nexport * from './join-group-modal'\n")),(0,r.kt)("h3",{id:"\u5728sidebar\u91cc\u9762\u6dfb\u52a0\u5f39\u6846"},"\u5728",(0,r.kt)("inlineCode",{parentName:"h3"},"Sidebar"),"\u91cc\u9762\u6dfb\u52a0\u5f39\u6846"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="apps/client/src/pages/contact/sidebar.tsx"',title:'"apps/client/src/pages/contact/sidebar.tsx"'},'// ...\nimport { GroupModal, JoinGroupModal } from \'@/components/modals\'\n\n// ...\n\nexport const Sidebar = () => {\n  const { data: group, run: getGroupList } = useApi<GroupListVo>({\n    func: useCallback(() => groupApi.getUserGroupList(), [])\n  })\n\n  const [openDropdown, setOpenDropdown] = useState(false)\n\n  const [openGroupModal, setOpenGroupModal] = useState(false)\n  const [openJoinGroupModal, setOpenJoinGroupModal] = useState(false)\n\n  return (\n    <div className="w-[240px] flex flex-col bg-content2">\n      <Dropdown\n        className="w-[230px]"\n        placement="bottom-start"\n        onOpenChange={open => {\n          setOpenDropdown(open)\n        }}\n      >\n        {/*  */}\n        <DropdownMenu aria-label="Group Actions" variant="flat">\n          <DropdownItem\n            key="user-info"\n            startContent={<PlusCircle className="w-5 h-5" />}\n            onClick={() => {\n              setOpenGroupModal(true)\n            }}\n          >\n            create a group chat\n          </DropdownItem>\n          <DropdownItem\n            key="change-password"\n            startContent={<UserPlus className="w-5 h-5" />}\n            onClick={() => {\n              setOpenJoinGroupModal(true)\n            }}\n          >\n            join a group chat\n          </DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n\n      {/*  */}\n\n      <GroupModal\n        open={openGroupModal}\n        close={() => setOpenGroupModal(false)}\n        confirmSuccess={getGroupList}\n      />\n\n      <JoinGroupModal\n        open={openJoinGroupModal}\n        close={() => setOpenJoinGroupModal(false)}\n        confirmSuccess={getGroupList}\n      />\n    </div>\n  )\n}\n')),(0,r.kt)("p",null,"\u6d4b\u8bd5\u4e00\u4e0b\u3002"),(0,r.kt)("p",null,(0,r.kt)("img",{src:t(1700).Z,width:"1920",height:"1080"})),(0,r.kt)("h2",{id:"\u7fa4\u8be6\u60c5\u9875\u9762"},"\u7fa4\u8be6\u60c5\u9875\u9762"),(0,r.kt)("h3",{id:"\u4e8c\u7ea7\u8def\u7531\u914d\u7f6e"},"\u4e8c\u7ea7\u8def\u7531\u914d\u7f6e"),(0,r.kt)("p",null,"\u7fa4\u8be6\u60c5\u9875\u9762\u6211\u4eec\u5c06\u5176\u4f5c\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"contact"),"\u7684\u4e8c\u7ea7\u8def\u7531\u53bb\u663e\u793a\u3002"),(0,r.kt)("p",null,"\u5148\u7b80\u5355\u6dfb\u52a0\u4e00\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"ContactDetail"),"\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="app/client/src/pages/contact/contact-detail.tsx"',title:'"app/client/src/pages/contact/contact-detail.tsx"'},'export const ContactDetail = () => {\n  return (\n    <div className="h-full fc overflow-y-auto no-scrollbar bg-content3">\n      ContactDetail\n    </div>\n  )\n}\n')),(0,r.kt)("p",null,"\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"ContactPage"),"\u91cc\u52a0\u4e0a",(0,r.kt)("inlineCode",{parentName:"p"},"Outlet"),"\uff0c\u540c\u65f6\u5bfc\u51fa",(0,r.kt)("inlineCode",{parentName:"p"},"ContactDetail"),"\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="apps/client/src/pages/contact/index.tsx"',title:'"apps/client/src/pages/contact/index.tsx"'},"import { Outlet } from 'react-router-dom'\nimport { Sidebar } from './sidebar'\nexport { ContactDetail } from './contact-detail'\n\nexport const ContactPage = () => {\n  return (\n    <div className=\"h-full flex flex-row\">\n      <Sidebar />\n\n      <main className=\"flex-1\">\n        <Outlet />\n      </main>\n    </div>\n  )\n}\n")),(0,r.kt)("p",null,"\u63a5\u4e0b\u6765\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"router"),"\u6587\u4ef6\u5939\u6dfb\u52a0\u4e00\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"DefaultWrap"),"\u7ec4\u4ef6\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="apps/client/src/router/default-wrap.tsx"',title:'"apps/client/src/router/default-wrap.tsx"'},"import React from 'react'\n\nexport const DefaultWrap = ({ children }: { children?: React.ReactNode }) => {\n  return (\n    <div className=\"h-full fc bg-content3 dark:bg-content3\">{children}</div>\n  )\n}\n")),(0,r.kt)("p",null,"\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"routes.tsx"),"\u91cc\u6dfb\u52a0\u4e00\u4e0b\u914d\u7f6e\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="apps/client/src/router/routes.tsx"',title:'"apps/client/src/router/routes.tsx"'},"// ...\nimport { Users } from 'lucide-react'\nimport { DefaultWrap } from './default-wrap'\nimport { ContactDetail, ContactPage } from '@/pages/contact'\n\nexport const routes = [\n  {\n    path: '/',\n    element: <AppLayout />,\n    children: [\n      // ...\n      {\n        path: 'contact',\n        element: <ContactPage />,\n        children: [\n          {\n            path: 'group/:groupId',\n            element: <ContactDetail />\n          }\n        ]\n      }\n    ]\n  }\n  // ...\n]\n")),(0,r.kt)("p",null,"\u4fee\u6539\u4e00\u4e0b",(0,r.kt)("inlineCode",{parentName:"p"},"sidebar.tsx"),"\u6587\u4ef6\uff0c\u5b9e\u73b0\u70b9\u51fb\u7fa4\u65f6\u8df3\u8f6c\u94fe\u63a5\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="apps/client/src/pages/contact/sidebar.tsx"',title:'"apps/client/src/pages/contact/sidebar.tsx"'},"// ...\nimport {\n  // ...\n  useParams\n} from 'react-router-dom'\n\nconst GroupList: FC<GroupListProps> = ({ list }) => {\n  const navigate = useNavigate()\n\n  const { groupId } = useParams()\n  const isActived = (currentId: number) => {\n    return currentId === Number(groupId)\n  }\n\n  return (\n    <div>\n      {list.map((el, index) => (\n        <div\n          className={cn(\n            'flex items-center p-2 w-full cursor-pointer',\n            isActived(el.id) && 'bg-content3 dark:bg-content3'\n          )}\n          key={index}\n          onClick={() => {\n            navigate(`group/${el.id}`)\n          }}\n        >\n          <Avatar className=\"mr-2 flex-shrink-0\" src={el.cover?.url} />\n          <p className=\"text-ellipsis overflow-hidden break-all whitespace-nowrap text-base\">\n            {el.name}\n          </p>\n        </div>\n      ))}\n    </div>\n  )\n}\n// ...\n")),(0,r.kt)("h3",{id:"contactdetail\u5b8c\u5584"},(0,r.kt)("inlineCode",{parentName:"h3"},"ContactDetail"),"\u5b8c\u5584"),(0,r.kt)("p",null,"\u6700\u540e\u5b8c\u5584\u4e00\u4e0b",(0,r.kt)("inlineCode",{parentName:"p"},"ContactDetail"),"\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="apps/client/src/pages/contact/contact-detail.tsx"',title:'"apps/client/src/pages/contact/contact-detail.tsx"'},'import { useCallback } from \'react\'\nimport { useParams } from \'react-router-dom\'\nimport {\n  Avatar,\n  AvatarGroup,\n  Button,\n  CircularProgress,\n  Divider,\n  Snippet,\n  Tooltip\n} from \'@nextui-org/react\'\nimport { MessageSquare } from \'lucide-react\'\nimport { groupApi } from \'@/api\'\nimport { useApi } from \'@/api/use-api\'\nimport { GroupVo } from \'@ying-chat/shared\'\n\nexport const ContactDetail = () => {\n  const { groupId } = useParams()\n  const { loading, data } = useApi<GroupVo>({\n    func: useCallback(() => groupApi.getGroupInfo(groupId!), [groupId])\n  })\n\n  const Detail = () => {\n    if (!data) {\n      return null\n    }\n\n    return (\n      <div className="w-[50%] h-[50%]">\n        <div className="flex items-center">\n          <Avatar src={data.cover?.url} className="w-24 h-24" />\n          <p className="text-ellipsis overflow-hidden break-all whitespace-nowrap text-2xl ml-4 flex-1">\n            {data.name}\n          </p>\n          <Button color="primary" isIconOnly className="rounded-full w-16 h-16">\n            <MessageSquare size={30} />\n          </Button>\n        </div>\n\n        <Divider className="my-4" />\n\n        {data.inviteCode && (\n          <div className="mb-2 flex justify-between items-center">\n            <p className="text-lg mb-1">\u9080\u8bf7\u7801</p>\n            <Snippet symbol="" className="bg-content4 dark:bg-content4">\n              {data.inviteCode}\n            </Snippet>\n          </div>\n        )}\n\n        <div className="mb-2">\n          <p className="text-lg mb-1">\u7fa4\u4ecb\u7ecd</p>\n          <p className="break-all">{data.description}</p>\n        </div>\n\n        <div className="mb-2">\n          <p className="text-lg mb-1">\u7fa4\u6210\u5458({data.users?.length})</p>\n          <AvatarGroup className="justify-start" size="lg">\n            {data.users?.map(user => (\n              <Tooltip content={user.nickname} key={user.id}>\n                <Avatar src={user.avatar?.url} isBordered />\n              </Tooltip>\n            ))}\n          </AvatarGroup>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className="h-full fc overflow-y-auto no-scrollbar bg-content3">\n      {loading ? (\n        <CircularProgress size="lg" aria-label="Loading..." />\n      ) : (\n        <Detail />\n      )}\n    </div>\n  )\n}\n')),(0,r.kt)("p",null,"\u518d\u521b\u5efa\u4e00\u4e2a\u7fa4\u7ec4\u6d4b\u8bd5\u4e00\u4e0b\u3002"),(0,r.kt)("p",null,(0,r.kt)("img",{src:t(3270).Z,width:"1920",height:"1080"})),(0,r.kt)("p",null,"\u6700\u540e\u521b\u5efa\u53e6\u4e00\u4e2a\u8d26\u53f7\uff0c\u7136\u540e\u6d4b\u8bd5\u4e00\u4e0b\u52a0\u5165\u7fa4\u7ec4\u3002"),(0,r.kt)("p",null,(0,r.kt)("img",{src:t(4085).Z,width:"1920",height:"1080"})),(0,r.kt)("p",null,"\u672c\u8282\u5230\u6b64\u7ed3\u675f\u3002"))}u.isMDXComponent=!0},1700:(n,e,t)=>{t.d(e,{Z:()=>o});const o=t.p+"assets/images/01-63fd7189e106deb2ae43639b8cdc9dce.gif"},3270:(n,e,t)=>{t.d(e,{Z:()=>o});const o=t.p+"assets/images/02-59e94d02556fc0b1dc54b06e7926dddb.gif"},4085:(n,e,t)=>{t.d(e,{Z:()=>o});const o=t.p+"assets/images/03-75dd864d97a21d12789eaac2ba2b8b41.gif"}}]);