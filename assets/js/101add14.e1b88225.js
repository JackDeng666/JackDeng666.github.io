"use strict";(self.webpackChunkying_blog=self.webpackChunkying_blog||[]).push([[9757],{9847:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>t,metadata:()=>i,toc:()=>l});var s=n(3274),o=n(9128);const t={id:"docking-message-api",sidebar_label:"\u5ba2\u6237\u7aef\u5bf9\u63a5\u7fa4\u804aapi",title:"\u5ba2\u6237\u7aef\u5bf9\u63a5\u7fa4\u804aapi"},a=void 0,i={id:"ying-chat/docking-message-api",title:"\u5ba2\u6237\u7aef\u5bf9\u63a5\u7fa4\u804aapi",description:"\u51c6\u5907",source:"@site/docs/ying-chat/17-docking-message-api.md",sourceDirName:"ying-chat",slug:"/ying-chat/docking-message-api",permalink:"/docs/ying-chat/docking-message-api",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:17,frontMatter:{id:"docking-message-api",sidebar_label:"\u5ba2\u6237\u7aef\u5bf9\u63a5\u7fa4\u804aapi",title:"\u5ba2\u6237\u7aef\u5bf9\u63a5\u7fa4\u804aapi"},sidebar:"yingChat",previous:{title:"\u7fa4\u804a api",permalink:"/docs/ying-chat/message-api"},next:{title:"\u9884\u89c8\u7ec4\u4ef6\u548c\u8def\u7531\u7f13\u5b58",permalink:"/docs/ying-chat/preview-component-and-router-cache"}},c={},l=[{value:"\u51c6\u5907",id:"\u51c6\u5907",level:2},{value:"vo \u6587\u4ef6",id:"vo-\u6587\u4ef6",level:3},{value:"api \u6587\u4ef6",id:"api-\u6587\u4ef6",level:3},{value:"\u4f1a\u8bdd\u5217\u8868\u5bf9\u63a5",id:"\u4f1a\u8bdd\u5217\u8868\u5bf9\u63a5",level:2},{value:"ConversationProvider",id:"conversationprovider",level:3},{value:"\u8def\u7531\u5b8c\u5584",id:"\u8def\u7531\u5b8c\u5584",level:3},{value:"\u5bf9\u8bdd\u9875\u9762\u5bf9\u63a5\u3002",id:"\u5bf9\u8bdd\u9875\u9762\u5bf9\u63a5",level:2},{value:"\u53d1\u9001\u6d88\u606f\u7ec4\u4ef6\u7f16\u5199",id:"\u53d1\u9001\u6d88\u606f\u7ec4\u4ef6\u7f16\u5199",level:3},{value:"\u901a\u7528\u6eda\u52a8\u7ec4\u4ef6\u7684\u7f16\u5199",id:"\u901a\u7528\u6eda\u52a8\u7ec4\u4ef6\u7684\u7f16\u5199",level:3},{value:"\u7fa4\u804a\u9875\u9762\u5b8c\u5584\u5bf9\u63a5",id:"\u7fa4\u804a\u9875\u9762\u5b8c\u5584\u5bf9\u63a5",level:3}];function d(e){const r={code:"code",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h2,{id:"\u51c6\u5907",children:"\u51c6\u5907"}),"\n",(0,s.jsx)(r.h3,{id:"vo-\u6587\u4ef6",children:"vo \u6587\u4ef6"}),"\n",(0,s.jsxs)(r.p,{children:["\u6dfb\u52a0\u4e00\u4e2a",(0,s.jsx)(r.code,{children:"conversation.vo.ts"}),"\u6587\u4ef6\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="packages/shared/src/vo/conversation.vo.ts"',children:"import { GroupMessageType } from '../enum'\r\nimport { FileVo } from './file.vo'\r\nimport { GroupVo } from './group.vo'\r\nimport { UserVo } from './user.vo'\r\n\r\nexport type ConversationVo = {\r\n  id: number\r\n  userId: number\r\n  groupId: number\r\n  unreadNum: number\r\n  group: GroupVo\r\n}\r\n\r\nexport type GroupMessageVo = {\r\n  id: number\r\n  type: GroupMessageType\r\n  content: string\r\n  groupId: number\r\n  coverId?: number\r\n  cover?: FileVo\r\n  fileId?: number\r\n  file?: FileVo\r\n  userId: number\r\n  user: UserVo\r\n  createAt: string\r\n  updateAt: string\r\n}\n"})}),"\n",(0,s.jsx)(r.p,{children:"\u5bfc\u51fa\u4e00\u4e0b\u3002"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="packages/shared/src/vo/index.ts"',children:"// ...\r\nexport * from './conversation.vo'\n"})}),"\n",(0,s.jsx)(r.h3,{id:"api-\u6587\u4ef6",children:"api \u6587\u4ef6"}),"\n",(0,s.jsxs)(r.p,{children:["\u6dfb\u52a0\u4e00\u4e2a",(0,s.jsx)(r.code,{children:"conversation.ts"}),"\u6587\u4ef6\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/client/src/api/conversation.ts"',children:"import {\r\n  ConversationVo,\r\n  GroupMessageListDto,\r\n  GroupMessageVo,\r\n  SendMsgDto\r\n} from '@ying-chat/shared'\r\nimport { request } from './request'\r\n\r\nexport function getConversationList(): Promise<ConversationVo[]> {\r\n  return request.get('/conversation/list')\r\n}\r\n\r\nexport function getGroupConversationMessageList(\r\n  query: GroupMessageListDto\r\n): Promise<GroupMessageVo[]> {\r\n  return request.get('/conversation/group/message/list', { params: query })\r\n}\r\n\r\nexport function sendTextGroupMessage(dto: SendMsgDto): Promise<GroupMessageVo> {\r\n  return request.post('/conversation/group/message/text', dto)\r\n}\r\n\r\nexport function sendImageGroupMessage(\r\n  file: File,\r\n  groupId: string\r\n): Promise<GroupMessageVo> {\r\n  const form = new FormData()\r\n  form.append('file', file)\r\n  form.append('groupId', groupId)\r\n  return request.post('/conversation/group/message/image', form)\r\n}\r\n\r\nexport function sendVideoGroupMessage(\r\n  file: File,\r\n  coverFile: File,\r\n  groupId: string\r\n): Promise<GroupMessageVo> {\r\n  const form = new FormData()\r\n  form.append('file', file)\r\n  form.append('coverFile', coverFile)\r\n  form.append('groupId', groupId)\r\n  return request.post('/conversation/group/message/video', form)\r\n}\n"})}),"\n",(0,s.jsx)(r.p,{children:"\u5bfc\u51fa\u3002"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/client/src/api/index.ts"',children:"// ...\r\nimport * as conversationApi from './conversation'\r\n\r\nexport {\r\n  // ...\r\n  conversationApi\r\n}\n"})}),"\n",(0,s.jsx)(r.h2,{id:"\u4f1a\u8bdd\u5217\u8868\u5bf9\u63a5",children:"\u4f1a\u8bdd\u5217\u8868\u5bf9\u63a5"}),"\n",(0,s.jsx)(r.h3,{id:"conversationprovider",children:"ConversationProvider"}),"\n",(0,s.jsxs)(r.p,{children:["\u63a5\u4e0b\u6765\u5148\u5b9e\u73b0\u4e00\u4e2a",(0,s.jsx)(r.code,{children:"ConversationProvider"}),"\uff0c\u5199\u8fd9\u4e2a Provider \u662f\u4e3a\u4e86\u65b9\u4fbf\u5728\u540e\u9762\u5373\u65f6\u901a\u8baf\u65f6\uff0c\u7edf\u4e00\u66f4\u65b0\u5de6\u4fa7\u4f1a\u8bdd\u5217\u8868\u3002"]}),"\n",(0,s.jsxs)(r.p,{children:["\u5728",(0,s.jsx)(r.code,{children:"conversation"}),"\u6587\u4ef6\u5939\u4e0b\uff0c\u6dfb\u52a0\u4e00\u4e2a",(0,s.jsx)(r.code,{children:"use-conversation.ts"}),"\u6587\u4ef6\uff0c\u5728\u91cc\u9762\u5199\u597d\u5bf9\u8bdd\u5217\u8868\u76f8\u5173\u7684\u903b\u8f91\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/client/src/pages/conversation/use-conversation.ts"',children:"import { createContext, useContext, useMemo } from 'react'\r\nimport { useCallback } from 'react'\r\nimport { useLocation, useParams } from 'react-router-dom'\r\nimport { conversationApi } from '@/api'\r\nimport { useApi } from '@/api/use-api'\r\nimport { ConversationVo } from '@ying-chat/shared'\r\n\r\nexport const useConversationLogic = () => {\r\n  const { pathname } = useLocation()\r\n  const { groupId } = useParams()\r\n\r\n  const { data } = useApi<ConversationVo[]>({\r\n    func: useCallback(() => conversationApi.getConversationList(), [])\r\n  })\r\n\r\n  const currentConversation = useMemo(() => {\r\n    if (pathname.startsWith('/conversation/group/')) {\r\n      const conversation = data?.find(el => el.groupId === Number(groupId))\r\n      return conversation\r\n    }\r\n\r\n    return undefined\r\n  }, [data, pathname, groupId])\r\n\r\n  const isActived = useCallback(\r\n    (currentId: number) => {\r\n      return currentId === currentConversation?.id\r\n    },\r\n    [currentConversation]\r\n  )\r\n\r\n  return {\r\n    coversations: data,\r\n    isActived\r\n  }\r\n}\r\n\r\ntype TConversationContext = {\r\n  coversations: ConversationVo[] | undefined\r\n  isActived: (id: number) => boolean\r\n}\r\n\r\nexport const ConversationContext = createContext<TConversationContext>({\r\n  coversations: undefined,\r\n  isActived: () => false\r\n})\r\n\r\nexport const useConversation = () => {\r\n  return useContext(ConversationContext)\r\n}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u65b0\u5efa",(0,s.jsx)(r.code,{children:"conversation-provider.tsx"}),"\u4f7f\u7528",(0,s.jsx)(r.code,{children:"use-conversation"}),"\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",metastring:'title="apps\\client\\src\\pages\\conversation\\conversation-provider.tsx"',children:"import React from 'react'\r\nimport { ConversationContext, useConversationLogic } from './use-conversation'\r\n\r\ntype ConversationProviderProps = {\r\n  children: React.ReactNode\r\n}\r\n\r\nexport const ConversationProvider: React.FC<ConversationProviderProps> = ({\r\n  children\r\n}) => {\r\n  const { coversations, isActived } = useConversationLogic()\r\n\r\n  return (\r\n    <ConversationContext.Provider\r\n      value={{\r\n        coversations,\r\n        isActived\r\n      }}\r\n    >\r\n      {children}\r\n    </ConversationContext.Provider>\r\n  )\r\n}\n"})}),"\n",(0,s.jsx)(r.h3,{id:"\u8def\u7531\u5b8c\u5584",children:"\u8def\u7531\u5b8c\u5584"}),"\n",(0,s.jsx)(r.p,{children:"\u6309\u7167\u4e0a\u6b21\u7fa4\u7ec4\u90a3\u91cc\u90a3\u6837\u628a\u8def\u7531\u642d\u5efa\u597d\u3002"}),"\n",(0,s.jsxs)(r.p,{children:["\u5728",(0,s.jsx)(r.code,{children:"conversation"}),"\u4e0b\u9762\u6dfb\u52a0\u4e00\u4e2a",(0,s.jsx)(r.code,{children:"sidebar"}),"\u7ec4\u4ef6\u4f5c\u4e3a\u5c55\u793a\u7528\u6237\u7fa4\u4f1a\u8bdd\u5217\u8868\u7684\u5c55\u793a\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",metastring:'title="apps/client/src/pages/conversation/sidebar.tsx"',children:"import { useNavigate, useParams } from 'react-router-dom'\r\nimport { Avatar, Badge, cn } from '@nextui-org/react'\r\nimport {\r\n  ConversationVo,\r\n  GroupMessageType,\r\n  GroupMessageVo\r\n} from '@ying-chat/shared'\r\nimport { useConversation } from './use-conversation'\r\n\r\nconst renderMessage = (message?: GroupMessageVo) => {\r\n  if (!message) return ''\r\n  let recentMsg = message.user.nickname + ': '\r\n\r\n  switch (message.type) {\r\n    case GroupMessageType.Text:\r\n      recentMsg = recentMsg + message.content\r\n      break\r\n    case GroupMessageType.Image:\r\n      recentMsg = recentMsg + '[\u56fe\u7247]'\r\n      break\r\n    case GroupMessageType.Video:\r\n      recentMsg = recentMsg + '[\u89c6\u9891]'\r\n      break\r\n  }\r\n\r\n  return recentMsg\r\n}\r\n\r\nexport const Sidebar = () => {\r\n  const navigate = useNavigate()\r\n  const { groupId } = useParams()\r\n\r\n  const { coversations, isActived } = useConversation()\r\n\r\n  const handleClick = (conversation: ConversationVo) => {\r\n    if (conversation.groupId !== Number(groupId)) {\r\n      const routeKey = `group/${conversation.groupId}`\r\n      navigate(routeKey)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-60 py-4 overflow-y-auto no-scrollbar flex flex-col bg-content2\">\r\n      {coversations?.map(el => (\r\n        <Badge\r\n          content={el.unreadNum}\r\n          color=\"danger\"\r\n          shape=\"rectangle\"\r\n          isInvisible={!el.unreadNum}\r\n          key={el.id}\r\n        >\r\n          <div\r\n            className={cn(\r\n              'flex p-2 w-full cursor-pointer',\r\n              isActived(el.id) && 'bg-content3'\r\n            )}\r\n            onClick={() => handleClick(el)}\r\n          >\r\n            <Avatar\r\n              radius=\"sm\"\r\n              className=\"mr-2 flex-shrink-0\"\r\n              src={el.group.cover.url}\r\n            />\r\n\r\n            <div className=\"flex-1 w-0\">\r\n              <div className=\"flex justify-between\">\r\n                <p className=\"text-sm\">{el.group.name}</p>\r\n              </div>\r\n\r\n              <p className=\"text-sm text-foreground-500 text-ellipsis overflow-hidden break-all whitespace-nowrap\">\r\n                {renderMessage(el.recentMsg)}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </Badge>\r\n      ))}\r\n    </div>\r\n  )\r\n}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u5148\u7b80\u5355\u6dfb\u52a0\u4e00\u4e2a",(0,s.jsx)(r.code,{children:"ConversationDetail"})]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/client/src/pages/conversation/conversation-detail.tsx"',children:"import { useParams } from 'react-router-dom'\r\n\r\nexport const ConversationDetail = () => {\r\n  const { groupId } = useParams()\r\n  return (\r\n    <div className=\"h-full fc overflow-y-auto no-scrollbar bg-content3\">\r\n      ConversationDetail-{groupId}\r\n    </div>\r\n  )\r\n}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u4fee\u6539",(0,s.jsx)(r.code,{children:"ConversationPage"}),"\uff0c\u5728\u91cc\u9762\u52a0\u4e0a",(0,s.jsx)(r.code,{children:"ConversationProvider"}),"\u3001",(0,s.jsx)(r.code,{children:"Outlet"}),"\u3001",(0,s.jsx)(r.code,{children:"Sidebar"}),"\uff0c\u540c\u65f6\u5bfc\u51fa",(0,s.jsx)(r.code,{children:"ConversationDetail"}),"\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",metastring:'title="apps/client/src/pages/contact/index.tsx"',children:"import { Outlet } from 'react-router-dom'\r\nimport { Sidebar } from './sidebar'\r\nimport { ConversationProvider } from './conversation-provider'\r\nexport { ConversationDetail } from './conversation-detail'\r\n\r\nexport const ConversationPage = () => {\r\n  return (\r\n    <ConversationProvider>\r\n      <div className=\"h-full flex flex-row\">\r\n        <Sidebar />\r\n\r\n        <main className=\"flex-1\">\r\n          <Outlet />\r\n        </main>\r\n      </div>\r\n    </ConversationProvider>\r\n  )\r\n}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u5728",(0,s.jsx)(r.code,{children:"routes.tsx"}),"\u91cc\u6dfb\u52a0\u4e00\u4e0b\u914d\u7f6e\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",metastring:'title="apps/client/src/router/routes.tsx"',children:"// ...\r\nimport { MessageSquare, Users } from 'lucide-react'\r\nimport { ConversationDetail, ConversationPage } from '@/pages/conversation'\r\n\r\nexport const routes = [\r\n  {\r\n    path: '/',\r\n    element: <AppLayout />,\r\n    children: [\r\n      // ...\r\n      {\r\n        path: 'conversation',\r\n        element: <ConversationPage />,\r\n        children: [\r\n          {\r\n            index: true,\r\n            element: (\r\n              <DefaultWrap>\r\n                <Users size={60} />\r\n              </DefaultWrap>\r\n            )\r\n          },\r\n          {\r\n            path: 'group/:groupId',\r\n            element: <ConversationDetail />\r\n          }\r\n        ]\r\n      }\r\n      // ...\r\n    ]\r\n  }\r\n  // ...\r\n]\n"})}),"\n",(0,s.jsx)(r.p,{children:"\u5148\u6765\u6d4b\u8bd5\u4e00\u4e0b\u3002"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{src:n(607).A+"",width:"1920",height:"1080"})}),"\n",(0,s.jsx)(r.h2,{id:"\u5bf9\u8bdd\u9875\u9762\u5bf9\u63a5",children:"\u5bf9\u8bdd\u9875\u9762\u5bf9\u63a5\u3002"}),"\n",(0,s.jsx)(r.h3,{id:"\u53d1\u9001\u6d88\u606f\u7ec4\u4ef6\u7f16\u5199",children:"\u53d1\u9001\u6d88\u606f\u7ec4\u4ef6\u7f16\u5199"}),"\n",(0,s.jsxs)(r.p,{children:["\u5728",(0,s.jsx)(r.code,{children:"components"}),"\u6587\u4ef6\u5939\u6dfb\u52a0\u4e00\u4e2a",(0,s.jsx)(r.code,{children:"chat"}),"\u6587\u4ef6\u5939\uff0c\u5728\u91cc\u9762\u5b9e\u73b0\u6240\u6709\u9700\u8981\u7528\u5230\u7684\u804a\u5929\u7ec4\u4ef6\u3002"]}),"\n",(0,s.jsxs)(r.p,{children:["\u5b9e\u73b0",(0,s.jsx)(r.code,{children:"ChatSelectFile"}),"\u7ec4\u4ef6\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",metastring:'title="apps/client/src/components/chat/chat-select-file.tsx"',children:'import React from \'react\'\r\nimport { PlusCircle } from \'lucide-react\'\r\nimport { SelectFileType, selectFile } from \'@/components/upload\'\r\nimport {\r\n  Dropdown,\r\n  DropdownTrigger,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from \'@nextui-org/react\'\r\n\r\ntype ChatSelectFileProps = {\r\n  onFileSelect: (file: File, type: SelectFileType) => void\r\n}\r\n\r\nexport const ChatSelectFile: React.FC<ChatSelectFileProps> = ({\r\n  onFileSelect\r\n}) => {\r\n  return (\r\n    <Dropdown backdrop="opaque">\r\n      <DropdownTrigger>\r\n        <PlusCircle className="cursor-pointer" />\r\n      </DropdownTrigger>\r\n      <DropdownMenu aria-label="Message Actions">\r\n        <DropdownItem\r\n          key="Image"\r\n          onClick={() => {\r\n            selectFile(SelectFileType.Image).then(file => {\r\n              onFileSelect(file, SelectFileType.Image)\r\n            })\r\n          }}\r\n        >\r\n          Image\r\n        </DropdownItem>\r\n        <DropdownItem\r\n          key="Video"\r\n          onClick={() => {\r\n            selectFile(SelectFileType.Video).then(file => {\r\n              onFileSelect(file, SelectFileType.Video)\r\n            })\r\n          }}\r\n        >\r\n          Video\r\n        </DropdownItem>\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  )\r\n}\n'})}),"\n",(0,s.jsx)(r.p,{children:"\u5b89\u88c5\u4e00\u4e0b\u8868\u60c5\u5305\u7ec4\u4ef6\u3002"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-shell",metastring:'title="apps/client"',children:"pnpm i @emoji-mart/react @emoji-mart/data\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u5b9e\u73b0",(0,s.jsx)(r.code,{children:"ChatEmoji"}),"\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",metastring:'title="apps/client/src/components/chat/chat-emoji.tsx"',children:"import React from 'react'\r\nimport { Popover, PopoverTrigger, PopoverContent } from '@nextui-org/react'\r\nimport Picker from '@emoji-mart/react'\r\nimport data from '@emoji-mart/data'\r\nimport { Smile } from 'lucide-react'\r\nimport { useTheme } from '../theme-provider'\r\n\r\ntype ChatEmojiProps = {\r\n  onEmojiSelect?: (emoji: string) => void\r\n}\r\n\r\nexport const ChatEmoji: React.FC<ChatEmojiProps> = ({ onEmojiSelect }) => {\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <Popover placement=\"top\" backdrop=\"opaque\">\r\n      <PopoverTrigger>\r\n        <Smile className=\"cursor-pointer\" />\r\n      </PopoverTrigger>\r\n      <PopoverContent className=\"bg-transparent shadow-none\">\r\n        <Picker\r\n          theme={theme}\r\n          data={data}\r\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n          onEmojiSelect={(emoji: any) => {\r\n            onEmojiSelect && onEmojiSelect(emoji.native)\r\n          }}\r\n        />\r\n      </PopoverContent>\r\n    </Popover>\r\n  )\r\n}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u5b9e\u73b0",(0,s.jsx)(r.code,{children:"ChatInput"}),"\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",metastring:'title="apps/client/src/components/chat/chat-input.tsx"',children:"import React, { useEffect, useRef, useState } from 'react'\r\nimport { Textarea } from '@nextui-org/react'\r\nimport { Loader2, SendHorizontal } from 'lucide-react'\r\nimport { toast } from 'sonner'\r\nimport { GroupMessageType } from '@ying-chat/shared'\r\nimport { SelectFileType } from '@/components/upload'\r\nimport { ChatEmoji } from './chat-emoji'\r\nimport { ChatSelectFile } from './chat-select-file'\r\n\r\ntype ChatInputProps = {\r\n  onSend: (type: GroupMessageType, content: string | File) => Promise<void>\r\n}\r\n\r\nexport const ChatInput: React.FC<ChatInputProps> = ({ onSend }) => {\r\n  const [inputValue, setInputValue] = useState('')\r\n  const [sendLoading, setSendLoading] = useState(false)\r\n  const inputRef = useRef<HTMLTextAreaElement>(null)\r\n\r\n  const sendTextMsg = () => {\r\n    if (!inputValue) {\r\n      return toast.warning('Please enter the message content!')\r\n    }\r\n    send(GroupMessageType.Text, inputValue)\r\n  }\r\n\r\n  const send = async (type: GroupMessageType, content: string | File) => {\r\n    try {\r\n      setSendLoading(true)\r\n\r\n      await onSend(type, content)\r\n\r\n      setInputValue('')\r\n      toast.success('Message sent successfully!')\r\n    } catch {\r\n    } finally {\r\n      setSendLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    inputRef.current?.focus()\r\n  }, [sendLoading, inputValue])\r\n\r\n  return (\r\n    <div className=\"flex flex-shrink-0 items-end rounded-md m-4 p-2 bg-content2\">\r\n      <Textarea\r\n        ref={inputRef}\r\n        classNames={{\r\n          inputWrapper: 'shadow-none'\r\n        }}\r\n        placeholder=\"input message here\"\r\n        maxRows={3}\r\n        isDisabled={sendLoading}\r\n        value={inputValue}\r\n        onChange={e => {\r\n          setInputValue(e.target.value)\r\n        }}\r\n        onKeyDown={e => {\r\n          if (!e.shiftKey && e.key == 'Enter') {\r\n            e.preventDefault()\r\n            sendTextMsg()\r\n          }\r\n        }}\r\n      />\r\n      <div className=\"flex gap-1 ml-2\">\r\n        <ChatSelectFile\r\n          onFileSelect={(file, type) => {\r\n            if (type === SelectFileType.Image) {\r\n              send(GroupMessageType.Image, file)\r\n            } else if (type === SelectFileType.Video) {\r\n              send(GroupMessageType.Video, file)\r\n            }\r\n          }}\r\n        />\r\n        <ChatEmoji\r\n          onEmojiSelect={emoji => {\r\n            setInputValue(prevValue => prevValue + emoji)\r\n          }}\r\n        />\r\n        {sendLoading ? (\r\n          <Loader2 className=\"animate-spin\" />\r\n        ) : (\r\n          <SendHorizontal className=\"cursor-pointer\" onClick={sendTextMsg} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\n"})}),"\n",(0,s.jsx)(r.h3,{id:"\u901a\u7528\u6eda\u52a8\u7ec4\u4ef6\u7684\u7f16\u5199",children:"\u901a\u7528\u6eda\u52a8\u7ec4\u4ef6\u7684\u7f16\u5199"}),"\n",(0,s.jsxs)(r.p,{children:["\u5728\u5b9e\u73b0\u4e4b\u524d\uff0c\u5148\u5728",(0,s.jsx)(r.code,{children:"src"}),"\u6dfb\u52a0\u4e00\u4e2a",(0,s.jsx)(r.code,{children:"utils.ts"}),"\u6587\u4ef6\uff0c\u5728\u91cc\u9762\u5148\u5b9e\u73b0\u4e00\u4e2a",(0,s.jsx)(r.code,{children:"debounce"}),"\u51fd\u6570\uff0c\u540e\u9762\u8981\u7528\u5230\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/client/src/utils.ts"',children:"export function debounce<T>(callback: (params: T) => void, delay = 200) {\r\n  let timer = 0\r\n  return function (params: T) {\r\n    if (timer) clearTimeout(timer)\r\n    timer = setTimeout(() => {\r\n      callback(params)\r\n    }, delay)\r\n  }\r\n}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u5728",(0,s.jsx)(r.code,{children:"components"}),"\u6587\u4ef6\u5939\u6dfb\u52a0\u4e00\u4e2a",(0,s.jsx)(r.code,{children:"scroll-box"}),"\u6587\u4ef6\u5939\uff0c\u7136\u540e\u5148\u6dfb\u52a0\u4e00\u4e2a",(0,s.jsx)(r.code,{children:"scroll-provider.ts"}),"\u6587\u4ef6\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",metastring:'title="apps/client/src/components/scroll-box/scroll-provider.ts"',children:"import {\r\n  createContext,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState\r\n} from 'react'\r\n\r\nexport type IntersectingCallback = () => void\r\n\r\nexport type UnObserverCallback = () => void\r\n\r\ntype TScrollBoxContext = {\r\n  observer:\r\n    | ((el: Element, func: IntersectingCallback) => UnObserverCallback)\r\n    | undefined\r\n}\r\n\r\nexport const useIntersectionObserver = () => {\r\n  const [intersectionObserver, setIntersectionObserver] =\r\n    useState<IntersectionObserver>()\r\n\r\n  const mapRef = useRef(new Map<Element, IntersectingCallback>())\r\n\r\n  useEffect(() => {\r\n    const intersectionObserver = new IntersectionObserver(\r\n      entries => {\r\n        for (const entry of entries) {\r\n          if (entry.isIntersecting) {\r\n            const element = entry.target\r\n            const func = mapRef.current.get(element)\r\n            func && func()\r\n          }\r\n        }\r\n      },\r\n      {\r\n        threshold: 0.6\r\n      }\r\n    )\r\n    setIntersectionObserver(intersectionObserver)\r\n  }, [])\r\n\r\n  const observer = useCallback(\r\n    (el: Element, func: IntersectingCallback) => {\r\n      intersectionObserver?.observe(el)\r\n      mapRef.current.set(el, func)\r\n\r\n      return () => {\r\n        intersectionObserver?.unobserve(el)\r\n        mapRef.current.delete(el)\r\n      }\r\n    },\r\n    [intersectionObserver]\r\n  )\r\n\r\n  return {\r\n    observer\r\n  }\r\n}\r\n\r\nexport const useObserver = () => {\r\n  return useContext(ScrollBoxContext)\r\n}\r\n\r\nexport const ScrollBoxContext = createContext<TScrollBoxContext>({\r\n  observer: undefined\r\n})\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u5b9e\u73b0",(0,s.jsx)(r.code,{children:"ScollBox"}),"\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",metastring:'title="apps/client/src/components/scroll-box/scroll-box.tsx"',children:"import React, {\r\n  forwardRef,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useLayoutEffect,\r\n  useRef\r\n} from 'react'\r\nimport { cn } from '@nextui-org/react'\r\nimport { debounce } from '@/utils'\r\nimport { ScrollBoxContext, useIntersectionObserver } from './scroll-provider'\r\n\r\ntype ScollBoxProps = {\r\n  children: React.ReactNode\r\n  className?: string\r\n  onTop?: () => void\r\n  onBottom?: () => void\r\n}\r\n\r\nexport type ScollBoxHandle = {\r\n  scrollToBottom: (behavior?: ScrollBehavior) => void\r\n  getDistanceFromBottom: () => number\r\n  keepBottom: (callback: () => void) => void\r\n  keepPosition: (callback: () => void) => void\r\n}\r\n\r\nexport const ScollBox = forwardRef<ScollBoxHandle, ScollBoxProps>(\r\n  ({ children, className, onTop, onBottom }, ref) => {\r\n    const scrollDivRef = useRef<HTMLDivElement>(null)\r\n    const originHeight = useRef(0)\r\n    const { observer } = useIntersectionObserver()\r\n\r\n    const scrollToBottom = (behavior: ScrollBehavior = 'instant') => {\r\n      scrollDivRef.current?.scrollTo({\r\n        top: scrollDivRef.current.scrollHeight,\r\n        behavior\r\n      })\r\n    }\r\n\r\n    const getDistanceFromBottom = () => {\r\n      const dom = scrollDivRef.current\r\n      if (!dom) return 0\r\n      return dom.scrollHeight - dom.scrollTop - dom.clientHeight\r\n    }\r\n\r\n    const keepBottom = (callback: () => void) => {\r\n      const distanceFromBottom = getDistanceFromBottom()\r\n\r\n      callback()\r\n\r\n      setTimeout(() => {\r\n        if (distanceFromBottom <= 300) {\r\n          scrollToBottom('smooth')\r\n        } else {\r\n          scrollToBottom('instant')\r\n        }\r\n      })\r\n    }\r\n\r\n    const keepPosition = async (callback: () => void) => {\r\n      const dom = scrollDivRef.current\r\n      if (!dom) return\r\n\r\n      originHeight.current = dom.scrollHeight\r\n      callback()\r\n    }\r\n\r\n    useLayoutEffect(() => {\r\n      const dom = scrollDivRef.current\r\n      if (!dom) return\r\n\r\n      if (originHeight.current) {\r\n        dom.scrollTo({\r\n          top: dom.scrollHeight - originHeight.current\r\n        })\r\n        originHeight.current = 0\r\n      }\r\n    }, [children])\r\n\r\n    useImperativeHandle(\r\n      ref,\r\n      () => ({\r\n        scrollToBottom,\r\n        getDistanceFromBottom,\r\n        keepBottom,\r\n        keepPosition\r\n      }),\r\n      []\r\n    )\r\n\r\n    useEffect(() => {\r\n      const dom = scrollDivRef.current\r\n      if (!dom) return\r\n\r\n      const scollCallback = debounce<Event>((e: Event) => {\r\n        const el = e.target as HTMLDivElement,\r\n          scrollTop = el.scrollTop,\r\n          scrollHeight = el.scrollHeight,\r\n          offsetHeight = el.offsetHeight\r\n        if (onTop && scrollTop <= 0) {\r\n          onTop()\r\n        } else if (onBottom && offsetHeight + scrollTop + 5 >= scrollHeight) {\r\n          onBottom()\r\n        }\r\n      }, 200)\r\n\r\n      dom.addEventListener('scroll', scollCallback)\r\n\r\n      return () => {\r\n        dom.removeEventListener('scroll', scollCallback)\r\n      }\r\n    }, [onTop, onBottom, observer])\r\n\r\n    return (\r\n      <ScrollBoxContext.Provider value={{ observer }}>\r\n        <div\r\n          id=\"scroll-box\"\r\n          className={cn('overflow-y-auto scroll-box', className)}\r\n          ref={scrollDivRef}\r\n          aria-label=\"scrollbox\"\r\n        >\r\n          {children}\r\n        </div>\r\n      </ScrollBoxContext.Provider>\r\n    )\r\n  }\r\n)\n"})}),"\n",(0,s.jsx)(r.p,{children:"\u5bfc\u51fa\u4e00\u4e0b\u3002"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",metastring:'title="apps/client/src/components/scroll-box/index.ts"',children:"export * from './scroll-box'\r\nexport * from './scroll-provider'\n"})}),"\n",(0,s.jsx)(r.h3,{id:"\u7fa4\u804a\u9875\u9762\u5b8c\u5584\u5bf9\u63a5",children:"\u7fa4\u804a\u9875\u9762\u5b8c\u5584\u5bf9\u63a5"}),"\n",(0,s.jsxs)(r.p,{children:["\u5b89\u88c5\u4e00\u4e0b",(0,s.jsx)(r.code,{children:"moment"})," \u7528\u6765\u683c\u5f0f\u5316\u65f6\u95f4\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-shell",metastring:'title="apps/client"',children:"pnpm i moment\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u65b0\u5efa",(0,s.jsx)(r.code,{children:"messages"}),"\u6587\u4ef6\u5939\uff0c\u6dfb\u52a0\u4e00\u4e2a",(0,s.jsx)(r.code,{children:"message-item.tsx"}),"\u6587\u4ef6\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",metastring:'title="apps/client/src/pages/conversation/messages/message-item.tsx"',children:"import { forwardRef, memo, useMemo, useRef } from 'react'\r\nimport moment from 'moment'\r\nimport { Avatar, Image, cn } from '@nextui-org/react'\r\nimport { useAuthStore } from '@/stores'\r\nimport { GroupMessageType, GroupMessageVo } from '@ying-chat/shared'\r\n\r\ntype ChatMessageItemProps = {\r\n  message: GroupMessageVo\r\n}\r\n\r\nconst MessageItem = memo(\r\n  forwardRef<HTMLDivElement, ChatMessageItemProps>(\r\n    ({ message }, messageItemRef) => {\r\n      const userInfo = useAuthStore(state => state.userInfo)\r\n\r\n      const isCurrentUser = useMemo(() => {\r\n        return message.userId === userInfo?.id\r\n      }, [userInfo, message])\r\n\r\n      return (\r\n        <div\r\n          ref={messageItemRef}\r\n          className={cn(\r\n            'flex min-w-[400px] p-4',\r\n            'hover:bg-content2',\r\n            isCurrentUser && 'flex-row-reverse'\r\n          )}\r\n        >\r\n          <Avatar\r\n            className=\"flex-shrink-0 h-14 w-14\"\r\n            src={message.user.avatar?.url}\r\n          />\r\n          <div\r\n            className={cn(\r\n              'flex flex-col items-start mx-2',\r\n              isCurrentUser && 'items-end'\r\n            )}\r\n          >\r\n            <div\r\n              className={cn('flex mb-2', isCurrentUser && 'flex-row-reverse')}\r\n            >\r\n              <p className=\"text-sm font-semibold text-foreground-700\">\r\n                {message.user.nickname}\r\n              </p>\r\n              <p className=\"text-sm mx-2 text-foreground-500\">\r\n                {moment(message.createAt).format('YYYY-MM-DD HH:mm:ss')}\r\n              </p>\r\n            </div>\r\n            {message.type === GroupMessageType.Text && (\r\n              <p className=\"whitespace-pre-wrap text-foreground\">\r\n                {message.content}\r\n              </p>\r\n            )}\r\n            {message.type === GroupMessageType.Image && (\r\n              <Image\r\n                src={message.file?.url}\r\n                className=\"w-auto h-[200px] cursor-pointer\"\r\n              />\r\n            )}\r\n\r\n            {message.type === GroupMessageType.Video && (\r\n              <Image\r\n                className=\"w-auto h-[200px] cursor-pointer\"\r\n                src={message.cover?.url}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  ),\r\n  (prevProps, nextProps) => {\r\n    return prevProps.message.id === nextProps.message.id\r\n  }\r\n)\r\n\r\nexport const ChatMessageItem = ({ message }: ChatMessageItemProps) => {\r\n  const messageItemRef = useRef(null)\r\n\r\n  return <MessageItem ref={messageItemRef} message={message} />\r\n}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u5b9e\u73b0",(0,s.jsx)(r.code,{children:"ChatMessages"}),"\u7ec4\u4ef6\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",metastring:'title="apps/client/src/pages/conversation/messages/messages.tsx"',children:"import { useCallback, useEffect, useRef, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { CircularProgress } from '@nextui-org/react'\r\nimport { GroupMessageVo } from '@ying-chat/shared'\r\nimport { conversationApi } from '@/api'\r\nimport { ScollBox, ScollBoxHandle } from '@/components/scroll-box'\r\nimport { ChatMessageItem } from './message-item'\r\n\r\nconst SIZE = 30\r\n\r\nconst useMessages = () => {\r\n  const navigate = useNavigate()\r\n  const { groupId } = useParams()\r\n\r\n  const topMessageId = useRef(0)\r\n  const [messages, setMessageList] = useState<GroupMessageVo[]>([])\r\n  const [firstLoaded, setFirstLoaded] = useState(false)\r\n  const [loaded, setLoaded] = useState(false)\r\n\r\n  const addPrevMessage = useCallback((prevMessage: GroupMessageVo[]) => {\r\n    setMessageList(messages => [...prevMessage, ...messages])\r\n  }, [])\r\n\r\n  const addNewMessage = useCallback((newMessage: GroupMessageVo) => {\r\n    setMessageList(messages => [...messages, newMessage])\r\n  }, [])\r\n\r\n  const loadMessages = async (groupId: number, cursorId?: number) => {\r\n    const res = await conversationApi.getGroupConversationMessageList({\r\n      groupId,\r\n      size: SIZE,\r\n      cursorId: cursorId || undefined\r\n    })\r\n    if (!res.length || res.length < SIZE) {\r\n      setLoaded(true)\r\n    }\r\n    return res\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (messages.length) {\r\n      topMessageId.current = messages[0].id\r\n    }\r\n  }, [messages])\r\n\r\n  const loadPrevMessages = useCallback(async () => {\r\n    console.log('loadPrevMessages')\r\n    if (!groupId) return\r\n    const res = await loadMessages(Number(groupId), topMessageId.current)\r\n    addPrevMessage(res.reverse())\r\n  }, [groupId, addPrevMessage])\r\n\r\n  const firstLoadMessages = useCallback(async () => {\r\n    console.log('firstLoadMessages', groupId)\r\n    if (!groupId) return\r\n    try {\r\n      const res = await loadMessages(Number(groupId))\r\n      setMessageList(res.reverse())\r\n      setFirstLoaded(true)\r\n    } catch (error) {\r\n      navigate('/conversation', { replace: true })\r\n    }\r\n  }, [groupId, navigate])\r\n\r\n  useEffect(() => {\r\n    firstLoadMessages()\r\n  }, [firstLoadMessages])\r\n\r\n  return {\r\n    messages,\r\n    firstLoaded,\r\n    loaded,\r\n    addNewMessage,\r\n    loadPrevMessages\r\n  }\r\n}\r\n\r\nexport const ChatMessages = () => {\r\n  const scrollBoxRef = useRef<ScollBoxHandle>(null)\r\n  const { messages, firstLoaded, loaded, loadPrevMessages } = useMessages()\r\n\r\n  useEffect(() => {\r\n    if (firstLoaded) {\r\n      scrollBoxRef.current?.scrollToBottom()\r\n    }\r\n  }, [firstLoaded])\r\n\r\n  const onTop = useCallback(() => {\r\n    if (!loaded) {\r\n      scrollBoxRef.current?.keepPosition(loadPrevMessages)\r\n    }\r\n  }, [loaded, loadPrevMessages])\r\n\r\n  return (\r\n    <div className=\"flex-1 h-[1px] relative\">\r\n      <ScollBox className=\"h-full\" ref={scrollBoxRef} onTop={onTop}>\r\n        <div className=\"w-full flex justify-center my-4\" aria-label=\"tip\">\r\n          {!loaded ? (\r\n            <CircularProgress aria-label=\"loading\" />\r\n          ) : (\r\n            <p className=\"text-sm text-foreground-500\">no more messages</p>\r\n          )}\r\n        </div>\r\n        {messages.map(el => (\r\n          <ChatMessageItem key={el.id} message={el} />\r\n        ))}\r\n      </ScollBox>\r\n    </div>\r\n  )\r\n}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u5148\u66f4\u65b0\u4e00\u4e0b",(0,s.jsx)(r.code,{children:"utils.ts"}),"\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",metastring:'title="apps/client/src/utils.ts"',children:"// ...\r\nexport function createBlobURL(file: File) {\r\n  if (window.URL) {\r\n    return window.URL.createObjectURL(file)\r\n  } else if (window.webkitURL) {\r\n    return window.webkitURL.createObjectURL(file)\r\n  } else {\r\n    return ''\r\n  }\r\n}\r\n\r\nexport function getVideoFileCover(file: File): Promise<File> {\r\n  return new Promise((resolve, reject) => {\r\n    const videoUrl = createBlobURL(file)\r\n    const video = document.createElement('video')\r\n    video.src = videoUrl\r\n    video.currentTime = 0.5\r\n    video.onerror = reject\r\n    video.onloadeddata = () => {\r\n      const canvas = document.createElement('canvas'),\r\n        width = video.videoWidth,\r\n        height = video.videoHeight\r\n      canvas.width = width\r\n      canvas.height = height\r\n      canvas\r\n        .getContext('2d')\r\n        ?.drawImage(video, 0, 0, canvas.width, canvas.height)\r\n      canvas.toBlob(\r\n        blob => {\r\n          if (!blob) {\r\n            reject(blob)\r\n            return\r\n          }\r\n          resolve(new File([blob], 'cover', { type: 'image/jpeg' }))\r\n        },\r\n        'image/jpeg',\r\n        1\r\n      )\r\n    }\r\n  })\r\n}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u5b8c\u5584",(0,s.jsx)(r.code,{children:"ConversationDetail"}),"\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",metastring:'title="apps/client/src/pages/conversation/conversation-detail.tsx"',children:"import { useParams } from 'react-router-dom'\r\nimport { ChatInput } from '@/components/chat/chat-input'\r\nimport { conversationApi } from '@/api'\r\nimport { GroupMessageType } from '@ying-chat/shared'\r\nimport { getVideoFileCover } from '@/utils'\r\nimport { ChatMessages } from './messages/messages'\r\n\r\nexport const ConversationDetail = () => {\r\n  const { groupId } = useParams()\r\n\r\n  const onSend = async (type: GroupMessageType, content: string | File) => {\r\n    if (type === GroupMessageType.Text) {\r\n      await conversationApi.sendTextGroupMessage({\r\n        groupId: Number(groupId),\r\n        content: content as string\r\n      })\r\n    } else if (type === GroupMessageType.Image) {\r\n      await conversationApi.sendImageGroupMessage(content as File, groupId + '')\r\n    } else if (type === GroupMessageType.Video) {\r\n      const coverFile = await getVideoFileCover(content as File)\r\n      await conversationApi.sendVideoGroupMessage(\r\n        content as File,\r\n        coverFile,\r\n        groupId + ''\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"h-full flex flex-col bg-content3\">\r\n      <ChatMessages />\r\n      <ChatInput onSend={onSend} />\r\n    </div>\r\n  )\r\n}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u4fee\u6539\u4e00\u4e0b",(0,s.jsx)(r.code,{children:"scroll-box"}),"\u6eda\u52a8\u6761\u7684\u6837\u5f0f\uff0c\u5728",(0,s.jsx)(r.code,{children:"index.css"}),"\u6587\u4ef6\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-css",metastring:'title="apps/client/src/index.css"',children:"// ...\r\n.scroll-box::-webkit-scrollbar {\r\n  width: 14px;\r\n}\r\n\r\n.scroll-box::-webkit-scrollbar-thumb {\r\n  border-radius: 4px;\r\n  --tw-bg-opacity: 1;\r\n  background-color: hsl(\r\n    var(--nextui-content2) / var(--nextui-content2-opacity, var(--tw-bg-opacity))\r\n  );\r\n}\r\n\r\n.scroll-box::-webkit-scrollbar-track {\r\n  --tw-bg-opacity: 1;\r\n  background-color: hsl(\r\n    var(--nextui-content3) / var(--nextui-content3-opacity, var(--tw-bg-opacity))\r\n  );\r\n}\n"})}),"\n",(0,s.jsx)(r.p,{children:"\u6700\u540e\u53ef\u4ee5\u6574\u4f53\u6d4b\u8bd5\u4e00\u4e0b\u3002"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{src:n(520).A+"",width:"1920",height:"1080"})}),"\n",(0,s.jsx)(r.p,{children:"\u672c\u8282\u5230\u6b64\u7ed3\u675f\u3002"})]})}function p(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},607:(e,r,n)=>{n.d(r,{A:()=>s});const s=n.p+"assets/images/01-54365cbc3c496dbb4e29f80ac10e9aab.gif"},520:(e,r,n)=>{n.d(r,{A:()=>s});const s=n.p+"assets/images/02-272b936f3f1462017a790a4d339e8936.gif"},9128:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>i});var s=n(9474);const o={},t=s.createContext(o);function a(e){const r=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(t.Provider,{value:r},e.children)}}}]);