"use strict";(self.webpackChunkying_blog=self.webpackChunkying_blog||[]).push([[1674],{9613:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>g});var r=t(9496);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),m=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=m(e.components);return r.createElement(s.Provider,{value:n},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=m(t),u=o,g=c["".concat(s,".").concat(u)]||c[u]||p[u]||a;return t?r.createElement(g,i(i({ref:n},d),{},{components:t})):r.createElement(g,i({ref:n},d))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[c]="string"==typeof e?e:o,i[1]=l;for(var m=2;m<a;m++)i[m]=t[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8699:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>m});var r=t(8957),o=(t(9496),t(9613));const a={id:"client-theme-style",sidebar_label:"\u524d\u7aef\u9875\u9762\u6837\u5f0f\u548c\u4e3b\u9898\u5207\u6362",title:"\u524d\u7aef\u9875\u9762\u6837\u5f0f\u548c\u4e3b\u9898\u5207\u6362"},i=void 0,l={unversionedId:"ying-chat/client-theme-style",id:"ying-chat/client-theme-style",title:"\u524d\u7aef\u9875\u9762\u6837\u5f0f\u548c\u4e3b\u9898\u5207\u6362",description:"\u672c\u8282\u6765\u628a\u6574\u4e2a\u524d\u7aef\u7684\u9875\u9762\u6837\u5f0f\u5b8c\u5584\u4e00\u4e0b\uff0c\u518d\u628a\u4e3b\u9898\u5207\u6362\u7684\u903b\u8f91\u52a0\u4e0a\u3002",source:"@site/docs/ying-chat/05-client-theme-style.md",sourceDirName:"ying-chat",slug:"/ying-chat/client-theme-style",permalink:"/docs/ying-chat/client-theme-style",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"client-theme-style",sidebar_label:"\u524d\u7aef\u9875\u9762\u6837\u5f0f\u548c\u4e3b\u9898\u5207\u6362",title:"\u524d\u7aef\u9875\u9762\u6837\u5f0f\u548c\u4e3b\u9898\u5207\u6362"},sidebar:"yingChat",previous:{title:"react-router-dom \u642d\u5efa\u9875\u9762",permalink:"/docs/ying-chat/react-router-dom"},next:{title:"\u63a5\u53e3\u521d\u59cb\u5316",permalink:"/docs/ying-chat/api-init"}},s={},m=[{value:"\u767b\u5f55\u6ce8\u518c\u6837\u5f0f\u5b8c\u5584",id:"\u767b\u5f55\u6ce8\u518c\u6837\u5f0f\u5b8c\u5584",level:3},{value:"\u4e3b\u9898\u5207\u6362",id:"\u4e3b\u9898\u5207\u6362",level:3}],d={toc:m},c="wrapper";function p(e){let{components:n,...a}=e;return(0,o.kt)(c,(0,r.Z)({},d,a,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u672c\u8282\u6765\u628a\u6574\u4e2a\u524d\u7aef\u7684\u9875\u9762\u6837\u5f0f\u5b8c\u5584\u4e00\u4e0b\uff0c\u518d\u628a\u4e3b\u9898\u5207\u6362\u7684\u903b\u8f91\u52a0\u4e0a\u3002"),(0,o.kt)("h3",{id:"\u767b\u5f55\u6ce8\u518c\u6837\u5f0f\u5b8c\u5584"},"\u767b\u5f55\u6ce8\u518c\u6837\u5f0f\u5b8c\u5584"),(0,o.kt)("p",null,"\u73b0\u5728\u4f7f\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"NextUI")," \u7684\u7ec4\u4ef6\u628a\u57fa\u7840\u7684\u8868\u5355\u5199\u51fa\u6765"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="apps/client/src/pages/account/login.tsx"',title:'"apps/client/src/pages/account/login.tsx"'},'import { useNavigate } from \'react-router-dom\'\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Divider,\n  Input\n} from \'@nextui-org/react\'\nimport { CircleUserRound, Lock } from \'lucide-react\'\n\nexport const Login = () => {\n  const navigate = useNavigate()\n\n  return (\n    <div className="h-full flex justify-center items-center">\n      <Card className="w-[25rem]">\n        <CardHeader>Login</CardHeader>\n        <Divider />\n        <CardBody>\n          <form>\n            <Input\n              variant="underlined"\n              label="loginName"\n              autoComplete="loginName"\n              endContent={<CircleUserRound />}\n            />\n            <Input\n              label="Password"\n              variant="underlined"\n              endContent={<Lock />}\n              type="password"\n              autoComplete="password"\n            />\n\n            <Input label="Code" variant="underlined" maxLength={4} />\n\n            <div className="flex flex-col gap-4 mt-4">\n              <Button color="primary" type="submit">\n                Log in\n              </Button>\n              <Button\n                onClick={() => {\n                  navigate(\'/register\')\n                }}\n                variant="ghost"\n              >\n                Register now\n              </Button>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </div>\n  )\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="apps/client/src/pages/account/register.tsx"',title:'"apps/client/src/pages/account/register.tsx"'},'import { useNavigate } from \'react-router-dom\'\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Divider,\n  Input\n} from \'@nextui-org/react\'\nimport { CircleUserRound, Mail, Lock } from \'lucide-react\'\n\nexport const Register = () => {\n  const navigate = useNavigate()\n\n  return (\n    <div className="h-full flex justify-center items-center">\n      <Card className="w-[25rem]" title="Register">\n        <CardHeader>Register</CardHeader>\n        <Divider />\n        <CardBody>\n          <form>\n            <Input\n              endContent={<CircleUserRound />}\n              label="Username"\n              autoComplete="new-username"\n              variant="underlined"\n            />\n            <Input endContent={<Mail />} label="Email" variant="underlined" />\n            <Input\n              endContent={<Lock />}\n              type="password"\n              label="Password"\n              autoComplete="new-password"\n              variant="underlined"\n            />\n            <Input\n              endContent={<Lock />}\n              type="password"\n              label="Input password again"\n              autoComplete="off"\n              variant="underlined"\n            />\n\n            <Input\n              label="Code"\n              variant="underlined"\n              maxLength={6}\n              endContent={\n                <Button color="primary" radius="sm">\n                  Send Code\n                </Button>\n              }\n            />\n\n            <div className="flex flex-col gap-4 mt-4">\n              <Button color="primary" type="submit">\n                Register now\n              </Button>\n              <Button\n                variant="ghost"\n                onClick={() => {\n                  navigate(\'/login\')\n                }}\n              >\n                Log in now\n              </Button>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </div>\n  )\n}\n')),(0,o.kt)("h3",{id:"\u4e3b\u9898\u5207\u6362"},"\u4e3b\u9898\u5207\u6362"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://nextui.org/docs/customization/dark-mode"},"NextUI \u6697\u9ed1\u4e3b\u9898\u6587\u6863")),(0,o.kt)("p",null,"\u63a5\u4e0b\u6765\u6dfb\u52a0\u6697\u9ed1\u4eae\u8272\u4e3b\u9898\u5207\u6362\u529f\u80fd\uff0cNextUI \u5b98\u65b9\u6587\u6863\u5199\u5f97\u5f88\u96be\u53d7\uff0c\u5b83\u662f\u5728\u7236\u5143\u7d20\u4e0a\u6dfb\u52a0\u4e00\u4e2a ",(0,o.kt)("inlineCode",{parentName:"p"},"dark")," \u5c5e\u6027\u53bb\u5207\u6362\uff0c\u6211\u53c2\u8003 ",(0,o.kt)("inlineCode",{parentName:"p"},"shadcn/ui")," \u7684\u5199\u6cd5\u52a0\u4e86\u4e00\u4e2a\u66f4\u597d\u4f7f\u7684\u3002"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://ui.shadcn.com/docs/dark-mode/vite"},"shadcn/ui \u6697\u9ed1\u4e3b\u9898\u6587\u6863")),(0,o.kt)("p",null,"\u5148\u6dfb\u52a0\u4e00\u4e2a ",(0,o.kt)("inlineCode",{parentName:"p"},"ThemeProvider"),"\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="apps/client/src/components/theme-provider.tsx"',title:'"apps/client/src/components/theme-provider.tsx"'},"import { createContext, useContext, useEffect, useState } from 'react'\n\ntype Theme = 'dark' | 'light' | 'system'\n\ntype ThemeProviderProps = {\n  children: React.ReactNode\n  defaultTheme?: Theme\n  storageKey?: string\n}\n\ntype ThemeProviderState = {\n  theme: Theme\n  setTheme: (theme: Theme) => void\n}\n\nconst initialState: ThemeProviderState = {\n  theme: 'system',\n  setTheme: () => null\n}\n\nconst ThemeProviderContext = createContext<ThemeProviderState>(initialState)\n\nexport function ThemeProvider({\n  children,\n  defaultTheme = 'system',\n  storageKey = 'vite-ui-theme',\n  ...props\n}: ThemeProviderProps) {\n  const [theme, setTheme] = useState<Theme>(\n    () => (localStorage.getItem(storageKey) as Theme) || defaultTheme\n  )\n\n  useEffect(() => {\n    const root = window.document.documentElement\n\n    root.classList.remove('light', 'dark')\n\n    if (theme === 'system') {\n      const systemTheme = window.matchMedia('(prefers-color-scheme: dark)')\n        .matches\n        ? 'dark'\n        : 'light'\n\n      root.classList.add(systemTheme)\n      return\n    }\n\n    root.classList.add(theme)\n  }, [theme])\n\n  const value = {\n    theme,\n    setTheme: (theme: Theme) => {\n      localStorage.setItem(storageKey, theme)\n      setTheme(theme)\n    }\n  }\n\n  return (\n    <ThemeProviderContext.Provider {...props} value={value}>\n      {children}\n    </ThemeProviderContext.Provider>\n  )\n}\n\nexport const useTheme = () => {\n  const context = useContext(ThemeProviderContext)\n\n  if (context === undefined)\n    throw new Error('useTheme must be used within a ThemeProvider')\n\n  return context\n}\n")),(0,o.kt)("p",null,"\u7136\u540e\u628a ",(0,o.kt)("inlineCode",{parentName:"p"},"ThemeProvider")," \u6dfb\u52a0\u5230\u6839\u7ec4\u4ef6\uff0c\u628a ",(0,o.kt)("inlineCode",{parentName:"p"},"defaultTheme")," \u8bbe\u7f6e\u6210 ",(0,o.kt)("inlineCode",{parentName:"p"},"dark"),"\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="apps/client/src/App.tsx"',title:'"apps/client/src/App.tsx"'},"import { RouterProvider } from 'react-router-dom'\nimport { ThemeProvider } from '@/components/theme-provider'\nimport { router } from '@/router'\n\nfunction App() {\n  return (\n    <ThemeProvider defaultTheme=\"dark\">\n      <RouterProvider router={router}></RouterProvider>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n")),(0,o.kt)("p",null,"\u518d\u6dfb\u52a0\u4e00\u4e2a ",(0,o.kt)("inlineCode",{parentName:"p"},"ModeToggle")," \u7ec4\u4ef6\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="apps/client/src/components/mode-toggle.tsx"',title:'"apps/client/src/components/mode-toggle.tsx"'},"import { Moon, Sun } from 'lucide-react'\nimport {\n  Dropdown,\n  DropdownTrigger,\n  DropdownMenu,\n  DropdownItem,\n  Button\n} from '@nextui-org/react'\nimport { useTheme } from '@/components/theme-provider'\n\nexport function ModeToggle() {\n  const { setTheme } = useTheme()\n\n  return (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button size=\"lg\" isIconOnly>\n          <Sun className=\"h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\" />\n          <Moon className=\"absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\" />\n        </Button>\n      </DropdownTrigger>\n      <DropdownMenu aria-label=\"mode menu\">\n        <DropdownItem onClick={() => setTheme('light')}>Light</DropdownItem>\n        <DropdownItem onClick={() => setTheme('dark')}>Dark</DropdownItem>\n        <DropdownItem onClick={() => setTheme('system')}>System</DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  )\n}\n")),(0,o.kt)("p",null,"\u6700\u540e\u628a ",(0,o.kt)("inlineCode",{parentName:"p"},"ModeToggle")," \u7ec4\u4ef6\u653e\u5230 ",(0,o.kt)("inlineCode",{parentName:"p"},"NavSidebar")," \u91cc\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="apps/client/src/components/layout/nav-sidebar.tsx"',title:'"apps/client/src/components/layout/nav-sidebar.tsx"'},"// ...\nimport { ModeToggle } from '@/components/mode-toggle'\n\nexport const NavSidebar = () => {\n  // ...\n\n  return (\n    <div className=\"flex flex-col gap-4 items-center w-[72px] py-4 bg-content1\">\n      // ...\n      <ModeToggle />\n    </div>\n  )\n}\n")),(0,o.kt)("p",null,"\u6700\u540e\u67e5\u770b\u4e00\u4e0b\u6548\u679c"),(0,o.kt)("p",null,(0,o.kt)("img",{src:t(4878).Z,width:"1920",height:"1080"})))}p.isMDXComponent=!0},4878:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/01-a58d75a7ae4bc12af3f97e51c3481fac.gif"}}]);